<?php
	include '../base/lc_header.php';
	include '../base/lc_util.php';
?>

<!--------------------------- Body Begin ---------------------------------------->

<div class="Section1">

<br>
<h1>◈4. 쉐이더 연습◈</h1>

<p class=MsoNormal>이 장은 앞서 배운<span lang=EN-US> HLSL</span>을 바탕으로 게임에 적용할 만한 쉐이더
코드를 만들어 보는 연습의 장입니다<span lang=EN-US>. </span>정점 쉐이더 보다 픽셀 쉐이더가 양적<span
lang=EN-US>, </span>질적으로 가장 많이 게임에서 적용되는 분야이므로 픽셀 처리부분을 집중적으로 연습하겠습니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal>픽셀 쉐이더를 사용하는 부분은 여러 가지가 있겠지만 특히<span lang=EN-US> Post Effect
</span>부분은 같은 장면이라도 전혀 다른 느낌의 연출을 만들 수 있어 게임이 그래픽이 아닌 프로그래머에서 렌더링 품질이 좌우되는 유일한 영역이기도
합니다<span lang=EN-US>. </span>다음 그림을 보면 평범한 장면도 얼마든지 기획의 의도대로 화면을 만들 수 있고 연출에 대한
품질도 개선 시킬 수 있음을 볼 수 있습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img width=243 height=181
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image001.jpg">&nbsp;<img width=241 height=181
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image002.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;</span>쉐이더 적용 전<span lang=EN-US>, </span>적용
후<span lang=EN-US>(Blur-Glare)&gt;</span></p>

<p class=MsoNormal><span lang=EN-US><img width=242 height=181
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image003.gif">&nbsp;</span><span lang=EN-US><img
width=242 height=181 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image004.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;</span>연필선 효과<span lang=EN-US>, </span>직소<span
lang=EN-US>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>위의 그림은 게임에서 자주 등장하는 흐림<span lang=EN-US>(Blur) </span>효과 또는<span
lang=EN-US> Bloom </span>효과 입니다<span lang=EN-US>. </span>이 것을 스스로 만들 수 있으려면 픽셀 처리가
손에 익어야 합니다<span lang=EN-US>. </span>이 과정에서는 손쉽게 구현할 수 있는 모자이크<span lang=EN-US>(Mosaic)
</span>효과를 시작으로 화면 잡음<span lang=EN-US>(Noise), </span>해칭<span lang=EN-US>(Hatching)
</span>등을 먼저 연습할 것입니다<span lang=EN-US>. </span>다음으로 흐림<span lang=EN-US>(Blur) </span>효과를
구현할 것입니다<span lang=EN-US>. </span>흐림 효과를 할 수 있다면 포스트 이펙트를 잘 알고 있다는 것이며 이의 연습으로 크로스
효과도 만들어 보겠습니다<span lang=EN-US>. </span>마지막은 외곽선 추출을 이용해서<span lang=EN-US>, </span>수묵화
효과 등 비 실사 렌더링도 사용해 보겠습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:14.0pt'>4.1 </span><span
style='font-size:14.0pt'>모자이크<span lang=EN-US>(Mosaic)</span></span></p>

<p class=MsoNormal><span lang=EN-US>HLSL </span>이용한<span lang=EN-US> Post
Effect</span>의 가장 좋은 연습은 모자이크 효과입니다<span lang=EN-US>. </span>모자이크 효과는 특별한 기술 없이
자와 컴퍼스 연습장<span lang=EN-US> 1</span>장만 있으면 기하학적 무늬를 화면 전체에 만들어 낼 수 있습니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal>예를 들어 가며 설명하겠습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>4.1.1 </span><span
style='font-size:12.0pt'>직사각형 모자이크</span></p>

<p class=MsoNormal>다음 그림은 화면에 정사각형 패턴을 적용한 것입니다<span lang=EN-US>. </span>이것은 아주
간단한 방법으로 먼저 화면 전체를 실시간 텍스처에 저장을 합니다<span lang=EN-US>. </span>이 텍스처의<span
lang=EN-US> UV </span>좌표를 정수형으로 캐스팅합니다<span lang=EN-US>. </span>그러면 소수점 부분이 사라져
버리게 됩니다<span lang=EN-US>. </span>그런데 바로 캐스팅하면 좌표가<span lang=EN-US> [0, 1] </span>범위이기
때문에 전부<span lang=EN-US> 0</span>이 됩니다<span lang=EN-US>. </span>따라서 정수를 필요한 만큼 곱한
다음 캐스팅하고 이를 다시 곱한 정수만큼 나누는 것입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>예를 들어 사각형의 가로 간결을<span lang=EN-US> 10</span>으로 하고 싶으면<span
lang=EN-US> u </span>좌표에<span lang=EN-US> 10</span>을 곱하고<span lang=EN-US> int </span>형으로
캐스팅 한 다음 다시<span lang=EN-US> 10</span>으로 나눕니다<span lang=EN-US>. </span>그러면 소수정<span
lang=EN-US> 0.1xxx</span>에서<span lang=EN-US> xxx</span>는 잘려 버리게 됩니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img width=274 height=204
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image005.jpg">&nbsp;&nbsp; &nbsp;<img width=200
height=204 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image006.gif"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;</span>직사각형 모자이크 효과<span lang=EN-US>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>다음은 이것을 구현한 쉐이더 코드의 일부 입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>texture</span><span lang=EN-US> m_TxDif;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>sampler</span><span lang=EN-US> smpDif = </span><span
lang=EN-US style='color:blue'>sampler_state</span></p>

<p class=MsoNormal><span lang=EN-US>{</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>texture</span><span lang=EN-US> = &lt;m_TxDif&gt;;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; …</span></p>

<p class=MsoNormal><span lang=EN-US>};</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>struct</span><span lang=EN-US> </span><span
lang=EN-US style='color:blue'>SvsOut</span></p>

<p class=MsoNormal><span lang=EN-US>{</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>float4</span><span lang=EN-US> </span><span lang=EN-US
style='color:#A000A0'>Pos</span><span lang=EN-US>:</span><span lang=EN-US
style='color:blue'>POSITION</span><span lang=EN-US>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>float2</span><span lang=EN-US> </span><span lang=EN-US
  style='color:#A000A0'>Tex</span><span lang=EN-US>:</span><span lang=EN-US
style='color:blue'>TEXCOORD0</span><span lang=EN-US>;</span></p>

<p class=MsoNormal><span lang=EN-US>};</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>float</span><span lang=EN-US>&nbsp;&nbsp; m_TxD=</span><span
lang=EN-US style='color:red'>20</span><span lang=EN-US>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// Image Mosaic Delta</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US> </span><span
lang=EN-US style='color:#880000'>PxlProc</span><span lang=EN-US>(</span><span
lang=EN-US style='color:blue'>SvsOut</span><span lang=EN-US> In) : </span><span
lang=EN-US style='color:blue'>COLOR0</span></p>

<p class=MsoNormal><span lang=EN-US>{</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>float4</span><span lang=EN-US> Out=</span><span lang=EN-US
style='color:red'>0</span><span lang=EN-US>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>float</span><span lang=EN-US>&nbsp;&nbsp; u = In.</span><span
lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US>.x;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>float</span><span lang=EN-US>&nbsp;&nbsp; v = In.</span><span
lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US>.y;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>int</span><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp; iX = (</span><span
lang=EN-US style='color:blue'>int</span><span lang=EN-US>)(u * m_TxD);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>int</span><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp; iY = (</span><span
lang=EN-US style='color:blue'>int</span><span lang=EN-US>)(v * m_TxD);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>float</span><span lang=EN-US>&nbsp;&nbsp; x = iX/(m_TxD);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>float</span><span lang=EN-US>&nbsp;&nbsp; y = iY/(m_TxD);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Out = </span><span
lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US>(smpDif, </span><span
lang=EN-US style='color:blue'>float2</span><span lang=EN-US>(x,y));</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>return</span><span lang=EN-US> Out;</span></p>

<p class=MsoNormal><span lang=EN-US>}</span><span lang=EN-US> </span></p>

<p class=MsoNormal>포스트 이펙트는 앞서 픽셀 쉐이더에서도 보았듯이 다음 그림처럼 장면을 텍스처에 저장하고 이 텍스처에 픽셀 쉐이더를
이용해서 마치 전체 장면에 이펙트를 주는 것처럼 만드는 기술입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>앞의 쉐이더 코드를 연습하기 위해서 여러분은 이 쉐이더 코드를 올릴 테스트용 프로그램이 필요합니다<span
lang=EN-US>. </span>만약 게임 제작 코드에 이 것들을 넣는 다면 스파게티 코드가 될 것이라는 것은 분명합니다<span
lang=EN-US>. </span>시간이 좀 들더라도 다음과 같은 테스트용 프로그램을 준비합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img width=274 height=204
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image007.jpg">&nbsp;&nbsp;&nbsp;</span><span
lang=EN-US><img width=274 height=204 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image008.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;</span>쉐이더 테스트용 프로그램<span lang=EN-US>: <a
href="https://github.com/3dapi/dv16_shader4/raw/master/h4_00_screen.zip">h4_00_screen.zip</a> </span>에 직사각형 적용 후<span
lang=EN-US>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><a href="https://github.com/3dapi/dv16_shader4/raw/master/h4_00_screen.zip">h4_00_screen.zip</a></span>의
<span lang=EN-US style='color:blue'>CShaderEx</span><span lang=EN-US> </span>클래스는
쉐이더 코드를 관리하는 클래스입니다<span lang=EN-US>. </span>실행을 하면 위와 같은 세계지도를 화면에 출력하고 있습니다<span
lang=EN-US>. </span>또한<span lang=EN-US> Data </span>폴더를 보면 위의 그림을 표현 하기 위해 기초 쉐이더
코드들이 있습니다<span lang=EN-US>. </span>이 기초 쉐이더 코드 중에서 가장 중요한 것은<span lang=EN-US>
Technique</span>에 있는 함수 컴파일 버전을 픽셀 쉐이더는<span lang=EN-US> &quot;</span><span
lang=EN-US style='color:blue'>compile ps_2_0&quot;</span><span lang=EN-US> </span>으로
즉<span lang=EN-US>, 2.0</span>이상으로 버전을 정해야 합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><a href="https://github.com/3dapi/dv16_shader4/raw/master/h4_00_screen.zip">h4_00_screen.zip</a></span>의<span
lang=EN-US> &quot;Shader.fx&quot; </span>파일에 <span lang=EN-US>&quot;float m_TxD=20&quot;
</span>부분부터 <span lang=EN-US>PxlProc() </span>함수 안까지 복사해서 붙이고 실행하면 앞의 그림 오른쪽과 같은
그림을 얻을 수 있습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>간혹 쉐이더 문법에 다음과 같은 코드를 볼 수 있을 때도 있습니다<span lang=EN-US>. </span>이것은
샘플링을 담당하는 샘플러 객체를<span lang=EN-US> register s3</span>에 지정하는 방법입니다<span
lang=EN-US>. </span>참고로<span lang=EN-US> s0, s1, s2, … </span>는<span
lang=EN-US> GPU</span>의 쉐이더 레지스터 고유 이름입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:blue'>sampler</span><span
lang=EN-US> smp0:</span><span lang=EN-US style='color:#880000'>register</span><span
lang=EN-US>(</span><span lang=EN-US style='color:red'>s3</span><span
lang=EN-US>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이렇게 하면 고정 파이프라인에서<span lang=EN-US> [pDevice-&gt;</span><span
lang=EN-US style='color:#880000'>SetTexture</span><span lang=EN-US>(</span><span
lang=EN-US style='color:red'>3</span><span lang=EN-US>, </span><span
lang=EN-US style='color:fuchsia'>&quot;</span><span style='color:fuchsia'>텍스처<span
lang=EN-US>&quot;</span></span><span lang=EN-US>);] </span>으로 작성한<span
lang=EN-US> 3</span>번에 연결된 텍스처를 샘플링 합니다<span lang=EN-US>. </span>또한 사용자가 고정 함수 파이프라인에서
지정한 주소 지정 방식<span lang=EN-US>(Address Mode)</span>과 필터링<span lang=EN-US>(Filtering)</span>등을
그대로 사용할 수 있습니다<span lang=EN-US>. </span>이런 방식은 쉐이더에서 제대로 표현되고 있는지를 고정파이프라인과 거의 동일한
환경으로 만들고자 할 때 주로 작성합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>위의 구현 후 코드는 <span lang=EN-US><a
href="https://github.com/3dapi/dv16_shader4/raw/master/h4_01_mosaic0_rect1.zip">h4_01_mosaic0_rect1.zip</a></span>에 있습니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>다음으로 준비할 것은 실제 장면에 쉐이더 코드를 올려봐야 하므로 지형 정도만 구현되어 있는 다음과 같은 코드를
준비합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=274 height=203
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image009.jpg">&nbsp;&nbsp; <img border=0 width=274
height=204 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image010.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;</span>쉐이더 적용 대상<span lang=EN-US>: <a
href="https://github.com/3dapi/dv16_shader4/raw/master/h4_00_height.zip">h4_00_height.zip</a>, <a href="https://github.com/3dapi/dv16_shader4/raw/master/h4_00_height_2.zip">h4_00_height_2.zip</a>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>또한 장면을 텍스처에 저장하고 화면에 출력할 수 있도록 코드를 만듭니다<span lang=EN-US>. </span>이
때 <span lang=EN-US><a href="https://github.com/3dapi/dv16_shader4/raw/master/h4_00_screen.zip">h4_00_screen.zip</a></span><span
lang=EN-US> </span>만큼의 코드만 만들어서 실제 장면이 이미지에 출력되는지 코드를 만들어야 합니다<span lang=EN-US>.
</span>앞의 오른쪽 그림처럼 나와야 합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><a href="https://github.com/3dapi/dv16_shader4/raw/master/h4_00_height_2.zip">h4_00_height_2.zip</a></span>의
<span lang=EN-US style='color:blue'>CShaderEx</span><span lang=EN-US> </span>클래스에는
전체 장면의 픽셀을 전달하는<span lang=EN-US> SetTexture() </span>함수가 추가되어 있습니다<span
lang=EN-US>. </span>또한 전체 장면을 텍스처에 저장하기 위해 고정 함수 파이프라인으로 구현한<span lang=EN-US>
&quot;</span>서피스 효과<span lang=EN-US>&quot; </span>장에 있었던 <span lang=EN-US
style='color:blue'>IrenderTarget</span><span lang=EN-US> </span>객체를 이용했습니다<span
lang=EN-US>. IrenderTarget </span>객체 방법은<span lang=EN-US> &quot;</span>서피스 효과<span
lang=EN-US>&quot; </span>부분을 다시 읽어 보기 바랍니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이렇게 해서 우리는 쉐이더 테스트용 프로그램<span lang=EN-US>, </span>장면에 적용해 볼 수
있는 프로그램 두 가지를 준비했습니다<span lang=EN-US>. </span>앞으로 모든 포스트 이펙트에 대한 코드는 쉐이더 테스트용 프로그램에서
먼저 실행해보고<span lang=EN-US>, </span>이후 게임 화면과 유사한 환경에서 이를 다시 실행해 보겠습니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>4.1.2 </span><span
style='font-size:12.0pt'>마름모형 모자이크</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span>직사각형은 너무나 쉬워서 손이 아직 덜 풀렸을 것입니다<span
lang=EN-US>. </span>다음으로 직사각형 보다 약간 난이도 있는 마름모를 적용해 봅시다<span lang=EN-US>. </span>마름모는
의외의 난이도가 있어서 연습장에 한 번 정도는 그려봐야 합니다<span lang=EN-US>. (</span>기하학 문제는 그림을 잘 그리면 쉬워집니다<span
lang=EN-US>.)</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=468 height=319
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image011.gif"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;</span>마름모형<span lang=EN-US> UV</span>인덱스<span
lang=EN-US>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>그림처럼 먼저 <span lang=EN-US>4 </span>구역<span lang=EN-US> A, B,
C, D</span>로 설정합니다<span lang=EN-US>. </span>자세히 보면 마름모로 색상을 칠하려면 중심 되는 지점을 먼저 찾아야
되는데<span lang=EN-US> (0,0), (2,0), …, (1,1), (3,1), …, </span>즉<span
lang=EN-US> X+Y</span>가 짝수 인 경우가 중심이 됩니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>또한 각 점에 대해서 앞서 직사각형에서처럼 곱하기<span lang=EN-US
style='font-family:Wingdings'>&agrave;</span>캐스팅으로 해서 해당 인덱스를 먼저 구합니다<span lang=EN-US>.
</span>이 인덱스가 중심인지 아닌지는<span lang=EN-US> modular </span>연산자<span lang=EN-US>
&quot;%&quot;</span>를 이용합니다<span lang=EN-US>. &quot;</span>인덱스<span lang=EN-US>%2&quot;
</span>하면 짝수<span lang=EN-US>, </span>홀수 판정이 나오고 둘 다<span lang=EN-US> (0,0) </span>또는<span
lang=EN-US> (1,1)</span>의 경우에는 인덱스가 중심 좌표가 됩니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>또한 인덱스에서 거리<span lang=EN-US> = </span>자신위치<span lang=EN-US>-
</span>중심위치로 <span lang=EN-US><sub><img border=0 width=27 height=17
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image012.gif"></sub>, <sub><img border=0 width=27
height=17 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image013.gif"></sub></span>를 구합니다<span
lang=EN-US>. </span>이것을 가지고 완전한 중심 인덱스를 찾습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>예를 들어 점<span lang=EN-US> p1, p2</span>는 인덱스가<span
lang=EN-US>(0,0) </span>입니다<span lang=EN-US>. </span>이들의 중심점은 변동 없이<span
lang=EN-US> (0,0)</span>을 처음에 정한 인덱스를 중심 인덱스로 합니다<span lang=EN-US>. </span>점<span
lang=EN-US> p1</span>의 경우는 <span lang=EN-US><sub><img border=0 width=85
height=17 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image014.gif"></sub></span>가 됩니다<span
lang=EN-US>. </span>그런데 점<span lang=EN-US> p2</span>는 <span lang=EN-US><sub><img
border=0 width=84 height=17 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image015.gif"></sub></span>이
됩니다<span lang=EN-US>. </span>따라서 점<span lang=EN-US> p2</span>는 <span
lang=EN-US>x </span>방향으로 인덱스<span lang=EN-US> x + 1, y </span>방향으로 인덱스<span
lang=EN-US> y + 1</span>로 각각<span lang=EN-US> 1</span>만큼 올립니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이번에는 점<span lang=EN-US> p3</span>를 봅시다<span lang=EN-US>. </span>이
점의 인덱스는<span lang=EN-US> (1,0)</span>을 이 점은 중심 점이 아닙니다<span lang=EN-US>. </span>따라서
<span lang=EN-US>x </span>방향 또는<span lang=EN-US> y </span>방향으로 중심을 이동해야 하는데<span
lang=EN-US> x </span>방향으로는 앞서 구한 방법대로 <span lang=EN-US><sub><img border=0
width=27 height=17 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image012.gif"></sub></span>를 그대로 구하고<span
lang=EN-US> y </span>방향은<span lang=EN-US> 1</span>을 더한 만큼에서 <span lang=EN-US><sub><img
border=0 width=27 height=17 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image013.gif"></sub></span>를
구합니다<span lang=EN-US>. </span>만약 <span lang=EN-US><sub><img border=0 width=85
height=17 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image014.gif"></sub></span>이면<span
lang=EN-US> y </span>방향으로<span lang=EN-US> 1</span>만큼 증가한 값이 중심 인덱스이고 그렇지 않으면<span
lang=EN-US> x </span>방향으로<span lang=EN-US> 1</span>만큼 올린 값이 중심인덱스가 됩니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal>이와 같은 방법으로 다음과 같은 코드를 만들어 낼 수 있습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US> </span><span
lang=EN-US style='color:#880000'>PxlProc</span><span lang=EN-US>(</span><span
lang=EN-US style='color:blue'>SvsOut</span><span lang=EN-US> In) : </span><span
lang=EN-US style='color:blue'>COLOR0</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>…</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>int</span><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp; mX = nX%</span><span
lang=EN-US style='color:red'>2</span><span lang=EN-US>;</span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:40.0pt;
word-break:keep-all'><span lang=EN-US style='color:blue'>int</span><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp; mY = nY%</span><span lang=EN-US
style='color:red'>2</span><span lang=EN-US>;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>float</span><span lang=EN-US> DelX = </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>; </span><span
lang=EN-US style='color:blue'>float</span><span lang=EN-US> DelY = </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>; </span><span
lang=EN-US style='color:blue'>float</span><span lang=EN-US> Del = </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>if</span><span lang=EN-US>( (</span><span lang=EN-US
style='color:red'>0</span><span lang=EN-US>==mX &amp;&amp; </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>== mY) || (</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US>==mX &amp;&amp; </span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US>== mY))</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DelX
= TxX - nX;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DelY
= TxY - nY;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Del = DelX + DelY;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>if</span><span lang=EN-US>(Del&lt;</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US>)</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; U
= nX;&nbsp;&nbsp;&nbsp; V = nY;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>else</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; U
= nX + </span><span lang=EN-US style='color:red'>1</span><span lang=EN-US>.f;</span></p>

<p class=MsoNormal align=left style='margin-left:80.0pt;text-align:left;
text-indent:40.0pt;word-break:keep-all'><span lang=EN-US>V = nY + </span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US>.f;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>else</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DelX
= TxX - nX;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DelY
= nY+</span><span lang=EN-US style='color:red'>1</span><span lang=EN-US> - TxY;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Del = DelX + DelY;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>if</span><span lang=EN-US>(Del&lt;</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US>)</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; U
= nX;</span></p>

<p class=MsoNormal align=left style='margin-left:80.0pt;text-align:left;
text-indent:40.0pt;word-break:keep-all'><span lang=EN-US>V = nY + </span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US>.f;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>else</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; U
= nX + </span><span lang=EN-US style='color:red'>1</span><span lang=EN-US>.f;</span></p>

<p class=MsoNormal align=left style='margin-left:80.0pt;text-align:left;
text-indent:40.0pt;word-break:keep-all'><span lang=EN-US>V = nY;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; U /= m_fRpt;</span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:40.0pt;
word-break:keep-all'><span lang=EN-US>V /= m_fRpt;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Out = </span><span
lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US>(smpDif, </span><span
lang=EN-US style='color:blue'>float2</span><span lang=EN-US>(U, V));</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>return</span><span lang=EN-US> Out;</span></p>

<p class=MsoNormal><span lang=EN-US>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<table class=MsoTableGrid border=0 cellspacing=0 cellpadding=0
 style='border-collapse:collapse'>
 <tr>
  <td width=313 valign=top style='width:234.4pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US><img border=0 width=271 height=204
  src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image016.jpg"></span></p>
  <p class=MsoNormal><span lang=EN-US>&lt;</span>마름모<span lang=EN-US>: <a
  href="https://github.com/3dapi/dv16_shader4/raw/master/h4_01_mosaic1_lozenge.zip">h4_01_mosaic1_lozenge.zip</a>&gt;</span></p>
  </td>
  <td width=313 valign=top style='width:234.45pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US><img border=0 width=274 height=204
  src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image017.jpg"></span></p>
  <p class=MsoNormal><span lang=EN-US>&lt;</span>마름모<span lang=EN-US>: <a
  href="https://github.com/3dapi/dv16_shader4/raw/master/h4_01_mosaic1_lozenge_a.zip">h4_01_mosaic1_lozenge_a.zip</a>&gt;</span></p>
  </td>
 </tr>
</table>

<span lang=EN-US style='font-size:10.0pt;font-family:바탕체'><br clear=all
style='page-break-before:always'>
</span>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>전체 코드는 <span lang=EN-US><a href="https://github.com/3dapi/dv16_shader4/raw/master/h4_01_mosaic1_lozenge.zip">h4_01_mosaic1_lozenge.zip</a>
</span>또는 <span lang=EN-US><a href="https://github.com/3dapi/dv16_shader4/raw/master/h4_01_mosaic1_lozenge_a.zip">h4_01_mosaic1_lozenge_a.zip</a>
</span>의<span lang=EN-US> &quot;data&quot; </span>폴더의 <span lang=EN-US>&quot;shader.fx&quot;
</span>파일을 참고 하기 바랍니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>4.1.3 </span><span
style='font-size:12.0pt'>은행잎 모자이크<span lang=EN-US> 1</span></span></p>

<p class=MsoNormal>마름모 형태는 쉐이더 코드보다 기하학적 패턴 만들기에 더 노력이 들었습니다<span lang=EN-US>. </span>지금
하고자 하는 은행잎 모양도 마름모와 비슷하게 코드를 만들기 보다는 그림을 그리고 해석하는 데 시간이 더 많이 듭니다<span
lang=EN-US>. </span>이런 패턴 만드는 일을 계속 하다 보면 포스트 이펙트에서 픽셀 쉐이더의 역할이 선명해 질것입니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=516 height=352
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image018.gif"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;</span>은행잎 패턴<span lang=EN-US>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>그림을 보면<span lang=EN-US> x,y</span>인덱스의 범위를<span lang=EN-US>
[0, 1]</span>로 만들 때 이 정사각형 안의<span lang=EN-US> u, v</span>위치는 황색 점<span
lang=EN-US> A, B, C, D</span>들 중 하나에서 샘플링 해야 합니다<span lang=EN-US>. </span>가장 편하게
만들 수 있는 코드는 점들을 돌아가면서 샘플링 하되 거리를 비교해서 거리가<span lang=EN-US> 0.5(1</span>의 반지름<span
lang=EN-US>) </span>안에 있을 때만 샘플링 하는 것입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>예를 들어 점<span lang=EN-US> p1</span>은<span lang=EN-US> A</span>와
거리를 구합니다<span lang=EN-US>. </span>구한 거리는 그림에서 보듯<span lang=EN-US> 0.5</span>가 안되어
샘플링을 합니다<span lang=EN-US>. &nbsp;</span>다음 점<span lang=EN-US> B</span>와 비교하면 거리가<span
lang=EN-US> 0.5</span>보다 작습니다<span lang=EN-US>. B</span>의 위치에서 샘플링하고 이전 값을 바꿉니다<span
lang=EN-US>. </span>다음 점<span lang=EN-US> C</span>와 비교해보면 거리가<span lang=EN-US>
0.5</span>를 넘게 되어<span lang=EN-US> C</span>에서는 샘플링을 안 합니다<span lang=EN-US>. </span>마지막<span
lang=EN-US> D</span>도 마찬가지로 거리가<span lang=EN-US> 0.5</span>보다 커서 샘플링을 안 합니다<span
lang=EN-US>. </span>이렇게 되면<span lang=EN-US> p1</span>의 색상은 점<span lang=EN-US> A</span>가
됩니다<span lang=EN-US>. </span>또 다른 점<span lang=EN-US> p2</span>를 봅시다<span
lang=EN-US>. p2</span>는<span lang=EN-US> A, B </span>점에 대해서는 거리가<span
lang=EN-US> 0.5</span>보다 커서 샘플링을 안 합니다<span lang=EN-US>. </span>점<span
lang=EN-US> C</span>와 거리는<span lang=EN-US> 0.5 </span>미만이므로 샘플링을 합니다<span
lang=EN-US>. </span>그런데 점<span lang=EN-US> D</span>와도 거리가<span lang=EN-US> 0.5 </span>미만이라
최종 점<span lang=EN-US> D</span>에서 샘플링 한 색상을 최종 색상으로 정합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>코드의 구현에서는 거리로 비교하지 않고 거리의 제곱으로 비교합니다<span lang=EN-US>. </span>따라서<span
lang=EN-US> 0.5</span>가 아닌<span lang=EN-US> 0.25</span>로 비교합니다<span lang=EN-US>.
</span>또한 색상은 어떤 식으로든 결정이 되어야 하므로 최초 점<span lang=EN-US> A</span>에서 무조건 샘플링을 하게 합니다<span
lang=EN-US>. </span>이렇게 되면 중간에 색상을 잃어버리는 일을 없어 집니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이 내용을 가지고 쉐이더 코드를 구현하면 다음과 같습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>float</span><span lang=EN-US>&nbsp;&nbsp; m_fRpt=</span><span
lang=EN-US style='color:red'>20</span><span lang=EN-US>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// Image Repeat</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US> </span><span
lang=EN-US style='color:#880000'>PxlProc</span><span lang=EN-US>(</span><span
lang=EN-US style='color:blue'>SvsOut</span><span lang=EN-US> In) : </span><span
lang=EN-US style='color:blue'>COLOR0</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>float2</span><span lang=EN-US>&nbsp; Tx = In.</span><span
lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US> * m_fRpt;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>float2</span><span lang=EN-US>&nbsp; Del=</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>float2</span><span lang=EN-US>&nbsp; t=</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>int</span><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp; iX = (</span><span
lang=EN-US style='color:blue'>int</span><span lang=EN-US>)(In.</span><span
lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US>.x * m_fRpt);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>int</span><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp; iY = (</span><span
lang=EN-US style='color:blue'>int</span><span lang=EN-US>)(In.</span><span
lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US>.y * m_fRpt);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:green'>// </span><span style='color:green'>처음 시작<span lang=EN-US>(0.5,
0)</span></span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t&nbsp; = </span><span
lang=EN-US style='color:blue'>float2</span><span lang=EN-US>(</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>.</span><span lang=EN-US
style='color:red'>5</span><span lang=EN-US> + iX, </span><span lang=EN-US
style='color:red'>0</span><span lang=EN-US> + iY);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t /= m_fRpt;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Out = </span><span
lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US>( smpDif, t);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:green'>// (0, 0.5)</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t&nbsp; &nbsp;= </span><span
lang=EN-US style='color:blue'>float2</span><span lang=EN-US>(</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>.</span><span lang=EN-US
style='color:red'>0</span><span lang=EN-US> + iX, </span><span lang=EN-US
style='color:red'>0</span><span lang=EN-US>.</span><span lang=EN-US
style='color:red'>5</span><span lang=EN-US> + iY);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Del = Tx - t;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>if</span><span lang=EN-US>( Del.x*Del.x + Del.y*Del.y&lt;=</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>.</span><span lang=EN-US
style='color:red'>25</span><span lang=EN-US>)</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t
/= m_fRpt;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Out
= </span><span lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US>( smpDif,
t);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:green'>// (1, 0.5)</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t&nbsp; &nbsp;= </span><span
lang=EN-US style='color:blue'>float2</span><span lang=EN-US>(</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US>.</span><span lang=EN-US
style='color:red'>0</span><span lang=EN-US> + iX, </span><span lang=EN-US
style='color:red'>0</span><span lang=EN-US>.</span><span lang=EN-US
style='color:red'>5</span><span lang=EN-US> + iY);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Del = Tx - t;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>if</span><span lang=EN-US>( Del.x*Del.x + Del.y*Del.y&lt;=</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>.</span><span lang=EN-US
style='color:red'>25</span><span lang=EN-US>)</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t
/= m_fRpt;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Out
= </span><span lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US>( smpDif,
t);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:green'>// (0.5, 1)</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t&nbsp; &nbsp;= </span><span
lang=EN-US style='color:blue'>float2</span><span lang=EN-US>(</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>.</span><span lang=EN-US
style='color:red'>5</span><span lang=EN-US> + iX, </span><span lang=EN-US
style='color:red'>1</span><span lang=EN-US>. + iY);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Del = Tx - t;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>if</span><span lang=EN-US>( Del.x*Del.x + Del.y*Del.y&lt;=</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>.</span><span lang=EN-US
style='color:red'>25</span><span lang=EN-US>)</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t
/= m_fRpt;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Out
= </span><span lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US>( smpDif,
t);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>return</span><span lang=EN-US> Out;</span></p>

<p class=MsoNormal><span lang=EN-US>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<table class=MsoTableGrid border=0 cellspacing=0 cellpadding=0
 style='border-collapse:collapse'>
 <tr>
  <td width=313 valign=top style='width:234.4pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US><img border=0 width=272 height=204
  src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image019.jpg"></span></p>
  <p class=MsoNormal><span lang=EN-US>&lt;</span>은행잎 패턴<span lang=EN-US>: <a
  href="https://github.com/3dapi/dv16_shader4/raw/master/h4_01_mosaic1_ginkgo.zip">h4_01_mosaic1_ginkgo.zip</a>&gt;</span></p>
  </td>
  <td width=313 valign=top style='width:234.45pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US><img border=0 width=274 height=204
  src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image020.jpg"></span></p>
  <p class=MsoNormal><span lang=EN-US>&lt;</span>은행잎 패턴<span lang=EN-US>: <a
  href="https://github.com/3dapi/dv16_shader4/raw/master/h4_01_mosaic1_ginkgo_a.zip">h4_01_mosaic1_ginkgo_a.zip</a>&gt;</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>전체 코드는 <span lang=EN-US><a href="https://github.com/3dapi/dv16_shader4/raw/master/h4_01_mosaic1_ginkgo.zip">h4_01_mosaic1_ginkgo.zip</a>,
<a href="https://github.com/3dapi/dv16_shader4/raw/master/h4_01_mosaic1_ginkgo_a.zip">h4_01_mosaic1_ginkgo_a.zip</a></span>을 참고하기
바랍니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>4.1.4 </span><span
style='font-size:12.0pt'>은행잎 모자이크<span lang=EN-US> 2</span></span></p>

<p class=MsoNormal>직사각형<span lang=EN-US>, </span>마름모<span lang=EN-US>, </span>은행잎
형태는 손으로 계산할 수 있어서 프로그램이 가능합니다<span lang=EN-US>. </span>그런데 이렇게 직접 패턴에 대한 구현을 쉐이더
코드로 만드는 것은 많은 부담이 아닐 수 없습니다<span lang=EN-US>. </span>만약 그래픽으로 만든 패턴이 있으면 프로그램은 패턴
이미지에 저장된 픽셀을 새로운 샘플링 좌표 <span lang=EN-US>u, v </span>로 이<span lang=EN-US> u, v</span>로
바꾸고 화면에 출력할 텍스처의 픽셀을 샘플링 한다면 프로그램은 상당히 간소화 될 것이라는 것은 분명합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>다음 그림은 그래픽 패턴입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=114 height=114
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image021.gif">&nbsp;<img border=0 width=114
height=114 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image022.gif">&nbsp;<img border=0
width=114 height=114 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image023.jpg">&nbsp;<img
border=0 width=67 height=114 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image024.jpg">&nbsp;<img
border=0 width=66 height=114 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image025.jpg">&nbsp;<img
border=0 width=66 height=114 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image026.jpg"> </span></p>

<p class=MsoNormal><span lang=EN-US>&lt;</span>그래픽으로 작성한 패턴<span lang=EN-US>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이 그래픽 패턴 중에서 가장 왼쪽에 있는 사각형을 보기 바랍니다<span lang=EN-US>. </span>이
사각형을 자세히 보면 다음과 같이 색상이 분포되어 있음을 할 수 있습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=456 height=227
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image027.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;</span>패턴 맵<span lang=EN-US>1&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>왼쪽 상단은<span lang=EN-US> RGB(255,255,255)</span>입니다<span
lang=EN-US>. </span>쉐이더에서 색상은 <span lang=EN-US>[0, 1] </span>범위로 사용하고 있으므로 이 범위
값으로 색상으로 바꾸면<span lang=EN-US> RGB(1, 1, 1)</span>이 됩니다<span lang=EN-US>. </span>마찬가지로
우측하단도<span lang=EN-US> RGB(0, 0, 255)</span>로<span lang=EN-US> RGB(0, 0, 1)</span>이
됩니다<span lang=EN-US>. </span>만약 그림의 갈색 점이나 초록색 점을 얻은 색상을<span lang=EN-US> u, v</span>로
사용한다면 이들 점은<span lang=EN-US> RGB(128, 128, 255)</span><span lang=EN-US
style='font-family:Wingdings'>&egrave;</span><span lang=EN-US> RGB(0.5, 0.5, 1)</span>로
옮겨야 정확한 중심이 됩니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>초록 점 또는 갈색 점의 색상<span lang=EN-US> R, G</span>를<span
lang=EN-US> Pattern(r, g) </span>라 하면 중심 색으로 옮기는 이동 크기는<span lang=EN-US>
Pattern( r-0.5, g-0.5)</span>가 됩니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>따라서 새로운<span lang=EN-US> U,V </span>샘플링 좌표는 다음과 같이 결정할 수 있습니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><i><span lang=EN-US>Old(U, V) = </span>기존<span lang=EN-US>(U,
V)</span></i></p>

<p class=MsoNormal><i><span lang=EN-US>New(U, V) = Old(U, V) + </span>중심점으로 이동</i></p>

<p class=MsoNormal style='text-indent:50.0pt'><i><span lang=EN-US>= Old(U, V) +
Pattern( r-0.5, g-0.5)</span></i></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>만약 반복 횟수가 있으면 이 반복 횟수만큼 늘린 다음 줄입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><i><span lang=EN-US>New.U&nbsp;&nbsp;&nbsp;&nbsp; = (Old.U *
RepeatX - 0.5)/RepeatX</span></i></p>

<p class=MsoNormal><i><span lang=EN-US>New.V&nbsp;&nbsp;&nbsp;&nbsp; = (Old.V *
RepeatY - 0.5)/RepeatY</span></i></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이에 대한 쉐이더 구현은 <span lang=EN-US><a
href="https://github.com/3dapi/dv16_shader4/raw/master/h4_01_mosaic2_ginkgo.zip">h4_01_mosaic2_ginkgo.zip</a> </span>의<span
lang=EN-US> &quot;Shader.fx&quot;</span>에 구현되어있습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>texture</span><span lang=EN-US> m_TxPtn;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>sampler</span><span lang=EN-US> smpPtn = </span><span
lang=EN-US style='color:blue'>sampler_state</span></p>

<p class=MsoNormal><span lang=EN-US>{</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>texture</span><span lang=EN-US> = &lt;m_TxPtn&gt;;</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US>};</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>static</span><span lang=EN-US> </span><span
lang=EN-US style='color:blue'>float</span><span lang=EN-US>&nbsp;&nbsp; fRepeatX
= </span><span lang=EN-US style='color:red'>4</span><span lang=EN-US>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>static</span><span lang=EN-US> </span><span
lang=EN-US style='color:blue'>float</span><span lang=EN-US>&nbsp;&nbsp; fRepeatY
= </span><span lang=EN-US style='color:red'>3</span><span lang=EN-US>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>float</span><span lang=EN-US>&nbsp;&nbsp; m_fRpt=</span><span
lang=EN-US style='color:red'>4</span><span lang=EN-US>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// Image Repeat</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US> </span><span
lang=EN-US style='color:#880000'>PxlProc</span><span lang=EN-US>(</span><span
lang=EN-US style='color:blue'>SvsOut</span><span lang=EN-US> In) : </span><span
lang=EN-US style='color:blue'>COLOR0</span></p>

<p class=MsoNormal><span lang=EN-US>{</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>float2</span><span lang=EN-US>&nbsp; TxOld = </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>float2</span><span lang=EN-US>&nbsp; TxNew = </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fRepeatX *= m_fRpt;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fRepeatY *= m_fRpt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TxOld.x = In.</span><span
lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US>.x * fRepeatX;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TxOld.y = In.</span><span
lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US>.y * fRepeatY;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t1 = </span><span
lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US>(smpPtn, TxOld);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:green'>// </span><span style='color:green'>텍스처 좌표를 이동</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TxNew.x = (t1.x - </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>.</span><span lang=EN-US
style='color:red'>5f</span><span lang=EN-US>)/fRepeatX;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TxNew.y = (t1.y - </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>.</span><span lang=EN-US
style='color:red'>5f</span><span lang=EN-US>)/fRepeatY;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TxNew += In.</span><span
lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US>;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t0 = </span><span
lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US>(smpDif, TxNew);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>if</span><span lang=EN-US>(t1.x&gt;</span><span lang=EN-US
style='color:red'>0</span><span lang=EN-US>.</span><span lang=EN-US
style='color:red'>99</span><span lang=EN-US> &amp;&amp; t1.y &gt;</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>.</span><span lang=EN-US
style='color:red'>99</span><span lang=EN-US>)</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Out=
</span><span lang=EN-US style='color:red'>1</span><span lang=EN-US>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>else</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Out
= t0;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>return</span><span lang=EN-US> Out;</span></p>

<p class=MsoNormal><span lang=EN-US>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>패턴 텍스처의 색상을 가져오기 위해서 <span lang=EN-US>sampler smpPtn</span>가
추가 되었습니다<span lang=EN-US>. </span>또한 패턴의 크기가 화면의 가로 세로 비율을 맞추기 위해<span
lang=EN-US> X </span>방향<span lang=EN-US>, Y </span>방향으로<span lang=EN-US> 4, 3</span>을
반복 회수에 곱해서 사용합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>다음 그림은 이 패턴 맵을 적용한 화면입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=274 height=204
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image028.jpg">&nbsp;<img border=0 width=274
height=204 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image029.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=273 height=205
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image030.jpg">&nbsp;<img border=0 width=273
height=205 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image031.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=270 height=204
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image032.jpg">&nbsp;<img border=0 width=270
height=204 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image033.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;</span>패턴 맵<span lang=EN-US>2 - </span>쉐이더
시험 화면<span lang=EN-US>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=254 height=193
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image034.jpg">&nbsp;<img border=0 width=254
height=190 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image035.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=254 height=189
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image036.jpg">&nbsp;<img border=0 width=257
height=188 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image037.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=254 height=189
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image038.jpg">&nbsp;<img border=0 width=255
height=188 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image039.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;</span>패턴 맵<span lang=EN-US>3 - </span>게임
화면<span lang=EN-US>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>만약 두 개의 장면을 교차하는 연출을 만들 때 이 패턴 반복 횟수를 동적으로 변화서 적용해 볼 수 있습니다<span
lang=EN-US>. </span>이것을 실제 화면에 적용해 보면 좋겠지만 여건상 여기서는 그런 것이 있다고 가정하고 하나의 화면에 대해서만
적용하면 다음과 같은 화면을 얻을 수 있습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=272 height=204
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image040.jpg">&nbsp;<img border=0 width=272
height=204 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image041.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;</span>반복 횟수를 변환한 패턴<span lang=EN-US>: <a
href="https://github.com/3dapi/dv16_shader4/raw/master/h4_01_mosaic2_hexa.zip">h4_01_mosaic2_hexa.zip</a>, <a
href="https://github.com/3dapi/dv16_shader4/raw/master/h4_01_mosaic2_hexa_a.zip">h4_01_mosaic2_hexa_a.zip</a>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>4.1.5 </span><span
style='font-size:12.0pt'>직소<span lang=EN-US>(Jigsaw) </span>퍼즐</span></p>

<p class=MsoNormal>패턴의 이미지는 타일처럼 색상의 변화가 연속이어야 합니다<span lang=EN-US>. </span>또한 그
색상들은 중심 색을 정확하게 샘플링 할 수 있어야 합니다<span lang=EN-US>. </span>지금까지 화면에서 사용한 이미지 패턴들은
대칭이 존재해서 만들기가 어렵지 않았습니다<span lang=EN-US>. </span>그런데 직소는 대칭보다 비대칭에 가깝습니다<span
lang=EN-US>. </span>따라서 이전에 해왔던 작업보다 노력이 많이 필요한데 여러분들도 이와 비슷한 것을 주제 삼아 만들어 보기 바랍니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>처음에는 화가 에셔<span lang=EN-US>(M.C. Escher)</span>의 그림을 모티브로 비대칭
패턴을 만들려고 했으나 실패하고 간단한<span lang=EN-US>(</span>사실 간단하지 않은<span lang=EN-US>) </span>직소를
재미 삼아 도전해 보았습니다<span lang=EN-US>. </span>다음 그림은 직소원본과 이 그림을 연속으로 배치 했을 때의 모습입니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=204 height=204
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image042.gif">&nbsp;<img border=0 width=204
height=204 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image043.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;</span>직소 패턴<span lang=EN-US>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이 직소 모양도 쉐이더 코드는 이전과 거의 같습니다<span lang=EN-US>. </span>단지 차이는
전에는 사각형의 패턴의 중심 색을 샘플링 하도록 했지만 이 직소는<span lang=EN-US> x </span>방향의 <span
lang=EN-US>4/5 </span>되는 지점에서는 오른쪽 방향으로<span lang=EN-US> 0.25</span>만큼 더 이동해야 합니다<span
lang=EN-US>. y </span>방향은<span lang=EN-US> 1/5 </span>되는 지점에서 위로<span
lang=EN-US> 0.5</span>만큼 더 이동해야 합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이것을 의사 코드<span lang=EN-US>(pseudo-code) </span>로 만들면</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><i>샘플링 텍스처 좌표 <span lang=EN-US>t(x, y) = Pattern( </span>원본<span
lang=EN-US>(U ,V))</span></i></p>

<p class=MsoNormal><i>새로운 좌표<span lang=EN-US> U = t.x * 1.25 - 0.75</span></i></p>

<p class=MsoNormal><i>새로운 좌표<span lang=EN-US> V = t.y * 1.25 - 0.50</span></i></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이 됩니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>예제의<span lang=EN-US> &quot;shader.fx&quot; </span>파일에는 반복 횟수까지
고려해서 다음과 같이 구현되어 있습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US> </span><span
lang=EN-US style='color:#880000'>PxlProc</span><span lang=EN-US>(</span><span
lang=EN-US style='color:blue'>SvsOut</span><span lang=EN-US> In) : </span><span
lang=EN-US style='color:blue'>COLOR0</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TxOld.x = In.</span><span
lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US>.x * fRepeatX;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TxOld.y = In.</span><span
lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US>.y * fRepeatY;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t1 = </span><span
lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US>(smpPtn, TxOld);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:green'>// </span><span style='color:green'>텍스처 좌표를 이동</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TxNew.x = (t1.x * </span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US>.</span><span lang=EN-US
style='color:red'>25f</span><span lang=EN-US> - </span><span lang=EN-US
style='color:red'>0</span><span lang=EN-US>.</span><span lang=EN-US
style='color:red'>75f</span><span lang=EN-US>)/fRepeatX;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TxNew.y = (t1.y * </span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US>.</span><span lang=EN-US
style='color:red'>25f</span><span lang=EN-US> - </span><span lang=EN-US
style='color:red'>0</span><span lang=EN-US>.</span><span lang=EN-US
style='color:red'>50f</span><span lang=EN-US>)/fRepeatY;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TxNew += In.</span><span
lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US>;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t0 = </span><span
lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US>(smpDif, TxNew);</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>다음 두 그림은 직소 패턴을 이용해서 화면 입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=272 height=204
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image044.jpg">&nbsp;</span><span lang=EN-US><img
border=0 width=274 height=204 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image045.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;</span>직소 패턴<span lang=EN-US>: <a
href="https://github.com/3dapi/dv16_shader4/raw/master/h4_01_mosaic2_jigsaw.zip">h4_01_mosaic2_jigsaw.zip</a>, <a
href="https://github.com/3dapi/dv16_shader4/raw/master/h4_01_mosaic2_jigsaw_a.zip">h4_01_mosaic2_jigsaw_a.zip</a>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>4.1.6 Voronoi
Diagram</span></p>

<p class=MsoNormal>지금까지 만든 모든 패턴을 적용해서 만든 포스트 이펙트는<span lang=EN-US> Non Reality</span>에
가깝습니다<span lang=EN-US>. </span>이것을<span lang=EN-US> 3D</span>에서<span
lang=EN-US> NPR(Non Realistic Rendering)</span>이라 합니다<span lang=EN-US>. NPR </span>중에서
화면 자체를 유화<span lang=EN-US>(Oil Paint), </span>종이 찢어 붙이기<span lang=EN-US>, </span>중세
교회의 모자이크<span lang=EN-US>, </span>스테인드 글라스<span lang=EN-US>(Stained Glass) </span>등과
같은 효과를 만들기 위해서 가장 필요한 것이 화면의 영역을 분할 하는 것입니다<span lang=EN-US>. </span>이 때 보로노이 도형<span
lang=EN-US>(Voronoi Diagram)</span>을 이용합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>이 도형은 다음 그림처럼 인접한 점들과 정확히 절반 되는 위치에서 수직선을 그어 이 선들이 만나는 지점들을 꼭지점으로
다각형 입니다<span lang=EN-US>. </span>보로노이 도형을 만들면 들로네 삼각형<span lang=EN-US>(Delaunay
Triangle)</span>을 구성할 수 있어서 정점을 가지고 적절한 삼각형 메시를 구성하는 데 사용됩니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>보로노이가 영역에 대한 문제이다 보니 지형<span lang=EN-US>, </span>사회적인 서비스 등에서도
많이 이용되는 도형이니 자료를 찾아 보기 바랍니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>이 도형을 <span lang=EN-US>Adobe Photoshop </span>에서도 볼 수 있는데 이미지를
열고<span lang=EN-US> Filter </span><span lang=EN-US style='font-family:Wingdings'>&agrave;</span><span
lang=EN-US> Pixelate </span><span lang=EN-US style='font-family:Wingdings'>&agrave;</span><span
lang=EN-US> Crystallize</span>를 선택하면 이 도형으로 만들어진 이미지를 얻을 수 있습니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=576 height=256
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image046.gif"></span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>보통 보로노이 도형은 가장 왼쪽에 있는 점부터 이 점에 가장 가까운 점들부터 수직선을 그어나가면서 선들끼리 만나는
점을 계속 갱신해가면서 맨 오른쪽의 마지막 점까지 이를 진행 합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>그런데 여기서 우리는 색상을 보로노이 도형에 맞게 채우는 것이 목적이므로 이 알고리즘을 이용하지 않고 다음과
같이 원뿔을 이용할 것입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>보로노이 도형을 위해서 보지 않고 옆에서 보면 수직선은 적당히 큰 반경을 가진 원뿔의 경계가 됨을 쉽게 알 수
있습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=612 height=219
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image047.gif"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;</span>보로노이 도형<span lang=EN-US>: </span>원뿔의
인접 면으로 해석<span lang=EN-US>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>즉 처음부터 색상을 가진<span lang=EN-US> 3</span>차원 원뿔을 임의로 화면에 연출하면 색상이
채워진 보로노이 도형을 만들 수 있게 됩니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>이 때 원뿔의 색상은 화면을 저장한 픽셀에서 가져와야 하는데 원뿔의 위치를 픽셀의<span
lang=EN-US> U,V</span>로 고정시키는 것입니다<span lang=EN-US>. </span>이렇게 되면 원뿔의 위치로 구한 픽셀의
색상이 하나의 원뿔 전체에 같은 색으로 결정이 될 것입니다<span lang=EN-US>. </span>따라서 쉐이더 코드는 정점의 텍스처 좌표에서
샘플링이 아닌 외부에서 주어진 위치에 의해 샘플링 되도록 다음과 같이 만들어야 합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>uniform</span><span lang=EN-US> </span><span
lang=EN-US style='color:blue'>float2</span><span lang=EN-US> m_UV;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US> </span><span
lang=EN-US style='color:#880000'>PxlProc</span><span lang=EN-US>(</span><span
lang=EN-US style='color:blue'>SvsOut</span><span lang=EN-US> In) : </span><span
lang=EN-US style='color:blue'>COLOR0</span></p>

<p class=MsoNormal><span lang=EN-US>{</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>float4</span><span lang=EN-US>&nbsp; Out=</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>float4</span><span lang=EN-US>&nbsp; t0=</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t0 = </span><span
lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US>(smpDif, m_UV);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Out = t0;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>return</span><span lang=EN-US> Out;</span></p>

<p class=MsoNormal><span lang=EN-US>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>복잡할 것 같았는데 코드가 단순하죠<span lang=EN-US>?</span></p>

<p class=MsoNormal>대신 렌더링에서는 다음과 같이 원뿔들을 보로노이 도형을 구성하는 점들만큼 렌더링 해야 합니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>void</span><span lang=EN-US> </span><span
lang=EN-US style='color:blue'>CShaderEx</span><span lang=EN-US>::</span><span
lang=EN-US style='color:#880000'>Render</span><span lang=EN-US>()</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_pEft-&gt;</span><span
lang=EN-US style='color:#880000'>SetTexture</span><span lang=EN-US>(</span><span
lang=EN-US style='color:fuchsia'>&quot;m_TxDif&quot;</span><span lang=EN-US>, m_pTex);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>for</span><span lang=EN-US>(</span><span lang=EN-US
style='color:blue'>int</span><span lang=EN-US> i=</span><span lang=EN-US
style='color:red'>0</span><span lang=EN-US>; i&lt;m_nCon; ++i)</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// </span><span style='color:green'>위치는<span
lang=EN-US> [-1.1] </span>이었으므로 범위를<span lang=EN-US> [0,1]</span>한다<span
lang=EN-US>.</span></span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=PT-BR>uv = ( m_pPos[i] + </span><span lang=PT-BR style='color:blue'>D3DXVECTOR4</span><span
lang=PT-BR>(</span><span lang=PT-BR style='color:red'>1</span><span lang=PT-BR>,</span><span
lang=PT-BR style='color:red'>1</span><span lang=PT-BR>,</span><span lang=PT-BR
style='color:red'>0</span><span lang=PT-BR>,</span><span lang=PT-BR
style='color:red'>0</span><span lang=PT-BR>) ) * </span><span lang=PT-BR
style='color:red'>0</span><span lang=PT-BR>.</span><span lang=PT-BR
style='color:red'>5</span><span lang=PT-BR>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=PT-BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>uv.y = </span><span lang=EN-US style='color:red'>1</span><span
lang=EN-US> - uv.y;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_pEft-&gt;</span><span
lang=EN-US style='color:#880000'>SetVector</span><span lang=EN-US>(</span><span
lang=EN-US style='color:fuchsia'>&quot;m_UV&quot;</span><span lang=EN-US>,
&amp;uv);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=PT-BR>mtI._41 = m_pPos[i].x;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=PT-BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>mtI._42 = m_pPos[i].y;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_pDev-&gt;</span><span
lang=EN-US style='color:#880000'>SetTransform</span><span lang=EN-US>(</span><span
lang=EN-US style='color:#A000A0'>D3DTS_WORLD</span><span lang=EN-US>, &amp;mtI);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_pCon-&gt;</span><span
lang=EN-US style='color:#880000'>DrawSubset</span><span lang=EN-US>(</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }
</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>다음 그림은 보로노이 도형을 출력한 화면입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=272 height=204
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image048.jpg"></span><span lang=EN-US>&nbsp;</span><span
lang=EN-US><img border=0 width=272 height=204
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image049.jpg"></span></p>

<p class=MsoNormal><span lang=PT-BR>&lt;</span>보로노이 도형<span lang=PT-BR>: <a
href="https://github.com/3dapi/dv16_shader4/raw/master/h4_01_mosaic3_voronoi.zip">h4_01_mosaic3_voronoi.zip</a>, <a
href="https://github.com/3dapi/dv16_shader4/raw/master/h4_01_mosaic3_voronoi_a.zip">h4_01_mosaic3_voronoi_a.zip</a>&gt;</span></p>

<p class=MsoNormal><span lang=PT-BR>&nbsp;</span></p>

<p class=MsoNormal>과제<span lang=EN-US>) </span>게임에서 적용 될 수 있는 보로노이 도형과<span
lang=EN-US> NPR</span>에 대한 자료를 정리해 오시오<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:14.0pt'>4.2 </span><span
style='font-size:14.0pt'>화면 섭동 <span lang=EN-US>(Perturbation)</span></span></p>

<p class=MsoNormal>빛은 방안으로 들어와도 안쪽을 보지 못하게 특정한 형태로 울퉁불퉁한 모습한 무늬 유리<span
lang=EN-US>(Embossed Glass)</span>를 본 적이 있을 것입니다<span lang=EN-US>. </span>또한 뜨거운
여름의 아스팔트 위<span lang=EN-US>, </span>장작 불의 열기<span lang=EN-US>, </span>봄철 기온차이로 아지랑이
효과도 본 적이 있을 것입니다<span lang=EN-US>. </span>이러한 자연 현상은 빛의 굴절에 의해 발생합니다<span
lang=EN-US>. </span>그런데 이것을<span lang=EN-US> 3D</span>로 해석을 하면 전체 장면을 구성하는 픽셀을 특정한
형태를 통해서 움직이는 것으로 볼 수 있습니다<span lang=EN-US>. </span>또한 픽셀을 움직이게 한다는 것은 샘플링의<span
lang=EN-US> U, V </span>좌표를 변동하는 것과 같은 의미가 됩니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>이 장에서는 무늬 유리<span lang=EN-US>, </span>파티클<span lang=EN-US>(Particle)</span>을
이용해서 이러한 효과를 구현해 보겠습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>4.2.1 </span><span
style='font-size:12.0pt'>무늬 유리 효과<span lang=EN-US>(</span></span><span
lang=EN-US style='font-size:12.0pt'>Embossed Glass) 1</span></p>

<p class=MsoNormal>무늬 유리는 일정한 무늬가 올록볼록 한 형태로 배치되어 있는 유리입니다<span lang=EN-US>. </span>이
형태를 픽셀의 움직이게 하는 요소로 본다면 우리는 무늬 유리를<span lang=EN-US> 3D</span>로 구현하기 위해서 전체 장면의 픽셀을
움직일 다음과 같은 이미지를 생각할 수 있습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=300 height=225
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image050.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;Embossing </span>텍스처<span lang=EN-US>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>그런데 이 올록볼록한 텍스처 이미지를 어떻게 구성할 것인가 잘 생각해 보면 이전에 원의 형태로 은행잎을 만들
때 쓰던 텍스처를 이용해서 만들 수 있음을 알 수 있습니다<span lang=EN-US>. </span>즉<span lang=EN-US>,
Embossing </span>텍스처를 실시간으로 먼저 만들고 이<span lang=EN-US> Embossing </span>텍스처에 원을 그릴
때 사용하던 이미지를 적당한 크기와 간격으로 렌더링 하면<span lang=EN-US> Embossing </span>텍스처는 우리가 원하는 형태의
무늬 유리가 됩니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>그리고 이<span lang=EN-US> Embossing </span>텍스처를 앞서 패턴을 사용할 때처럼 픽셀을
움직이게 하는 용도로 사용하면 우리는 전체 장면에 무늬 유리 효과를 만들어 낼 수 있게 됩니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><a href="https://github.com/3dapi/dv16_shader4/raw/master/h4_02_emboss0.zip">h4_02_emboss0.zip</a>
</span>의 <span lang=EN-US>INT CShaderEx::Restore() </span>함수에는 다음과 같이<span
lang=EN-US> Embossing </span>텍스처를 만드는 코드가 있습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:blue'>IrenderTarget</span><span
lang=EN-US style='color:black'>* </span><span lang=EN-US>m_pTexP</span><span
lang=EN-US style='color:black'>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// Embossing Texture</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>m_pTexP</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>BeginScene</span><span lang=EN-US
style='color:black'>();</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>m_pDev</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>Clear</span><span lang=EN-US style='color:
black'>(</span><span lang=EN-US style='color:red'>0</span><span lang=EN-US
style='color:black'>, </span><span lang=EN-US style='color:#A000A0'>NULL</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:#A000A0'>D3DCLEAR_TARGET</span><span
lang=EN-US style='color:black'>|</span><span lang=EN-US style='color:#A000A0'>D3DCLEAR_ZBUFFER</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:red'>0XFF8080FF</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:red'>1</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>…</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>m_pDev</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>SetRenderState</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:#A000A0'>D3DRS_ALPHABLENDENABLE</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:#A000A0'>TRUE</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>…</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>m_pDev</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>SetRenderState</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:#A000A0'>D3DRS_ZENABLE</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:#A000A0'>FALSE</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>m_pDev</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>SetFVF</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:#A000A0'>D3DFVF_XYZRHW</span><span
lang=EN-US style='color:black'> | </span><span lang=EN-US style='color:#A000A0'>D3DFVF_TEX1</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>m_fW</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:red'>12</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>struct</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US style='color:blue'>T</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>{</span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:40.0pt;
word-break:keep-all'><span lang=EN-US style='color:blue'>D3DXVECTOR4</span><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp; </span><span lang=EN-US>p</span><span
lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:40.0pt;
word-break:keep-all'><span lang=EN-US style='color:blue'>D3DXVECTOR2</span><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp; </span><span lang=EN-US>t</span><span
lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>};</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>T </span><span lang=EN-US>pVtx</span><span
lang=EN-US style='color:black'>[</span><span lang=EN-US style='color:red'>4</span><span
lang=EN-US style='color:black'>];</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>p</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:blue'>D3DXVECTOR4</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US style='color:black'>,</span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US style='color:black'>,</span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US style='color:black'>,</span><span lang=EN-US style='color:red'>1</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>p</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:blue'>D3DXVECTOR4</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US style='color:black'>,</span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US style='color:black'>,</span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US style='color:black'>,</span><span lang=EN-US style='color:red'>1</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>2</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>p</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:blue'>D3DXVECTOR4</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US style='color:black'>,</span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US style='color:black'>,</span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US style='color:black'>,</span><span lang=EN-US style='color:red'>1</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>3</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>p</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:blue'>D3DXVECTOR4</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US style='color:black'>,</span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US style='color:black'>,</span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US style='color:black'>,</span><span lang=EN-US style='color:red'>1</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>t</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:blue'>D3DXVECTOR2</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US style='color:black'>,</span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>t</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:blue'>D3DXVECTOR2</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:red'>1</span><span
lang=EN-US style='color:black'>,</span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>2</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>t</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:blue'>D3DXVECTOR2</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:red'>1</span><span
lang=EN-US style='color:black'>,</span><span lang=EN-US style='color:red'>1</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>3</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>t</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:blue'>D3DXVECTOR2</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US style='color:black'>,</span><span lang=EN-US style='color:red'>1</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>INT</span><span lang=EN-US style='color:black'> </span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>, </span><span
lang=EN-US>j</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>for</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US>j</span><span lang=EN-US style='color:black'>=</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>; </span><span
lang=EN-US>j</span><span lang=EN-US style='color:black'>&lt;</span><span
lang=EN-US style='color:red'>31</span><span lang=EN-US style='color:black'>; ++</span><span
lang=EN-US>j</span><span lang=EN-US style='color:black'>)</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>{</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>for</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>=</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>; </span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>&lt;</span><span
lang=EN-US style='color:red'>41</span><span lang=EN-US style='color:black'>; ++</span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>)</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>p</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>x</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>*</span><span
lang=EN-US style='color:red'>10</span><span lang=EN-US style='color:black'> - </span><span
lang=EN-US>m_fW</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>p</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>y</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>j</span><span lang=EN-US style='color:black'>*</span><span
lang=EN-US style='color:red'>10</span><span lang=EN-US style='color:black'> - </span><span
lang=EN-US>m_fW</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>p</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>x</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>p</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>x</span><span lang=EN-US style='color:black'> + </span><span
lang=EN-US>m_fW</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>p</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>y</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>p</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>y</span><span lang=EN-US style='color:black'> + </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'> ;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>2</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>p</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>x</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>p</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>x</span><span lang=EN-US style='color:black'> + </span><span
lang=EN-US>m_fW</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>2</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>p</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>y</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>p</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>y</span><span lang=EN-US style='color:black'> + </span><span
lang=EN-US>m_fW</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>3</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>p</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>x</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>p</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>x</span><span lang=EN-US style='color:black'> + </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'> ;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>3</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>p</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>y</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>p</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>y</span><span lang=EN-US style='color:black'> + </span><span
lang=EN-US>m_fW</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>p</span><span lang=EN-US style='color:black'> *= </span><span
lang=EN-US style='color:red'>2</span><span lang=EN-US style='color:black'>; </span><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>p</span><span lang=EN-US style='color:black'> *= </span><span
lang=EN-US style='color:red'>2</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>2</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>p</span><span lang=EN-US style='color:black'> *= </span><span
lang=EN-US style='color:red'>2</span><span lang=EN-US style='color:black'>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>3</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>p</span><span lang=EN-US style='color:black'> *= </span><span
lang=EN-US style='color:red'>2</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pDev</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>SetTexture</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US>m_pTex1</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pDev</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>DrawPrimitiveUP</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:#A000A0'>D3DPT_TRIANGLEFAN</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:red'>2</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US>pVtx</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:blue'>sizeof</span><span
lang=EN-US style='color:black'>(</span><span lang=EN-US style='color:blue'>T</span><span
lang=EN-US style='color:black'>));</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>}</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>…</span></p>

<p class=MsoNormal><span lang=EN-US>m_pTexP</span><span lang=EN-US
style='color:black'>-&gt;</span><span lang=EN-US style='color:#880000'>EndScene</span><span
lang=EN-US style='color:black'>();</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>다 아는 내용이라 간단히 설명 생략하겠습니다<span lang=EN-US>. Clear() </span>함수에서
<span lang=EN-US>0XFF8080FF </span>값은<span lang=EN-US> RGBA(0.5, 0.5, 1, 1)</span>에
해당합니다<span lang=EN-US>. </span>즉 픽셀의 움직임을<span lang=EN-US> 0</span>으로 한 것입니다<span
lang=EN-US>. </span>중간에 구조체를 선언하고 정점<span lang=EN-US> 4</span>개의<span
lang=EN-US> U, V</span>를 정하고<span lang=EN-US> for </span>문을 돌면서 위치만 설정해서 렌더링 하는
부분은<span lang=EN-US> Embossing </span>형태를 만드는 것입니다<span lang=EN-US>. </span>디바이스의
<span lang=EN-US>SetTexture() </span>함수에 사용한 텍스처는 원을 패턴으로 그릴 때 사용한 텍스처 입니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal>쉐이더 코드는 다음과 같이 처음 패턴을 시작할 때의 모습 그대로 돌아왔습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>float</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>m_fWidth</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US style='color:#880000'>PxlProc</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:blue'>SvsOut</span><span
lang=EN-US style='color:black'> </span><span lang=EN-US>In</span><span
lang=EN-US style='color:black'>) : </span><span lang=EN-US style='color:blue'>COLOR0</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>{</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'>=</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>&nbsp; </span><span
lang=EN-US>t0</span><span lang=EN-US style='color:black'>=</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>&nbsp; </span><span
lang=EN-US>t1</span><span lang=EN-US style='color:black'>=</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float2</span><span lang=EN-US style='color:black'>&nbsp; </span><span
lang=EN-US>TxOld</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float2</span><span lang=EN-US style='color:black'>&nbsp; </span><span
lang=EN-US>TxNew</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>TxOld</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>x</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>In</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>x</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>TxOld</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>y</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>In</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>y</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>t1</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US style='color:
black'>(</span><span lang=EN-US>smpPtn</span><span lang=EN-US style='color:
black'>, </span><span lang=EN-US>TxOld</span><span lang=EN-US style='color:
black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// </span><span style='color:green'>텍스처 좌표를 이동</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>TxNew</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>x</span><span lang=EN-US style='color:black'> = (</span><span
lang=EN-US>t1</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>x</span><span lang=EN-US style='color:black'> - </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>5f</span><span lang=EN-US style='color:black'>)/</span><span
lang=EN-US>m_fWidth</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>TxNew</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>y</span><span lang=EN-US style='color:black'> = (</span><span
lang=EN-US>t1</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>y</span><span lang=EN-US style='color:black'> - </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>5f</span><span lang=EN-US style='color:black'>)/</span><span
lang=EN-US>m_fWidth</span><span lang=EN-US style='color:black'> * </span><span
lang=EN-US style='color:red'>4</span><span lang=EN-US style='color:black'>./</span><span
lang=EN-US style='color:red'>3</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>TxNew</span><span lang=EN-US style='color:black'> += </span><span
lang=EN-US>In</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>t0</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US style='color:
black'>(</span><span lang=EN-US>smpDif</span><span lang=EN-US style='color:
black'>, </span><span lang=EN-US>TxNew</span><span lang=EN-US style='color:
black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>t0</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>return</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>Out</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>실행하면 다음과 같이 화면에 출력되는데 오른쪽 그림은 좀 더 촘촘히<span lang=EN-US>
Embossing</span>텍스처를 만든 것입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=271 height=204
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image051.jpg">&nbsp;<img border=0 width=273
height=203 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image052.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;Embossing </span>텍스처를 적용한 화면<span
lang=EN-US>: <a href="https://github.com/3dapi/dv16_shader4/raw/master/h4_02_emboss0.zip">h4_02_emboss0.zip</a>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>void CShaderEx::Render()</span>함수에서<span
lang=EN-US> #if 0</span>을<span lang=EN-US> #if 1</span>로 하고 컴파일 한 다음 실행하면<span
lang=EN-US>&nbsp; &lt;Embossing </span>텍스처<span lang=EN-US>&gt;</span>가 화면에 출력 됩니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이것을 지형에 적용시켜 보면 다음과 같이 출력됩니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=272 height=204
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image053.jpg">&nbsp;<img border=0 width=272
height=204 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image054.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt; Embossing </span>텍스처를 적용한 화면<span
lang=EN-US>: <a href="https://github.com/3dapi/dv16_shader4/raw/master/h4_02_emboss0_a.zip">h4_02_emboss0_a.zip</a></span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>4.2.1 </span><span
style='font-size:12.0pt'>무늬 유리 효과<span lang=EN-US>(</span></span><span
lang=EN-US style='font-size:12.0pt'>Embossed Glass) 2</span></p>

<p class=MsoNormal>무늬 유리 효과를 만들었는데 같은 간격으로 일정하게 나타나는 것이 좀 단조로운 느낌이 듭니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal>이 번에는 <span lang=EN-US>circle </span>이미지의 위치를 <span
lang=EN-US>Random </span>하게 만들어서<span lang=EN-US> Embossing </span>텍스처를 만들어 봅시다<span
lang=EN-US>.</span></p>

<p class=MsoNormal>수정할 부분은<span lang=EN-US> for </span>문 내용으로 다음과 같이 위치를<span
lang=EN-US> rand()</span>함수로 정합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>for</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US style='color:blue'>int</span><span lang=EN-US style='color:black'> </span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>=</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>; </span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>&lt;</span><span
lang=EN-US style='color:red'>20000</span><span lang=EN-US style='color:black'>;
++</span><span lang=EN-US>i</span><span lang=EN-US style='color:black'>)</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>{</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>p</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>x</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:#880000'>rand</span><span lang=EN-US style='color:black'>()%</span><span
lang=EN-US style='color:red'>900</span><span lang=EN-US style='color:black'> *</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>4f</span><span lang=EN-US style='color:black'> - </span><span
lang=EN-US>m_fW</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>p</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>y</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:#880000'>rand</span><span lang=EN-US style='color:black'>()%</span><span
lang=EN-US style='color:red'>700</span><span lang=EN-US style='color:black'> *</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>4f</span><span lang=EN-US style='color:black'> - </span><span
lang=EN-US>m_fW</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>p</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>x</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>p</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>x</span><span lang=EN-US style='color:black'> + </span><span
lang=EN-US>m_fW</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>p</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>y</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>p</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>y</span><span lang=EN-US style='color:black'> + </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'> ;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>2</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>p</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>x</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>p</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>x</span><span lang=EN-US style='color:black'> + </span><span
lang=EN-US>m_fW</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>2</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>p</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>y</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>p</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>y</span><span lang=EN-US style='color:black'> + </span><span
lang=EN-US>m_fW</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>3</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>p</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>x</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>p</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>x</span><span lang=EN-US style='color:black'> + </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'> ;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>3</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>p</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>y</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>pVtx</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>p</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>y</span><span lang=EN-US style='color:black'> + </span><span
lang=EN-US>m_fW</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pDev</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>SetTexture</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US>m_pTex1</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pDev</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>DrawPrimitiveUP</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:#A000A0'>D3DPT_TRIANGLEFAN</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:red'>2</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US>pVtx</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:blue'>sizeof</span><span
lang=EN-US style='color:black'>(</span><span lang=EN-US style='color:blue'>T</span><span
lang=EN-US style='color:black'>));</span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>20000 </span>이란 숫자는 큰 의미는 없습니다<span
lang=EN-US>. </span>겹치는 부분이 있을 것 같아 적당히 큰 값을 선택했습니다<span lang=EN-US>. </span>이것을
실행하면 다음과 같습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=273 height=204
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image055.gif">&nbsp;<img border=0 width=273
height=204 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image056.gif"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;Random() </span>함수를 사용한 무늬 유리 효과<span
lang=EN-US>: <a href="https://github.com/3dapi/dv16_shader4/raw/master/h4_02_emboss1.zip">h4_02_emboss1.zip</a>, <a
href="https://github.com/3dapi/dv16_shader4/raw/master/h4_02_emboss1_a.zip">h4_02_emboss1_a.zip</a>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이전의 같은 간격으로 구성한 것보다 많이 좋아 졌음을 볼 수 있습니다<span lang=EN-US>. </span>여기에
작은 무늬의 종류를 이전에 사용했던 패턴들을 섞어봅시다<span lang=EN-US>.</span></p>

<p class=MsoNormal>이전 코드와 달라진 것은 작은 무늬를 더 추가한 것과</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>if</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US style='color:#A000A0'>FAILED</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:#A000A0'>D3DXCreateTextureFromFile</span><span
lang=EN-US style='color:black'>(</span><span lang=EN-US>m_pDev</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:fuchsia'>&quot;Texture/pattern_circle.png&quot;</span><span
lang=EN-US style='color:black'>, &amp;</span><span lang=EN-US>m_pTex1</span><span
lang=EN-US style='color:black'>)))</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>return</span><span lang=EN-US style='color:black'>
-</span><span lang=EN-US style='color:red'>1</span><span lang=EN-US
style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>if</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US style='color:#A000A0'>FAILED</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:#A000A0'>D3DXCreateTextureFromFile</span><span
lang=EN-US style='color:black'>(</span><span lang=EN-US>m_pDev</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:fuchsia'>&quot;Texture/pattern_ginkgo.png&quot;</span><span
lang=EN-US style='color:black'>, &amp;</span><span lang=EN-US>m_pTex2</span><span
lang=EN-US style='color:black'>)))</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>return</span><span lang=EN-US style='color:black'>
-</span><span lang=EN-US style='color:red'>1</span><span lang=EN-US
style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>if</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US style='color:#A000A0'>FAILED</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:#A000A0'>D3DXCreateTextureFromFile</span><span
lang=EN-US style='color:black'>(</span><span lang=EN-US>m_pDev</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:fuchsia'>&quot;Texture/pattern_cube1.png&quot;</span><span
lang=EN-US style='color:black'>, &amp;</span><span lang=EN-US>m_pTex3</span><span
lang=EN-US style='color:black'>)))</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>return</span><span lang=EN-US style='color:black'>
-</span><span lang=EN-US style='color:red'>1</span><span lang=EN-US
style='color:black'>;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>무늬 유리창을 만드는<span lang=EN-US> For</span>문에서<span lang=EN-US>
rand() </span>함수를 사용해 패턴을 선택하는 것 입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>for</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US style='color:blue'>int</span><span lang=EN-US style='color:black'> </span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>=</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>; </span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>&lt;</span><span
lang=EN-US style='color:red'>20000</span><span lang=EN-US style='color:black'>;
++</span><span lang=EN-US>i</span><span lang=EN-US style='color:black'>)</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>{</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>…</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>int</span><span lang=EN-US style='color:black'> </span><span
lang=EN-US>c</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:#880000'>rand</span><span lang=EN-US style='color:black'>()%</span><span
lang=EN-US style='color:red'>3</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>if</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'> ==</span><span
lang=EN-US>c</span><span lang=EN-US style='color:black'>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pDev</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>SetTexture</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US>m_pTex1</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>else</span><span lang=EN-US style='color:black'> </span><span
lang=EN-US style='color:blue'>if</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'> ==</span><span
lang=EN-US>c</span><span lang=EN-US style='color:black'>) </span><span
lang=EN-US>m_pDev</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>SetTexture</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US>m_pTex2</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>else</span><span lang=EN-US style='color:black'> </span><span
lang=EN-US style='color:blue'>if</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US style='color:red'>2</span><span lang=EN-US style='color:black'> ==</span><span
lang=EN-US>c</span><span lang=EN-US style='color:black'>) </span><span
lang=EN-US>m_pDev</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>SetTexture</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US>m_pTex3</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pDev</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>DrawPrimitiveUP</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:#A000A0'>D3DPT_TRIANGLEFAN</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:red'>2</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US>pVtx</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:blue'>sizeof</span><span
lang=EN-US style='color:black'>(</span><span lang=EN-US style='color:blue'>T</span><span
lang=EN-US style='color:black'>));</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>}</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=272 height=204
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image057.gif">&nbsp;<img border=0 width=272
height=204 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image058.gif"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;</span>무늬 유리창 효과<span lang=EN-US>: <a
href="https://github.com/3dapi/dv16_shader4/raw/master/h4_02_emboss1.zip">h4_02_emboss1.zip</a>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=273 height=204
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image059.gif">&nbsp;<img border=0 width=273
height=204 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image060.gif"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;</span>무늬 유리창 효과<span lang=EN-US>: <a
href="https://github.com/3dapi/dv16_shader4/raw/master/h4_02_emboss1_a.zip">h4_02_emboss1_a.zip</a>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>하나의 패턴을 사용해서 만드는 것보다 여러 개를 혼합해서 사용하는 것이 더 효과적이라는 것을 알 수 있습니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>4.2.2 </span><span
style='font-size:12.0pt'>화면 잡음<span lang=EN-US>(Noise)</span></span></p>

<p class=MsoNormal>아날로그<span lang=EN-US> TV</span>의 경우 전파 신호가 약하면 잡음<span
lang=EN-US>(Noise)</span>의 효과가 강해져 화면이 좌우로 일그러지는 현상을 볼 수 있습니다<span lang=EN-US>.
</span>이런 종류의<span lang=EN-US> Noise</span>를<span lang=EN-US> White Noise </span>라고도
합니다<span lang=EN-US>. </span>이 효과도 가만히 생각해보면 정상적인<span lang=EN-US> 3D </span>화면
픽셀을 좌우로 이동시키는 것과 유사합니다<span lang=EN-US>. </span>그런데 이 이동 값은 일정한 것이 아니라 거의<span
lang=EN-US> Random </span>한 것입니다<span lang=EN-US>. (</span>잡음 또한<span
lang=EN-US> Random</span>입니다<span lang=EN-US>.)</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<table class=MsoTableGrid border=0 cellspacing=0 cellpadding=0 align=left
 style='border-collapse:collapse;margin-left:4.85pt;margin-right:4.85pt'>
 <tr style='height:233.4pt'>
  <td width=271 valign=top style='width:203.4pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:233.4pt'>
  <p class=MsoNormal><span lang=EN-US><img border=0 width=240 height=240
  src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image061.gif"></span></p>
  <p class=MsoNormal><span lang=EN-US>&lt;</span>노이즈 맵<span lang=EN-US>&gt;</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal>만약<span lang=EN-US> Random</span>을 표현할 수 있는 텍스처가 있다면 우리는 바로 앞에서
해왔던 일들을 거의 그대로 적용할 수 있습니다<span lang=EN-US>. </span>간단히 정리하면<span lang=EN-US>
Random </span>이미지에서 픽셀을 가지고 와서 이 값을 정상 화면의<span lang=EN-US> UV</span>를 왜곡시키는 요소<span
lang=EN-US>(</span>변수<span lang=EN-US>)</span>로 만들면 영상 잡음을 만들어 낼 수 있을 것입니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>Radom</span>이미지는<span lang=EN-US> Adobe</span>의<span
lang=EN-US> Photoshop </span>과 같은 그래픽 툴에서<span lang=EN-US> Noise</span>를 통해서 다음과
같이 만들 수 있습니다<span lang=EN-US>. </span>이것을 노이즈 맵<span lang=EN-US>(Noise Map)</span>이라
부르기도 합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이 노이즈 맵의 색상<span lang=EN-US>(R, G, B) </span>중에<span
lang=EN-US> R, G</span>를 화면 왜곡 비율로 설정하면 되는데 색상은<span lang=EN-US> [0, 1] </span>범위
이고<span lang=EN-US> U, V </span>도<span lang=EN-US> [0, 1] </span>범위이므로 색상의<span
lang=EN-US> R, G</span>값을 그대로 사용하지 않고 적당히 줄입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>이 값을 원본<span lang=EN-US> U, V</span>에 더하면 정상 화면을 왜곡 시키는 좌표가 될
것입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>다음은 쉐이더 코드입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>float</span><span lang=EN-US style='color:black'>&nbsp;&nbsp; </span><span
lang=EN-US>m_fRepeatX</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:red'>10</span><span lang=EN-US style='color:black'>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// Repeat for X</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>float</span><span lang=EN-US style='color:black'>&nbsp;&nbsp; </span><span
lang=EN-US>m_fRepeatY</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:red'>10</span><span lang=EN-US style='color:black'>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// Repeat for Y</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US style='color:#880000'>PxlProc0</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:blue'>SvsOut</span><span
lang=EN-US style='color:black'> </span><span lang=EN-US>In</span><span
lang=EN-US style='color:black'>) : </span><span lang=EN-US style='color:blue'>COLOR0</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>{</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>Out</span><span lang=EN-US style='color:black'>=</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>t0</span><span lang=EN-US style='color:black'>= </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float2</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>t</span><span lang=EN-US style='color:black'>= </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>t</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>In</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>t</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>x</span><span lang=EN-US style='color:black'> *= </span><span
lang=EN-US>m_fRepeatX</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>t</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>y</span><span lang=EN-US style='color:black'> *= </span><span
lang=EN-US>m_fRepeatY</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>t0</span><span lang=EN-US style='color:black'>= </span><span
lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US style='color:
black'>(smp1, </span><span lang=EN-US>t</span><span lang=EN-US
style='color:black'>)-</span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US style='color:black'>.</span><span lang=EN-US style='color:red'>5</span><span
lang=EN-US style='color:black'>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// Sampling from Noise Texture ==&gt; [-0.5,
0.5];</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>t0</span><span lang=EN-US style='color:black'> *=</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>1f</span><span lang=EN-US style='color:black'>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// [-0.05, 0.05];</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>t</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>In</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US style='color:black'>
+ </span><span lang=EN-US style='color:blue'>float2</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US>t0</span><span lang=EN-US
style='color:black'>.</span><span lang=EN-US>x</span><span lang=EN-US
style='color:black'>, </span><span lang=EN-US>t0</span><span lang=EN-US
style='color:black'>.</span><span lang=EN-US>y</span><span lang=EN-US
style='color:black'>);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:green'>// Modified Texture Coordinate</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>t0</span><span lang=EN-US style='color:black'>= </span><span
lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US style='color:
black'>(</span><span lang=EN-US>smp0</span><span lang=EN-US style='color:black'>,
</span><span lang=EN-US>t</span><span lang=EN-US style='color:black'>);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// Sampling from Diffuse Texture</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp; =
</span><span lang=EN-US>t0</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>return</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>Out</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal><span style='color:black'>코드를 보면 정상화면의<span lang=EN-US> U V</span>에
노이즈 맵의 반복 정도를<span lang=EN-US> X</span>와<span lang=EN-US> Y</span>에 다르게 곱하고 있습니다<span
lang=EN-US>. </span>이것은 화면의 가로 세로 방향에 대한 노이즈를 다른 비율로 만들기 위해서 입니다<span
lang=EN-US>.</span></span></p>

<p class=MsoNormal><span style='color:black'>이 곱한 값을 가지고 노이즈 맵<span lang=EN-US>(smp1)</span>에서
색상을 가져온 다음<span lang=EN-US> 0.5</span>를 빼서 노이즈가 좌우 또는 상하로 발생하도록 합니다<span
lang=EN-US>. </span>그 다음<span lang=EN-US> 0.1</span>를 곱해서 적당히 왜곡이 너무 크지 않도록 줄입니다<span
lang=EN-US>. </span>이 왜곡 값과 원본<span lang=EN-US> U, V</span>값을 더해 최종 텍스처 좌표로 만든 다음
화면을 저장한 텍스처에서 샘플링 합니다<span lang=EN-US>.</span></span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal><span style='color:black'>반복 횟수 값을 다음과 같이 설정하면 화면에서 잡음의 정도를 볼
수 있습니다<span lang=EN-US>.</span></span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>float</span><span lang=EN-US style='color:black'>&nbsp;&nbsp; </span><span
lang=EN-US style='color:gray'>time</span><span lang=EN-US style='color:black'>
= </span><span lang=EN-US style='color:#A000A0'>D3DXToRadian</span><span
lang=EN-US style='color:black'>( </span><span lang=EN-US style='color:#880000'>GetTickCount</span><span
lang=EN-US style='color:black'>() *</span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US style='color:black'>.</span><span lang=EN-US style='color:red'>05f</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>float</span><span lang=EN-US style='color:black'>&nbsp;&nbsp; </span><span
lang=EN-US style='color:gray'>fSin</span><span lang=EN-US style='color:black'>=</span><span
lang=EN-US style='color:#880000'>sinf</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US style='color:gray'>time</span><span lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>float</span><span lang=EN-US style='color:black'>&nbsp;&nbsp; </span><span
lang=EN-US style='color:gray'>fRepeatX</span><span lang=EN-US style='color:
black'> = </span><span lang=EN-US style='color:red'>1</span><span lang=EN-US
style='color:black'> + (</span><span lang=EN-US style='color:red'>1</span><span
lang=EN-US style='color:black'>+ </span><span lang=EN-US style='color:gray'>fSin</span><span
lang=EN-US style='color:black'>)*</span><span lang=EN-US style='color:red'>10</span><span
lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>float</span><span lang=EN-US style='color:black'>&nbsp;&nbsp; </span><span
lang=EN-US style='color:gray'>fRepeatY</span><span lang=EN-US style='color:
black'> = </span><span lang=EN-US style='color:red'>1</span><span lang=EN-US
style='color:black'> + (</span><span lang=EN-US style='color:red'>1</span><span
lang=EN-US style='color:black'>+ </span><span lang=EN-US style='color:gray'>fSin</span><span
lang=EN-US style='color:black'>)*</span><span lang=EN-US style='color:red'>10</span><span
lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>…</span></p>

<p class=MsoNormal><span lang=EN-US style='color:gray'>m_pEft</span><span
lang=EN-US style='color:black'>-&gt;</span><span lang=EN-US style='color:#880000'>SetFloat</span><span
lang=EN-US style='color:black'>(</span><span lang=EN-US style='color:fuchsia'>&quot;m_fRepeatX&quot;</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:gray'>fRepeatX</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal><span lang=EN-US style='color:gray'>m_pEft</span><span
lang=EN-US style='color:black'>-&gt;</span><span lang=EN-US style='color:#880000'>SetFloat</span><span
lang=EN-US style='color:black'>(</span><span lang=EN-US style='color:fuchsia'>&quot;m_fRepeatY&quot;</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:gray'>fRepeatY</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'><img border=0
width=276 height=207 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image062.gif">&nbsp;<img
border=0 width=276 height=207 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image063.gif"></span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>&lt;</span><span
style='color:black'>화면 잡음 효과<span lang=EN-US>: <a href="https://github.com/3dapi/dv16_shader4/raw/master/h4_02_noise.zip">h4_02_noise.zip</a>,
<a href="https://github.com/3dapi/dv16_shader4/raw/master/h4_02_noise_a.zip">h4_02_noise_a.zip</a>&gt;</span></span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal><span style='color:black'>만약 반복 값 다음과 같이<span lang=EN-US>
Random</span>을 적용하면 상하 좌우로 심하게 흔들리는 화면을 얻을 수 있습니다<span lang=EN-US>.</span></span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:gray'>fRepeatX</span><span lang=EN-US style='color:
black'> = (</span><span lang=EN-US style='color:red'>10</span><span lang=EN-US
style='color:black'> + (</span><span lang=EN-US style='color:#880000'>rand</span><span
lang=EN-US style='color:black'>()%</span><span lang=EN-US style='color:red'>100</span><span
lang=EN-US style='color:black'>)) * </span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US style='color:black'>.</span><span lang=EN-US style='color:red'>1f</span><span
lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:gray'>fRepeatY</span><span lang=EN-US style='color:
black'> = (</span><span lang=EN-US style='color:red'>10</span><span lang=EN-US
style='color:black'> + (</span><span lang=EN-US style='color:#880000'>rand</span><span
lang=EN-US style='color:black'>()%</span><span lang=EN-US style='color:red'>100</span><span
lang=EN-US style='color:black'>)) * </span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US style='color:black'>.</span><span lang=EN-US style='color:red'>1f</span><span
lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>그런데 적당히 좌우로만 잡음이 생기도록 하는 것이 좋으므로<span lang=EN-US> Y</span>방향은
고정하고<span lang=EN-US> X </span>방향만<span lang=EN-US> Radom</span>을 적용합니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:gray'>fRepeatX</span><span lang=EN-US style='color:
black'> = (</span><span lang=EN-US style='color:red'>1</span><span lang=EN-US
style='color:black'> + </span><span lang=EN-US style='color:#880000'>rand</span><span
lang=EN-US style='color:black'>()%</span><span lang=EN-US style='color:red'>51</span><span
lang=EN-US style='color:black'>)/</span><span lang=EN-US style='color:red'>20</span><span
lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:gray'>fRepeatY</span><span lang=EN-US style='color:
black'> = </span><span lang=EN-US style='color:red'>20</span><span lang=EN-US
style='color:black'>;</span><span lang=EN-US style='color:green'> // Y</span><span
style='color:green'>는 적당한 값으로 고정</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=272 height=204
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image064.gif">&nbsp;<img border=0 width=272
height=204 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image065.gif"></span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>&lt;</span><span
style='color:black'>화면 잡음 효과<span lang=EN-US>: <a href="https://github.com/3dapi/dv16_shader4/raw/master/h4_02_noise_a.zip">h4_02_noise_a.zip</a>&gt;</span></span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:14.0pt'>4.3 </span><span
style='font-size:14.0pt'>연필 선 효과<span lang=EN-US>(Pencil Stroke)</span></span></p>

<p class=MsoNormal>화면을 연필로 스케치한 것처럼 표현하는 방법은 여러 가지가 있습니다<span lang=EN-US>. </span>첫
번째 방법은<span lang=EN-US> 3D </span>모델을 렌더링 할 때 반사의 밝기에 따라 스케치용 텍스처를 매핑 하는 방법이 있고<span
lang=EN-US>, </span>두 번째 방법은 색상을<span lang=EN-US> R, G, B</span>로 분리해서 각각의 채도<span
lang=EN-US>, </span>명도에 적용하는 방법<span lang=EN-US>, </span>그리고 세 번째 방법은 전체 장면을 각 픽셀의
밝기에 따라 레벨을 정한 텍스처를 혼합하는 방법이 있습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>이 장에서는 세 번째 방법인 장면의 밝기에 연필 스케치 이미지를 적용하는 방법을 보이겠습니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<table class=MsoTableGrid border=0 cellspacing=0 cellpadding=0
 style='border-collapse:collapse'>
 <tr>
  <td width=208 valign=top style='width:156.25pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US><img border=0 width=194 height=189
  src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image066.gif"></span></p>
  <p class=MsoNormal><span lang=EN-US>&lt;</span>연필선 이미지<span lang=EN-US> A&gt;</span></p>
  </td>
  <td width=208 valign=top style='width:156.3pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US><img border=0 width=192 height=189
  src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image067.gif"></span></p>
  <p class=MsoNormal><span lang=EN-US>&lt;</span>연필선 이미지<span lang=EN-US> B&gt;</span></p>
  </td>
  <td width=208 valign=top style='width:156.3pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US><img border=0 width=191 height=189
  src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image068.gif"></span></p>
  <p class=MsoNormal><span lang=EN-US>&lt;</span>연필선 이미지<span lang=EN-US> C&gt;</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>세 번째 방법을 적용하기 위해서 그림처럼 연필선 이미지<span lang=EN-US> A, B, C</span>를
준비합니다<span lang=EN-US>. </span>보면 알다시피<span lang=EN-US> A</span>가 가장 밝고 그 다음<span
lang=EN-US> B, </span>마지막은<span lang=EN-US> C</span>인 것을 알 수 있습니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이 이미지를 장면에 적용하기 위해서 연필선 이미지<span lang=EN-US> A</span>와 연필 선 이미지<span
lang=EN-US> B</span>만 혼합하는 예를 먼저 들어 봅시다<span lang=EN-US>.</span></p>

<p class=MsoNormal>만약 연필선 이미지<span lang=EN-US> A</span>에<span lang=EN-US> 60%, </span>연필선
이미지<span lang=EN-US> B</span>에<span lang=EN-US> 40%</span>를 혼합할 때 어떻게 하면 될까요<span
lang=EN-US>? </span>당연히<span lang=EN-US> A* 0.6 + B * 0.4 </span>하면 됩니다<span
lang=EN-US>. </span>이 수식은 선형보간과 다름이 없습니다<span lang=EN-US>. </span>따라서 최종 색상은<span
lang=EN-US> = A *0.6 + (1-0.6) * B </span>한 것과 다름이 없습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>그런데 이렇게 쉬운 내용을 쉐이더 프로그램으로 표현할 줄 알아야 합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>의사 코드로 대충 만들어 보면 다음과 같습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>float&nbsp; W&nbsp; = 0.6;</span></p>

<p class=MsoNormal><span lang=EN-US>float4 tA = Sampling(Texture A);</span></p>

<p class=MsoNormal><span lang=EN-US>float4 tB = Sampling(Texture B);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>float4 Out = tA * W + (1 - W) * tB;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이것을 연습장에 작성하신 분은 이미 나머지 내용도 쉽게 만들어 갈 수 있을 것입니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal>만약<span lang=EN-US> W</span>를 장면 픽셀의 밝기로 한다면 앞의 의사 코드는 쉐이더를 이용해서
우리가 연필 선으로 표현하고자 하는 코드와 동일하게 됩니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>남아 있는 것은 픽셀의 밝기입니다<span lang=EN-US>. </span>이것은 간단하게 흑백 이미지로
만들어서 이 크기를 픽셀의 밝기로 다음과 같이 정하면 됩니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><i>픽셀의 밝기<span lang=EN-US> W = (</span>픽셀<span lang=EN-US>
Red)*0.301 + (</span>픽셀<span lang=EN-US> Green) * 0.587 + (</span>픽셀<span
lang=EN-US> Blue) * 0.114</span></i></p>

<p class=MsoNormal><i><span lang=EN-US>&nbsp;</span></i></p>

<p class=MsoNormal>이제 이것을 쉐이더로 표현하면 다음과 같습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>sampler</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>smp0</span><span lang=EN-US style='color:black'> : </span><span
lang=EN-US style='color:#880000'>register</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:blue'>s0</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>sampler</span><span lang=EN-US style='color:black'>
smp1 : </span><span lang=EN-US style='color:#880000'>register</span><span
lang=EN-US style='color:black'>(</span><span lang=EN-US style='color:blue'>s1</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>sampler</span><span lang=EN-US style='color:black'>
smp2 : </span><span lang=EN-US style='color:#880000'>register</span><span
lang=EN-US style='color:black'>(</span><span lang=EN-US style='color:blue'>s2</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US style='color:#880000'>PxlProc0</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:blue'>float2</span><span
lang=EN-US style='color:black'> uv : </span><span lang=EN-US style='color:blue'>TEXCOORD0</span><span
lang=EN-US style='color:black'>) : </span><span lang=EN-US style='color:blue'>COLOR0</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>{</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float2</span><span lang=EN-US style='color:black'>&nbsp; </span><span
lang=EN-US>tx</span><span lang=EN-US style='color:black'>=&nbsp; uv * </span><span
lang=EN-US style='color:red'>8</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>0f</span><span lang=EN-US style='color:black'>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// U,V </span><span style='color:green'>좌표를<span
lang=EN-US> 8</span>배 한다<span lang=EN-US>.</span></span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>t0</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US style='color:
black'>(</span><span lang=EN-US>smp0</span><span lang=EN-US style='color:black'>,
uv);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>t1</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US style='color:
black'>(smp1, </span><span lang=EN-US>tx</span><span lang=EN-US
style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>t2</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US style='color:
black'>(smp2, </span><span lang=EN-US>tx</span><span lang=EN-US
style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>Out</span><span lang=EN-US style='color:black'> =</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float</span><span lang=EN-US style='color:black'>&nbsp;
</span><span lang=EN-US>fMono</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>t0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>r</span><span lang=EN-US style='color:black'> * </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>299</span><span lang=EN-US style='color:black'> + </span><span
lang=EN-US>t0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>g</span><span lang=EN-US style='color:black'> * </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>587</span><span lang=EN-US style='color:black'> + </span><span
lang=EN-US>t0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>b</span><span lang=EN-US style='color:black'> * </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>114</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>fW</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>fMono</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>fW</span><span lang=EN-US style='color:black'> * </span><span
lang=EN-US>t1</span><span lang=EN-US style='color:black'> + (</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>-</span><span
lang=EN-US>fW</span><span lang=EN-US style='color:black'>) *</span><span
lang=EN-US>t2</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>return</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>Out</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>쉐이더 코드에서 연필선 효과가 잘 안보여<span lang=EN-US> UV</span>좌표를<span
lang=EN-US> 8</span>배 했습니다<span lang=EN-US>. </span>또한 쉐이더 코드에서 샘플러<span
lang=EN-US> register</span>를 지정해서 사용하고 있어서 프로그램에서는<span lang=EN-US> Address
Mode</span>와 필터링을 지정해야 하고 디바이스의<span lang=EN-US> SetTexture() </span>함수로<span
lang=EN-US> register</span>에 텍스처를 전달해야 합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>for</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US style='color:blue'>int</span><span lang=EN-US style='color:black'> </span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>=</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>; </span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>&lt;</span><span
lang=EN-US style='color:red'>4</span><span lang=EN-US style='color:black'>; ++</span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>)</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>{</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pDev</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>SetSamplerState</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US>i</span><span lang=EN-US
style='color:black'>, </span><span lang=EN-US style='color:#A000A0'>D3DSAMP_ADDRESSU</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:#A000A0'>D3DTADDRESS_WRAP</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>…</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pDev</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>SetSamplerState</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US>i</span><span lang=EN-US
style='color:black'>, </span><span lang=EN-US style='color:#A000A0'>D3DSAMP_MINFILTER</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:#A000A0'>D3DTEXF_LINEAR</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>…</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>m_pEft</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>SetTechnique</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:fuchsia'>&quot;Tech&quot;</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>…</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>m_pDev</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>SetTexture</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US>m_pTx0</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>m_pDev</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>SetTexture</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:red'>1</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US>m_pTx1</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>m_pDev</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>SetTexture</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:red'>2</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US>m_pTx2</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>m_pDev</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>DrawPrimitiveUP</span><span lang=EN-US
style='color:black'>( </span><span lang=EN-US style='color:#A000A0'>D3DPT_TRIANGLEFAN</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:red'>2</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US>m_pVtx</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:blue'>sizeof</span><span
lang=EN-US style='color:black'>(</span><span lang=EN-US style='color:blue'>VtxDUV1</span><span
lang=EN-US style='color:black'>));</span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>…</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>실행파일에서는 이미지를 로드하고 쉐이더로 연결한 것 밖에 없습니다<span lang=EN-US>. </span>이것을
실행 하면 다음의 왼쪽과 같은 어렴풋한 윤곽이 잡힌 장면을 볼 수 있습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=273 height=204
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image069.gif">&nbsp;<img border=0 width=272
height=204 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image070.gif"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;</span>연필 선 효과<span lang=EN-US>: <a
href="https://github.com/3dapi/dv16_shader4/raw/master/h4_03_hatch1.zip">h4_03_hatch1.zip</a>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>우리가 원하는 것은 최소한 오른쪽 장면입니다<span lang=EN-US>. </span>이렇게 되기 위해서는
그림이<span lang=EN-US> 3</span>장이 필요합니다<span lang=EN-US>. </span>그런데 가장 밝은 것을 흰색<span
lang=EN-US> = (1.0,1.0,1.0,1.0)</span>으로 한다면 그림 추가 없이 쉐이더 코드 만으로도 해결이 가능합니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal>그림 추가는 해결이 되었다고 보고 이제는<span lang=EN-US> 3</span>장의 이미지에 대한 레벨을
만들어야 합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>간단하게 밝기의 레벨을<span lang=EN-US> 3, 2, 1 </span>로 정합시다<span
lang=EN-US>. </span>그리고 흑백으로 만든<span lang=EN-US> fW</span>값에<span lang=EN-US>
3.5</span>를 곱하고 이 값을 비교해 가면서 다음과 같이 각 레벨마다 이웃한 레벨끼리 선형 보간을 합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>float</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>m_Level0</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:red'>3</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>0f</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>float</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>m_Level1</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:red'>2</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>0f</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>float</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>m_Level2</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>0f</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>…</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>White</span><span lang=EN-US style='color:black'> = {</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>,</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>,</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>,</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>};</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>float</span><span lang=EN-US style='color:black'>&nbsp;
</span><span lang=EN-US>Bright</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>t0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>r</span><span lang=EN-US style='color:black'> * </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>299f</span><span lang=EN-US style='color:black'> +
</span><span lang=EN-US>t0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>g</span><span lang=EN-US style='color:black'> * </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>587f</span><span lang=EN-US style='color:black'> +
</span><span lang=EN-US>t0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>b</span><span lang=EN-US style='color:black'> * </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>114f</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span><span lang=EN-US>Bright</span><span
lang=EN-US style='color:black'> *= </span><span lang=EN-US style='color:red'>3</span><span
lang=EN-US style='color:black'>.</span><span lang=EN-US style='color:red'>5f</span><span
lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>if</span><span lang=EN-US style='color:black'>( </span><span
lang=EN-US>Bright</span><span lang=EN-US style='color:black'>&gt;=</span><span
lang=EN-US>m_Level0</span><span lang=EN-US style='color:black'>)</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>White</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>else</span><span lang=EN-US style='color:black'> </span><span
lang=EN-US style='color:blue'>if</span><span lang=EN-US style='color:black'>( </span><span
lang=EN-US>Bright</span><span lang=EN-US style='color:black'>&gt;</span><span
lang=EN-US>m_Level1</span><span lang=EN-US style='color:black'>)</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'> = (</span><span
lang=EN-US>Bright</span><span lang=EN-US style='color:black'> - </span><span
lang=EN-US style='color:red'>2</span><span lang=EN-US style='color:black'>) * </span><span
lang=EN-US>White</span><span lang=EN-US style='color:black'> + (</span><span
lang=EN-US style='color:red'>3</span><span lang=EN-US style='color:black'> - </span><span
lang=EN-US>Bright</span><span lang=EN-US style='color:black'>)*</span><span
lang=EN-US>t1</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>else</span><span lang=EN-US style='color:black'> </span><span
lang=EN-US style='color:blue'>if</span><span lang=EN-US style='color:black'>( </span><span
lang=EN-US>Bright</span><span lang=EN-US style='color:black'>&gt;</span><span
lang=EN-US>m_Level2</span><span lang=EN-US style='color:black'>)</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'> = (</span><span
lang=EN-US>Bright</span><span lang=EN-US style='color:black'> - </span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>) * </span><span
lang=EN-US>t1</span><span lang=EN-US style='color:black'> + (</span><span
lang=EN-US style='color:red'>2</span><span lang=EN-US style='color:black'> - </span><span
lang=EN-US>Bright</span><span lang=EN-US style='color:black'>)*</span><span
lang=EN-US>t2</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>else</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>t2</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이것을 실행하면 앞의 오른쪽 그림과 같은 화면을 얻을 수 있습니다<span lang=EN-US>. </span>그런데
위의 코드는 레벨의 값이<span lang=EN-US> 3, 2, 1 </span>같은 간격으로 설정되어 있습니다<span
lang=EN-US>. </span>만약 같은 간격이 아니라면<span lang=EN-US> if~ else </span>구문이 다음과 같이 수정되어야
합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>else</span><span lang=EN-US style='color:black'> </span><span
lang=EN-US style='color:blue'>if</span><span lang=EN-US style='color:black'>( </span><span
lang=EN-US>Bright</span><span lang=EN-US style='color:black'>&gt;</span><span
lang=EN-US>m_Level1</span><span lang=EN-US style='color:black'>)</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>{</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float</span><span lang=EN-US style='color:black'>&nbsp;&nbsp; </span><span
lang=EN-US>fW</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>- (</span><span
lang=EN-US>m_Level0</span><span lang=EN-US style='color:black'> - </span><span
lang=EN-US>Bright</span><span lang=EN-US style='color:black'>)/(</span><span
lang=EN-US>m_Level0</span><span lang=EN-US style='color:black'>-</span><span
lang=EN-US>m_Level1</span><span lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>fW</span><span lang=EN-US style='color:black'> * </span><span
lang=EN-US>White</span><span lang=EN-US style='color:black'> + (</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>-</span><span
lang=EN-US>fW</span><span lang=EN-US style='color:black'>)*</span><span
lang=EN-US>t1</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>}</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>else</span><span lang=EN-US style='color:black'> </span><span
lang=EN-US style='color:blue'>if</span><span lang=EN-US style='color:black'>( </span><span
lang=EN-US>Bright</span><span lang=EN-US style='color:black'>&gt;</span><span
lang=EN-US>m_Level2</span><span lang=EN-US style='color:black'>)</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>{</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float</span><span lang=EN-US style='color:black'>&nbsp;&nbsp; </span><span
lang=EN-US>fW</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>- (</span><span
lang=EN-US>m_Level1</span><span lang=EN-US style='color:black'> - </span><span
lang=EN-US>Bright</span><span lang=EN-US style='color:black'>)/(</span><span
lang=EN-US>m_Level1</span><span lang=EN-US style='color:black'>-</span><span
lang=EN-US>m_Level2</span><span lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>fW</span><span lang=EN-US style='color:black'> * </span><span
lang=EN-US>t1</span><span lang=EN-US style='color:black'> + (</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>-</span><span
lang=EN-US>fW</span><span lang=EN-US style='color:black'>)*</span><span
lang=EN-US>t2</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이렇게 수정이 되고 레벨도 임의로 정해서 잘 동작하면<span lang=EN-US> &lt;</span>연필선
이미지<span lang=EN-US> C&gt; </span>가 있는 그림을 레벨로 추가해서 앞의 코드처럼 다음과 같이 쉐이더를 만들 수 있습니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>static</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US style='color:blue'>float</span><span lang=EN-US
style='color:black'> </span><span lang=EN-US>m_Level0</span><span lang=EN-US
style='color:black'> = </span><span lang=EN-US style='color:red'>3</span><span
lang=EN-US style='color:black'>.</span><span lang=EN-US style='color:red'>4f</span><span
lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>static</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US style='color:blue'>float</span><span lang=EN-US
style='color:black'> </span><span lang=EN-US>m_Level1</span><span lang=EN-US
style='color:black'> = </span><span lang=EN-US style='color:red'>2</span><span
lang=EN-US style='color:black'>.</span><span lang=EN-US style='color:red'>4f</span><span
lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>static</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US style='color:blue'>float</span><span lang=EN-US
style='color:black'> </span><span lang=EN-US>m_Level2</span><span lang=EN-US
style='color:black'> = </span><span lang=EN-US style='color:red'>1</span><span
lang=EN-US style='color:black'>.</span><span lang=EN-US style='color:red'>2f</span><span
lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>static</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US style='color:blue'>float</span><span lang=EN-US
style='color:black'> </span><span lang=EN-US>m_Level3</span><span lang=EN-US
style='color:black'> = </span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US style='color:black'>.</span><span lang=EN-US style='color:red'>2f</span><span
lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>sampler</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>smp0</span><span lang=EN-US style='color:black'> : </span><span
lang=EN-US style='color:#880000'>register</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:blue'>s0</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>sampler</span><span lang=EN-US style='color:black'>
smp1 : </span><span lang=EN-US style='color:#880000'>register</span><span
lang=EN-US style='color:black'>(</span><span lang=EN-US style='color:blue'>s1</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>sampler</span><span lang=EN-US style='color:black'>
smp2 : </span><span lang=EN-US style='color:#880000'>register</span><span
lang=EN-US style='color:black'>(</span><span lang=EN-US style='color:blue'>s2</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>sampler</span><span lang=EN-US style='color:black'>
smp3 : </span><span lang=EN-US style='color:#880000'>register</span><span
lang=EN-US style='color:black'>(</span><span lang=EN-US style='color:blue'>s3</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US style='color:#880000'>PxlProc0</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:blue'>float2</span><span
lang=EN-US style='color:black'> uv : </span><span lang=EN-US style='color:blue'>TEXCOORD0</span><span
lang=EN-US style='color:black'>) : </span><span lang=EN-US style='color:blue'>COLOR0</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>{</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>Out</span><span lang=EN-US style='color:black'> =</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// </span><span style='color:green'>출력 값</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>static</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US style='color:blue'>const</span><span lang=EN-US
style='color:black'> </span><span lang=EN-US style='color:blue'>float4</span><span
lang=EN-US style='color:black'> </span><span lang=EN-US>WHITE</span><span
lang=EN-US style='color:black'> = {</span><span lang=EN-US style='color:red'>1</span><span
lang=EN-US style='color:black'>,</span><span lang=EN-US style='color:red'>1</span><span
lang=EN-US style='color:black'>,</span><span lang=EN-US style='color:red'>1</span><span
lang=EN-US style='color:black'>,</span><span lang=EN-US style='color:red'>1</span><span
lang=EN-US style='color:black'>};&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// </span><span style='color:green'>흰색 이미지 대신</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float2</span><span lang=EN-US style='color:black'>&nbsp; </span><span
lang=EN-US>tx</span><span lang=EN-US style='color:black'>=&nbsp; uv * </span><span
lang=EN-US style='color:red'>8</span><span lang=EN-US style='color:black'>.f;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>t0</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US style='color:
black'>(</span><span lang=EN-US>smp0</span><span lang=EN-US style='color:black'>,
uv);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>t1</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US style='color:
black'>(smp1, </span><span lang=EN-US>tx</span><span lang=EN-US
style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>t2</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US style='color:
black'>(smp2, </span><span lang=EN-US>tx</span><span lang=EN-US
style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>t3</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US style='color:
black'>(smp3, </span><span lang=EN-US>tx</span><span lang=EN-US
style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float</span><span lang=EN-US style='color:black'>&nbsp;
</span><span lang=EN-US>fW</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float</span><span lang=EN-US style='color:black'>&nbsp;
</span><span lang=EN-US>Bright</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>t0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>r</span><span lang=EN-US style='color:black'> * </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>299f</span><span lang=EN-US style='color:black'> +
</span><span lang=EN-US>t0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>g</span><span lang=EN-US style='color:black'> * </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>587f</span><span lang=EN-US style='color:black'> +
</span><span lang=EN-US>t0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>b</span><span lang=EN-US style='color:black'> * </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>114f</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Bright</span><span lang=EN-US style='color:black'> *=</span><span
lang=EN-US style='color:red'>5</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>if</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US>Bright</span><span lang=EN-US style='color:black'> &gt; </span><span
lang=EN-US>m_Level0</span><span lang=EN-US style='color:black'>)</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>WHITE</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>else</span><span lang=EN-US style='color:black'> </span><span
lang=EN-US style='color:blue'>if</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US>Bright</span><span lang=EN-US style='color:black'> &gt; </span><span
lang=EN-US>m_Level1</span><span lang=EN-US style='color:black'>)</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>fW</span><span lang=EN-US style='color:black'> = (</span><span
lang=EN-US>m_Level0</span><span lang=EN-US style='color:black'> - </span><span
lang=EN-US>Bright</span><span lang=EN-US style='color:black'>)/(</span><span
lang=EN-US>m_Level0</span><span lang=EN-US style='color:black'> - </span><span
lang=EN-US>m_Level1</span><span lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'> = (</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>-</span><span
lang=EN-US>fW</span><span lang=EN-US style='color:black'>) * </span><span
lang=EN-US>WHITE</span><span lang=EN-US style='color:black'> + </span><span
lang=EN-US>fW</span><span lang=EN-US style='color:black'> * </span><span
lang=EN-US>t1</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>else</span><span lang=EN-US style='color:black'> </span><span
lang=EN-US style='color:blue'>if</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US>Bright</span><span lang=EN-US style='color:black'> &gt; </span><span
lang=EN-US>m_Level2</span><span lang=EN-US style='color:black'>)</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>fW</span><span lang=EN-US style='color:black'> = (</span><span
lang=EN-US>m_Level1</span><span lang=EN-US style='color:black'> - </span><span
lang=EN-US>Bright</span><span lang=EN-US style='color:black'>)/(</span><span
lang=EN-US>m_Level1</span><span lang=EN-US style='color:black'> - </span><span
lang=EN-US>m_Level2</span><span lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'> = (</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>-</span><span
lang=EN-US>fW</span><span lang=EN-US style='color:black'>) * </span><span
lang=EN-US>t1</span><span lang=EN-US style='color:black'> + </span><span
lang=EN-US>fW</span><span lang=EN-US style='color:black'>*</span><span
lang=EN-US>t2</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>else</span><span lang=EN-US style='color:black'> </span><span
lang=EN-US style='color:blue'>if</span><span lang=EN-US style='color:black'> (</span><span
lang=EN-US>Bright</span><span lang=EN-US style='color:black'> &gt; </span><span
lang=EN-US>m_Level3</span><span lang=EN-US style='color:black'>)</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>fW</span><span lang=EN-US style='color:black'> = (</span><span
lang=EN-US>m_Level2</span><span lang=EN-US style='color:black'> - </span><span
lang=EN-US>Bright</span><span lang=EN-US style='color:black'>)/(</span><span
lang=EN-US>m_Level2</span><span lang=EN-US style='color:black'> - </span><span
lang=EN-US>m_Level3</span><span lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'> = (</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>-</span><span
lang=EN-US>fW</span><span lang=EN-US style='color:black'>) * </span><span
lang=EN-US>t2</span><span lang=EN-US style='color:black'> + </span><span
lang=EN-US>fW</span><span lang=EN-US style='color:black'>*</span><span
lang=EN-US>t3</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>else</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>t3</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:#880000'>pow</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'>, </span><span
lang=EN-US style='color:red'>2</span><span lang=EN-US style='color:black'>.f);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'> *= </span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>4f</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>return</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>Out</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>장면이 어두워 쉐이더 코드에서<span lang=EN-US> pow() </span>함수를 사용해 명암 대비<span
lang=EN-US>(Contrast)</span>를 높였습니다<span lang=EN-US>. </span>추가된 그림 이미지로 인해 샘플러<span
lang=EN-US> register s3 </span>사용을 지정했습니다<span lang=EN-US>. </span>프로그램에서는 다음과 같이<span
lang=EN-US>&nbsp; </span>텍스처를 연결해야 하는 것은 당연합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>m_pDev</span><span lang=EN-US
style='color:black'>-&gt;</span><span lang=EN-US style='color:#880000'>SetTexture</span><span
lang=EN-US style='color:black'>(</span><span lang=EN-US style='color:red'>3</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US>m_pTx3</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=273 height=204
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image071.gif">&nbsp;<img border=0 width=273
height=204 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image072.gif"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;</span>연필 선 효과<span lang=EN-US>: <a
href="https://github.com/3dapi/dv16_shader4/raw/master/h4_03_hatch3.zip">h4_03_hatch3.zip</a>, <a href="https://github.com/3dapi/dv16_shader4/raw/master/h4_03_hatch3_a.zip">h4_03_hatch3_a.zip</a>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:14.0pt'>4.4 Distortion
(Pencil Stroke)</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>4.4.1 </span><span
style='font-size:12.0pt'>화염 효과<span lang=EN-US>(Flame Effect)</span></span></p>

<p class=MsoNormal><span lang=EN-US>Call of Duty - Modern Warfare </span>같은 게임을
하다 보면 전차의 엔진 뒤의 열기에 의한 아지랑이효과를 볼 수 있습니다<span lang=EN-US>. </span>또한 폭발 장면에서도 충격파가
등장하고 화염 주변에서도 사실감을 전달하기 위해 파티클<span lang=EN-US>(Particle)</span>과 함께 화염 효과를 화면의
왜곡으로 표현된 것을 볼 수 있습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>이런 멋진 장면은 게임 프로그래머가 꼭 도전해 보고 싶은 과제이기도 합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이런 충격파<span lang=EN-US>, </span>열기 등 대기 효과들을 화면에 렌더링 하기 위한 구조는
다음 그림과 각 단계로 단순화 시킬 수 있습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=612 height=310
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image073.gif"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;Distortion: </span>화염 효과<span
lang=EN-US> 2D&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>그림을 통해서 보면 전체 장면은<span lang=EN-US> 3</span>부분으로 나누어 렌더링 합니다<span
lang=EN-US>. </span>먼저<span lang=EN-US> 1 </span>번 단계로 보통<span lang=EN-US> 3D</span>를
렌더링 할 때와 마찬가지로 파티클과 장면을 그립니다<span lang=EN-US>. </span>이것을 실시간 텍스처에 저장합니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal>다음으로 화면을 왜곡시킬 파티클을 <span lang=EN-US>Distortion </span>맵으로 사용할
텍스처에 렌더링 합니다<span lang=EN-US>. </span>이 때의 렌더링은 변위 정보가 저장 되야 합니다<span
lang=EN-US>. </span>변위정보의 저장은 파티클에 노이즈 이미지 등을 매핑 하고 렌더링 하면 됩니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>세 번째 단계에서는<span lang=EN-US> 3D </span>장면을 저장한 텍스처와<span
lang=EN-US> 2</span>번 단계에서 파티클의 변위를 저장한<span lang=EN-US> Distortion</span>맵을 가지고
혼합합니다<span lang=EN-US>. </span>혼합 방법은 화면 잡음 때와 비슷하게 <span lang=EN-US>Distortion
</span>맵의 정보를 가지고<span lang=EN-US> 3D </span>장면을 저장한 픽셀을 상하 또는 좌우로 움직이게 합니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>방법에 수학적 물리적 이론이 있는 것은 아니니까 여러분은 각 단계 별로 하나씩 해결해 가면 구현의 어려움은 없을
것입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>먼저<span lang=EN-US> 1</span>단계의 파티클을 화면에 출력해 봅시다<span
lang=EN-US>. </span>이 파티클은 <span lang=EN-US><a
href="https://github.com/3dapi/dv16_shader4/raw/master/h4_04_distort0_particle.zip">h4_04_distort0_particle.zip</a></span>에 구현되어
있습니다<span lang=EN-US>. class CMcParticle </span>안에 하나의 파티클에 대한 동작을 제어할 구조체가 다음과
같이 선언되어 있습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:blue'>struct Tpart</span></p>

<p class=MsoNormal><span lang=EN-US>{</span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:40.0pt;
word-break:keep-all'><span lang=EN-US style='color:blue'>D3DXVECTOR2</span><span
lang=EN-US>&nbsp;&nbsp;&nbsp; m_IntP;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// </span><span style='color:green'>초기 위치</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=PT-BR style='color:blue'>D3DXCOLOR</span><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_dCol;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US style='color:green'>//
</span><span style='color:green'>색상</span></p>

<p class=MsoNormal><span lang=EN-US>};</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이 구조체를 가지고 만든 파티클은 <span lang=EN-US>CMcParticle::SetPart(int
nIdx) </span>함수 안에 구현되어 있습니다</p>

<p class=MsoNormal>이 구조체와 초기함수로 파티클의 움직임은 <span lang=EN-US>CMcParticle::FrameMove()
</span>안에서 재 설정 됩니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:blue'>INT</span><span
lang=EN-US> </span><span lang=EN-US style='color:blue'>CMcParticle</span><span
lang=EN-US>::</span><span lang=EN-US style='color:#880000'>FrameMove</span><span
lang=EN-US>()</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:blue'>for</span>(</span><span lang=EN-US>i</span><span lang=EN-US>=<span
style='color:red'>0</span>; </span><span lang=EN-US>i</span><span lang=EN-US>&lt;</span><span
lang=EN-US>m_PrtN</span><span lang=EN-US>; ++</span><span lang=EN-US>i</span><span
lang=EN-US>)</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>CMcParticle</span><span lang=EN-US>::</span><span lang=EN-US>Tpart</span><span
lang=EN-US>* pPrt = &amp;m_PrtD[i];</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// </span><span style='color:green'>현재 위치 갱신</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pPrt-&gt;m_CrnP
+= pPrt-&gt;m_CrnV * ftime;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:blue'>float</span>&nbsp;&nbsp; </span><span lang=EN-US>f</span><span
lang=EN-US> = (<span style='color:red'>100</span> - <span style='color:#880000'>rand</span>()%<span
style='color:red'>201</span>) * <span style='color:red'>0</span>.<span
style='color:red'>01f</span>;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pPrt-&gt;m_CrnP.x
+=f;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// </span><span style='color:green'>경계 값 설정</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:blue'>if</span>(</span><span lang=EN-US>pPrt</span><span
lang=EN-US>-&gt;</span><span lang=EN-US>m_CrnP</span><span lang=EN-US>.</span><span
lang=EN-US>y</span><span lang=EN-US>&lt;<span style='color:red'>0</span>.</span><span
lang=EN-US>f</span><span lang=EN-US>|| </span><span lang=EN-US>pPrt</span><span
lang=EN-US>-&gt;</span><span lang=EN-US>m_dCol</span><span lang=EN-US>.</span><span
lang=EN-US>a</span><span lang=EN-US> &lt; <span style='color:red'>0</span>)</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#880000'>SetPart</span>(</span><span lang=EN-US>i</span><span
lang=EN-US>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// </span><span style='color:green'>입자의 운동을<span
lang=EN-US> Vertex Buffer</span>에 연결</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>CMcParticle</span><span lang=EN-US>::</span><span
lang=EN-US style='color:blue'>VtxDRHW</span><span lang=EN-US>*&nbsp; pVtx;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pVB</span><span lang=EN-US>-&gt;<span style='color:#880000'>Lock</span>(<span
style='color:red'>0</span>,<span style='color:red'>0</span>,(<span
style='color:blue'>void</span>**)&amp;</span><span lang=EN-US>pVtx</span><span
lang=EN-US>, <span style='color:red'>0</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:blue'>for</span>(</span><span lang=EN-US>i</span><span lang=EN-US>=<span
style='color:red'>0</span>; </span><span lang=EN-US>i</span><span lang=EN-US>&lt;</span><span
lang=EN-US>m_PrtN</span><span lang=EN-US>; ++</span><span lang=EN-US>i</span><span
lang=EN-US>)</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>CMcParticle</span><span lang=EN-US>::</span><span
lang=EN-US style='color:blue'>Tpart</span><span lang=EN-US>* pPrt =
&amp;m_PrtD[i];</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pVB</span><span lang=EN-US>-&gt;<span style='color:#880000'>Unlock</span>();</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>화염이 좌우로 흔들리기 위해<span lang=EN-US> Random </span>함수로 <span
lang=EN-US>f = (</span><span lang=EN-US style='color:red'>100</span><span
lang=EN-US> - </span><span lang=EN-US style='color:#880000'>rand</span><span
lang=EN-US>()%</span><span lang=EN-US style='color:red'>201</span><span
lang=EN-US>) * </span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US>.</span><span lang=EN-US style='color:red'>01f</span><span
lang=EN-US>; </span>값을 만들어서 파티클의 위치에 더했습니다<span lang=EN-US>. </span>파티클을<span
lang=EN-US> Point Sprite</span>로 렌더링 하기 위해서<span lang=EN-US> CMcParticle </span>객체를
만들 때 생성한 정점 버퍼에 위치와 색상을 복사를 합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>파티클은 <span lang=EN-US>CMcParticle::Render() </span>함수에서 렌더링을
합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:blue'>void CMcParticle</span><span
lang=EN-US>::</span><span lang=EN-US style='color:#880000'>Render</span><span
lang=EN-US>()</span></p>

<p class=MsoNormal><span lang=EN-US>{</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span style='color:#880000'>SetRenderState</span>(<span
style='color:#A000A0'>D3DRS_POINTSPRITEENABLE</span>, <span style='color:#A000A0'>TRUE</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span style='color:#880000'>SetRenderState</span>(<span
style='color:#A000A0'>D3DRS_POINTSCALEENABLE</span>, <span style='color:#A000A0'>TRUE</span>);
</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span style='color:#880000'>SetRenderState</span>(<span
style='color:#A000A0'>D3DRS_POINTSIZE</span>, <span style='color:#880000'>FtoDW</span>(<span
style='color:red'>120.f</span>));</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span style='color:#880000'>SetRenderState</span>(<span
style='color:#A000A0'>D3DRS_POINTSIZE_MIN</span>, <span style='color:#880000'>FtoDW</span>(<span
style='color:red'>1</span>.<span style='color:red'>0f</span>));</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span style='color:#880000'>SetRenderState</span>(<span
style='color:#A000A0'>D3DRS_POINTSCALE_A</span>, <span style='color:#880000'>FtoDW</span>(<span
style='color:red'>1</span>.<span style='color:red'>0f</span>));</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span style='color:#880000'>SetRenderState</span>(<span
style='color:#A000A0'>D3DRS_POINTSCALE_B</span>, <span style='color:#880000'>FtoDW</span>(<span
style='color:red'>2</span>.<span style='color:red'>0f</span>));</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span style='color:#880000'>SetRenderState</span>(<span
style='color:#A000A0'>D3DRS_POINTSCALE_C</span>, <span style='color:#880000'>FtoDW</span>(<span
style='color:red'>3</span>.<span style='color:red'>0f</span>));</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:blue'>if</span>(::<span style='color:#880000'>GetAsyncKeyState</span>(<span
style='color:fuchsia'>'R'</span>) &amp; <span style='color:red'>0X8000</span>)</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span style='color:#880000'>SetRenderState</span>(<span
style='color:#A000A0'>D3DRS_SRCBLEND</span>, <span style='color:#A000A0'>D3DBLEND_SRCALPHA</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span style='color:#880000'>SetRenderState</span>(<span
style='color:#A000A0'>D3DRS_DESTBLEND</span>, <span style='color:#A000A0'>D3DBLEND_DESTALPHA</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_pDev-&gt;</span><span
lang=EN-US style='color:#880000'>SetTexture</span><span lang=EN-US>(</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>, m_pTx);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span style='color:#880000'>SetStreamSource</span>(<span
style='color:red'>0</span>, </span><span lang=EN-US>m_pVB</span><span
lang=EN-US>, <span style='color:red'>0</span>, <span style='color:blue'>sizeof</span>(<span
style='color:blue'>CMcParticle</span>::<span style='color:blue'>VtxDRHW</span>));</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span style='color:#880000'>DrawPrimitive</span>(<span
style='color:#A000A0'>D3DPT_POINTLIST</span>, <span style='color:red'>0</span>,
</span><span lang=EN-US>m_PrtN</span><span lang=EN-US>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>else</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span style='color:#880000'>SetRenderState</span>(<span
style='color:#A000A0'>D3DRS_SRCBLEND</span>, <span style='color:#A000A0'>D3DBLEND_SRCALPHA</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span style='color:#880000'>SetRenderState</span>(<span
style='color:#A000A0'>D3DRS_DESTBLEND</span>, <span style='color:#A000A0'>D3DBLEND_INVSRCALPHA</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_pDev-&gt;</span><span
lang=EN-US style='color:#880000'>SetTexture</span><span lang=EN-US>(</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>, m_pTx);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span style='color:#880000'>SetStreamSource</span>(<span
style='color:red'>0</span>, </span><span lang=EN-US>m_pVB</span><span
lang=EN-US>, <span style='color:red'>0</span>, <span style='color:blue'>sizeof</span>(<span
style='color:blue'>CMcParticle</span>::<span style='color:blue'>VtxDRHW</span>));</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span style='color:#880000'>DrawPrimitive</span>(<span
style='color:#A000A0'>D3DPT_POINTLIST</span>, <span style='color:red'>0</span>,
</span><span lang=EN-US>m_PrtN</span><span lang=EN-US>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이 코드를 실행하면 다음 그림의 왼쪽의 화면이 보이며 이 화면을<span lang=EN-US>
Distortion </span>맵으로 만들 것입니다<span lang=EN-US>. </span><span lang=EN-US
style='color:fuchsia'>'R'</span><span lang=EN-US> </span>키를 누르면 오른 쪽 그림과 같이 보통 파티클을
렌더링 하는 장면이 나옵니다<span lang=EN-US>. </span>두 장면의 차이는 알파 블렌딩 옵션에서 <span
lang=EN-US style='color:#A000A0'>D3DRS_DESTBLEND</span><span lang=EN-US> </span>에
대한 설정 값이 왼쪽그림은 <span lang=EN-US style='color:#A000A0'>INVSRCALPHA</span><span
lang=EN-US> </span>이고 오른쪽 그림은 <span lang=EN-US style='color:#A000A0'>DESTALPHA</span><span
lang=EN-US> </span>입니다<span lang=EN-US>. </span>이 점을 꼭 기억하기 바랍니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=272 height=204
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image074.gif">&nbsp;<img border=0 width=272
height=204 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image075.gif"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;</span>파티클 효과<span lang=EN-US>: <a
href="https://github.com/3dapi/dv16_shader4/raw/master/h4_04_distort0_particle.zip">h4_04_distort0_particle.zip</a>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>파티클을 만들었으니 이 파티클을 텍스처에 저장하는<span lang=EN-US> 2</span>단계가 남았습니다<span
lang=EN-US>. </span>클래스 <span lang=EN-US>CTexDistort</span>는 변위 텍스처를 가진 파티클을 화면에
저장하기 위해서 파티클 객체와<span lang=EN-US> IrenderTarget </span>객체를 가지고 있습니다<span
lang=EN-US>. IrenderTarget</span>은 장면을 텍스처에 저장하기 위한 객체 입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:blue'>class CTexDistort</span></p>

<p class=MsoNormal><span lang=EN-US>{</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>IrenderTarget</span><span lang=EN-US>* m_pTrnd;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// Rendering Target Texture for Scene</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>CMcParticle</span><span lang=EN-US>*&nbsp;&nbsp; m_pPrt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// Particle Pointer</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US>};</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>CTexDistort::FrameMove() </span>함수는 파티클의 움직임에
대한 정보를 먼저 갱신합니다<span lang=EN-US>. </span>다음으로 이 파티클을<span lang=EN-US>
IrenderTarget</span>에 렌더링 합니다<span lang=EN-US>. </span>눈 여겨 볼 것은 색상버퍼를<span
lang=EN-US> Clear() </span>함수로 리셋 할 때 그 값을 <span lang=EN-US style='color:blue'>D3DXCOLOR</span><span
lang=EN-US>(<span style='color:red'>0</span>.<span style='color:red'>5F</span>,
<span style='color:red'>0</span>.<span style='color:red'>5F</span>, <span
style='color:red'>0</span>, <span style='color:red'>1</span>) </span>값으로 하고 있습니다<span
lang=EN-US>. </span>이 값은 쉐이더 코드에서<span lang=EN-US> x</span>와<span lang=EN-US> y</span>에
대해서 <span lang=EN-US style='color:red'>-0.5</span>만큼 이동할 값입니다<span lang=EN-US>.
</span>즉<span lang=EN-US>, </span>색상 정보를 변위로 사용하고 싶은데 색상 값은 항상 양수이므로 쉐이더에서 그 차감만큼
기존 색상에 더해 주어야 하기 때문입니다<span lang=EN-US>. </span>화면을<span lang=EN-US> Clear </span>하는
것은 또한 특정한 색상으로 채우는 것입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>앞서 강조한 알파 블렌딩 상태 <span lang=EN-US style='color:#A000A0'>D3DRS_DESTBLEND</span><span
lang=EN-US> </span>에 대한 값을 <span lang=EN-US style='color:#A000A0'>INVSRCALPHA</span>으로
설정함을 주의해야 합니다<span lang=EN-US>. </span>이 것을 바꾸면 변위의 위치가 파티클의 위치와 차이가 생겨 쉐이더 코드에서
더 내용을 추가 해야 합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:blue'>INT</span><span
lang=EN-US> </span><span lang=EN-US style='color:blue'>CTexDistort</span><span
lang=EN-US>::</span><span lang=EN-US style='color:#880000'>FrameMove</span><span
lang=EN-US>()</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// </span><span style='color:green'>파티클 갱신</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_pPrt-&gt;</span><span
lang=EN-US style='color:#880000'>SetTimeEps</span><span lang=EN-US>(g_pApp-&gt;m_fElapsedTime);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pPrt</span><span lang=EN-US>-&gt;<span style='color:#880000'>FrameMove</span>();</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// </span><span style='color:green'>파티클을 렌더링 텍스처에
그린다<span lang=EN-US>.</span></span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pTrnd</span><span lang=EN-US>-&gt;<span style='color:#880000'>BeginScene</span>();</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span style='color:#880000'>Clear</span>(…</span><span
lang=EN-US>, </span><span lang=EN-US style='color:#A000A0'>D3DCLEAR_TARGET |
D3DCLEAR_ZBUFFER</span><span lang=EN-US>,</span><span lang=EN-US> <span
style='color:blue'>D3DXCOLOR</span>(<span style='color:red'>.5F</span>,<span
style='color:red'>.5F</span>,<span style='color:red'>0</span>,<span
style='color:red'>1</span>),…);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span style='color:#880000'>SetTextureStageState</span>(<span
style='color:red'>0</span>, <span style='color:#A000A0'>D3DTSS_COLORARG1</span>,
<span style='color:#A000A0'>D3DTA_TEXTURE</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span style='color:#880000'>SetTextureStageState</span>(<span
style='color:red'>0</span>, <span style='color:#A000A0'>D3DTSS_COLORARG2</span>,
<span style='color:#A000A0'>D3DTA_DIFFUSE</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span style='color:#880000'>SetTextureStageState</span>(<span
style='color:red'>0</span>, <span style='color:#A000A0'>D3DTSS_COLOROP</span>, <span
style='color:#A000A0'>D3DTOP_SELECTARG1</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span style='color:#880000'>SetTextureStageState</span>(<span
style='color:red'>0</span>, <span style='color:#A000A0'>D3DTSS_ALPHAARG1</span>,
<span style='color:#A000A0'>D3DTA_TEXTURE</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span style='color:#880000'>SetTextureStageState</span>(<span
style='color:red'>0</span>, <span style='color:#A000A0'>D3DTSS_ALPHAARG2</span>,
<span style='color:#A000A0'>D3DTA_DIFFUSE</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span style='color:#880000'>SetTextureStageState</span>(<span
style='color:red'>0</span>, <span style='color:#A000A0'>D3DTSS_ALPHAOP</span>, <span
style='color:#A000A0'>D3DTOP_MODULATE</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span style='color:#880000'>SetRenderState</span>(<span
style='color:#A000A0'>D3DRS_ALPHABLENDENABLE</span>, <span style='color:#A000A0'>TRUE</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span style='color:#880000'>SetRenderState</span>(<span
style='color:#A000A0'>D3DRS_SRCBLEND</span>, <span style='color:#A000A0'>D3DBLEND_SRCALPHA</span>);</span></p>

<p class=MsoNormal style='text-indent:40.0pt'><span lang=EN-US>m_pDev</span><span
lang=EN-US>-&gt;<span style='color:#880000'>SetRenderState</span>(<span
style='color:#A000A0'>D3DRS_DESTBLEND</span>, <span style='color:#A000A0'>D3DBLEND_INVSRCALPHA</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pPrt</span><span lang=EN-US>-&gt;<span style='color:#880000'>Render</span>();</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pTrnd</span><span lang=EN-US>-&gt;<span style='color:#880000'>EndScene</span>();</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이렇게 파티클을 갱신하고<span lang=EN-US> Distortion </span>맵의 상태를 확인할 필요가
있습니다<span lang=EN-US>. </span>또한<span lang=EN-US> CTexDistort </span>클래스는 파티클의 화염
효과도 렌더링을 담당하고 있으므로 이 두 가지 일을 동시에 처리하도록 하는 것도 좋습니다<span lang=EN-US>. CTexDistort::Render()
</span>함수는<span lang=EN-US> Distortion </span>맵을 확인하기 위해 이 맵을 화면에 출력하는 것과 장면에서 사용되는
화염 효과에 대한 렌더링 두 가지를 같이 하고 있습니다<span lang=EN-US>. Distortion </span>맵이 확인이 되면 이 부분은
나중에 주석으로 막아야 하는 코드 입니다<span lang=EN-US>. </span>다음은<span lang=EN-US> Distortion
</span>맵을 화면에 출력하는 <span lang=EN-US>CTexDistort::Render() </span>함수의 일 부분입니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:blue'>struct Tvtx</span></p>

<p class=MsoNormal><span lang=EN-US>{</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:blue'>FLOAT</span>&nbsp;&nbsp; </span><span lang=EN-US>p</span><span
lang=EN-US>[<span style='color:red'>4</span>];</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:blue'>FLOAT</span>&nbsp;&nbsp; </span><span lang=EN-US>u</span><span
lang=EN-US>,</span><span lang=EN-US>v</span><span lang=EN-US>;</span></p>

<p class=MsoNormal><span lang=EN-US>} </span><span lang=EN-US>pVtx</span><span
lang=EN-US>[<span style='color:red'>4</span>] =</span></p>

<p class=MsoNormal><span lang=EN-US>{</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {&nbsp;&nbsp;
<span style='color:red'>0</span>,&nbsp;&nbsp; <span style='color:red'>0</span>,&nbsp;
<span style='color:red'>0</span>,&nbsp; <span style='color:red'>1</span>,&nbsp;
<span style='color:red'>0</span>, <span style='color:red'>0</span>},</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {
<span style='color:red'>200</span>,&nbsp;&nbsp; <span style='color:red'>0</span>,&nbsp;
<span style='color:red'>0</span>,&nbsp; <span style='color:red'>1</span>,&nbsp;
<span style='color:red'>1</span>, <span style='color:red'>0</span>},</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {
<span style='color:red'>200</span>, <span style='color:red'>150</span>,&nbsp; <span
style='color:red'>0</span>,&nbsp; <span style='color:red'>1</span>,&nbsp; <span
style='color:red'>1</span>, <span style='color:red'>1</span>},</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {&nbsp;&nbsp;
<span style='color:red'>0</span>, <span style='color:red'>150</span>,&nbsp; <span
style='color:red'>0</span>,&nbsp; <span style='color:red'>1</span>,&nbsp; <span
style='color:red'>0</span>, <span style='color:red'>1</span>},</span></p>

<p class=MsoNormal><span lang=EN-US>};</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:blue'>PDTX</span><span
lang=EN-US>&nbsp;&nbsp;&nbsp; </span><span lang=EN-US>pTex</span><span
lang=EN-US> = (<span style='color:blue'>PDTX</span>)</span><span lang=EN-US>m_pTrnd</span><span
lang=EN-US>-&gt;<span style='color:#880000'>GetTexture</span>();</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:green'>// Distoriton </span><span
style='color:green'>맵을 화면에 출력한다<span lang=EN-US>.</span></span></p>

<p class=MsoNormal><span lang=EN-US>m_pDev-&gt;</span><span lang=EN-US
style='color:#880000'>SetTexture</span><span lang=EN-US>(</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>, pTex);</span></p>

<p class=MsoNormal><span lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span
style='color:#880000'>SetFVF</span>(<span style='color:#A000A0'>D3DFVF_XYZRHW</span>|<span
style='color:#A000A0'>D3DFVF_TEX1</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span
style='color:#880000'>DrawPrimitiveUP</span>( <span style='color:#A000A0'>D3DPT_TRIANGLEFAN</span>,
<span style='color:red'>2</span>, </span><span lang=EN-US>pVtx</span><span
lang=EN-US>, <span style='color:blue'>sizeof</span>(<span style='color:blue'>Tvtx</span>));</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>다음은 <span lang=EN-US>CTexDistort::Render() </span>함수에서 화염 효과를
출력하는 부분입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span
style='color:#880000'>SetTextureStageState</span>(<span style='color:red'>0</span>,
<span style='color:#A000A0'>D3DTSS_COLORARG1</span>, <span style='color:#A000A0'>D3DTA_TEXTURE</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span
style='color:#880000'>SetTextureStageState</span>(<span style='color:red'>0</span>,
<span style='color:#A000A0'>D3DTSS_COLORARG2</span>, <span style='color:#A000A0'>D3DTA_DIFFUSE</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span
style='color:#880000'>SetTextureStageState</span>(<span style='color:red'>0</span>,
<span style='color:#A000A0'>D3DTSS_COLOROP</span>, <span style='color:#A000A0'>D3DTOP_MODULATE</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span
style='color:#880000'>SetTextureStageState</span>(<span style='color:red'>0</span>,
<span style='color:#A000A0'>D3DTSS_ALPHAARG1</span>, <span style='color:#A000A0'>D3DTA_TEXTURE</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span
style='color:#880000'>SetTextureStageState</span>(<span style='color:red'>0</span>,
<span style='color:#A000A0'>D3DTSS_ALPHAARG2</span>, <span style='color:#A000A0'>D3DTA_DIFFUSE</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span
style='color:#880000'>SetTextureStageState</span>(<span style='color:red'>0</span>,
<span style='color:#A000A0'>D3DTSS_ALPHAOP</span>, <span style='color:#A000A0'>D3DTOP_MODULATE</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span
style='color:#880000'>SetRenderState</span>(<span style='color:#A000A0'>D3DRS_ZENABLE</span>,
<span style='color:#A000A0'>FALSE</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span
style='color:#880000'>SetRenderState</span>(<span style='color:#A000A0'>D3DRS_ZWRITEENABLE</span>,
<span style='color:#A000A0'>FALSE</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span
style='color:#880000'>SetRenderState</span>(<span style='color:#A000A0'>D3DRS_LIGHTING</span>,
<span style='color:#A000A0'>FALSE</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span
style='color:#880000'>SetRenderState</span>(<span style='color:#A000A0'>D3DRS_ALPHATESTENABLE</span>,
<span style='color:#A000A0'>FALSE</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span
style='color:#880000'>SetRenderState</span>(<span style='color:#A000A0'>D3DRS_ALPHABLENDENABLE</span>,
<span style='color:#A000A0'>TRUE</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span
style='color:#880000'>SetRenderState</span>(<span style='color:#A000A0'>D3DRS_SRCBLEND</span>,
<span style='color:#A000A0'>D3DBLEND_SRCALPHA</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span
style='color:#880000'>SetRenderState</span>(<span style='color:#A000A0'>D3DRS_DESTBLEND</span>,
<span style='color:#A000A0'>D3DBLEND_DESTALPHA</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>m_pPrt</span><span lang=EN-US>-&gt;<span
style='color:#880000'>Render</span>();</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>지금은<span lang=EN-US> 2</span>차원 화면 공간에<span lang=EN-US> RHW</span>로
파티클이 마지막에 그려진다는 전제에 무조건 이전 색상을 덮어쓰기 위해서<span lang=EN-US> ZENABLE</span>를<span
lang=EN-US> FALSE</span>로 했습니다<span lang=EN-US>. </span>이것을<span lang=EN-US> 3D</span>에서<span
lang=EN-US> FALSE</span>로 하면 모든 오브젝트를 통과해선 타납니다<span lang=EN-US>. 3</span>차원 공간에서는<span
lang=EN-US> ZWRITEENALBLE FALSE</span>하는 것이 더 좋습니다<span lang=EN-US>. </span>자세한
내용은<span lang=EN-US> 3D </span>프로그램 기초 고정 함수 파이프라인 강좌에 있는 알파 또는 깊이 테스트 부분을 참고 하기
바랍니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>화염의 색상이 계속 밝아지기 위해서 <span lang=EN-US style='color:#A000A0'>DESTBLEND</span><span
lang=EN-US>, </span>설정을 <span lang=EN-US style='color:#A000A0'>D3DBLEND_DESTALPHA</span>으로
했습니다<span lang=EN-US>. </span>만약<span lang=EN-US> DEST</span>의 알파가 없으면<span
lang=EN-US> DEST</span>는<span lang=EN-US> ONE</span>으로 설정하는 것과 동일합니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>CTexDistort</span><span lang=EN-US> </span>클래스는<span
lang=EN-US> Distortion </span>텍스처를 쉐이더에서 사용할 수 있도록 텍스처를 가져올 수 있게 다음과 같은 함수도 추가하고
있어야 합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:blue'>PDTX</span><span
lang=EN-US> </span><span lang=EN-US style='color:blue'>CTexDistort</span><span
lang=EN-US>::</span><span lang=EN-US style='color:#880000'>GetTexture</span><span
lang=EN-US>()</span></p>

<p class=MsoNormal><span lang=EN-US>{</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:blue'>return</span> (<span style='color:blue'>PDTX</span>)</span><span
lang=EN-US>m_pTrnd</span><span lang=EN-US>-&gt;<span style='color:#880000'>GetTexture</span>();</span></p>

<p class=MsoNormal><span lang=EN-US>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>1, 2 </span>단계의 과정이 다 끝났고<span lang=EN-US>,
</span>마지막 단계인<span lang=EN-US> Distortion </span>맵과<span lang=EN-US> 3D </span>장면을
합치는<span lang=EN-US> 3 </span>단계가 남았습니다<span lang=EN-US>. </span>이를 위해 앞에서 계속 쉐이더를
시험하기 위해 사용했던 <span lang=EN-US>CShaderEx </span>클래스가 이<span lang=EN-US> 3</span>단계를
처리 할 것입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>CShaderEx </span>클래스는 다음과 같이 <span
lang=EN-US style='color:blue'>CTexDistort</span><span lang=EN-US> </span>객체를 가지고
있습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:blue'>CTexDistort</span><span
lang=EN-US>*&nbsp;&nbsp; m_pDst;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>CShaderEx </span>클래스의<span lang=EN-US>
Render() </span>함수는<span lang=EN-US> 3 </span>단계를 다음과 같이 처리하고 있습니다<span
lang=EN-US>. </span>쉐이더에서<span lang=EN-US> sampler </span>레지스터를 지정해서 사용하고 있어서 각
다중 텍스처 단계에 대한 주소 모드<span lang=EN-US>, </span>필터링<span lang=EN-US>, </span>등을 전부
설정해야 합니다<span lang=EN-US>. </span>또한 텍스처를<span lang=EN-US> 2</span>개를 파이프라인에 걸어주고
있는데 좌표는<span lang=EN-US> 1</span>쌍 밖에 없으므로<span lang=EN-US> 1 </span>번째 단계의 텍스처를
샘플링 할 때<span lang=EN-US> 0</span>번째 텍스처 좌표를 가지고 하도록 다중 텍스처 단계<span lang=EN-US>
1 </span>단계를<span lang=EN-US> pDevice-&gt;SetTextureStageState(</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US>, D3DTSS_TEXCOORDINDEX, </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>)</span>으로 해야 합니다<span
lang=EN-US>. </span>렌더링이 끝나고 코드 마지막에<span lang=EN-US> pDevice-&gt;SetTextureStageState(</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US>, D3DTSS_TEXCOORDINDEX, </span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US>) </span>로 다시 설정해야 하는 것은 당연합니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:blue'>void</span><span
lang=EN-US> </span><span lang=EN-US style='color:blue'>CShaderEx</span><span
lang=EN-US>::</span><span lang=EN-US style='color:#880000'>Render</span><span
lang=EN-US>()</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span
style='color:#880000'>SetSamplerState</span>(<span style='color:red'>1</span>, <span
style='color:#A000A0'>D3DSAMP_ADDRESSU</span>, <span style='color:#A000A0'>D3DTADDRESS_CLAMP</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span
style='color:#880000'>SetSamplerState</span>(<span style='color:red'>1</span>, <span
style='color:#A000A0'>D3DSAMP_ADDRESSV</span>, <span style='color:#A000A0'>D3DTADDRESS_CLAMP</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span
style='color:#880000'>SetSamplerState</span>(<span style='color:red'>1</span>, <span
style='color:#A000A0'>D3DSAMP_MINFILTER</span>, <span style='color:#A000A0'>D3DTEXF_LINEAR</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span
style='color:#880000'>SetSamplerState</span>(<span style='color:red'>1</span>, <span
style='color:#A000A0'>D3DSAMP_MAGFILTER</span>, <span style='color:#A000A0'>D3DTEXF_LINEAR</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span
style='color:#880000'>SetSamplerState</span>(<span style='color:red'>1</span>, <span
style='color:#A000A0'>D3DSAMP_MIPFILTER</span>, <span style='color:#A000A0'>D3DTEXF_NONE</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span
style='color:#880000'>SetTextureStageState</span>(<span style='color:red'>1</span>,
<span style='color:#A000A0'>D3DTSS_TEXCOORDINDEX</span>, <span
style='color:red'>0</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:blue'>FLOAT</span><span
lang=EN-US>&nbsp;&nbsp; </span><span lang=EN-US>hHeatHaze</span><span
lang=EN-US> = .<span style='color:red'>1f</span>;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:blue'>PDTX</span><span
lang=EN-US>&nbsp;&nbsp;&nbsp; </span><span lang=EN-US>pTex0</span><span
lang=EN-US> = </span><span lang=EN-US>m_pTex</span><span lang=EN-US>;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:blue'>PDTX</span><span
lang=EN-US>&nbsp;&nbsp;&nbsp; </span><span lang=EN-US>pTex1</span><span
lang=EN-US> = </span><span lang=EN-US>m_pDst</span><span lang=EN-US>-&gt;<span
style='color:#880000'>GetTexture</span>();</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>m_pEft</span><span lang=EN-US>-&gt;<span
style='color:#880000'>SetTechnique</span>(<span style='color:fuchsia'>&quot;Tech&quot;</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>m_pEft-&gt;</span><span lang=EN-US
style='color:#880000'>SetFloat</span><span lang=EN-US>(</span><span lang=EN-US
style='color:fuchsia'>&quot;g_HeatHaze&quot;</span><span lang=EN-US>,
hHeatHaze);</span></p>

<p class=MsoNormal><span lang=EN-US>m_pEft</span><span lang=EN-US>-&gt;<span
style='color:#880000'>Begin</span>(<span style='color:#A000A0'>NULL</span>, <span
style='color:red'>0</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>m_pEft</span><span lang=EN-US>-&gt;<span
style='color:#880000'>Pass</span>(<span style='color:red'>0</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>m_pDev-&gt;</span><span lang=EN-US
style='color:#880000'>SetTexture</span><span lang=EN-US>(</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>, pTex0);</span></p>

<p class=MsoNormal><span lang=EN-US>m_pDev-&gt;</span><span lang=EN-US
style='color:#880000'>SetTexture</span><span lang=EN-US>(</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US>, pTex1);</span></p>

<p class=MsoNormal><span lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span
style='color:#880000'>SetFVF</span>(<span style='color:blue'>VtxDUV1</span>::<span
style='color:#A000A0'>FVF</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span
style='color:#880000'>DrawPrimitiveUP</span>( <span style='color:#A000A0'>D3DPT_TRIANGLEFAN</span>,
<span style='color:red'>2</span>, </span><span lang=EN-US>m_pVtx</span><span
lang=EN-US>, <span style='color:blue'>sizeof</span>(<span style='color:blue'>VtxDUV1</span>));</span></p>

<p class=MsoNormal><span lang=EN-US>m_pEft</span><span lang=EN-US>-&gt;<span
style='color:#880000'>End</span>();</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>m_pDev</span><span lang=EN-US>-&gt;<span
style='color:#880000'>SetTextureStageState</span>(<span style='color:red'>1</span>,
<span style='color:#A000A0'>D3DTSS_TEXCOORDINDEX</span>, <span
style='color:red'>1</span>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>m_pDev-&gt;</span><span lang=EN-US style='color:#880000'>SetTexture</span><span
lang=EN-US>(</span><span lang=EN-US style='color:red'>0</span><span lang=EN-US>,
</span><span lang=EN-US style='color:#A000A0'>NULL</span><span lang=EN-US>);</span></p>

<p class=MsoNormal><span lang=EN-US>m_pDev-&gt;</span><span lang=EN-US
style='color:#880000'>SetTexture</span><span lang=EN-US>(</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US>, </span><span
lang=EN-US style='color:#A000A0'>NULL</span><span lang=EN-US>);</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>실행 파일 코드는 다 끝났습니다<span lang=EN-US>. </span>이제 쉐이더 코드가 남아 있습니다<span
lang=EN-US>. </span>다음 쉐이더 코드를 보면 이전의 화면 잡음 효과 때와 거의 간단한 쉐이더 코드로 만들어져 있음을 볼 수 있습니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US style='color:blue'>sampler</span><span
lang=EN-US> smp0:</span><span lang=EN-US style='color:#880000'>register</span><span
lang=EN-US>(</span><span lang=EN-US style='color:blue'>s0</span><span
lang=EN-US>);</span></p>

<p class=MsoNormal><span lang=EN-US style='color:blue'>sampler</span><span
lang=EN-US> smp1:<span style='color:#880000'>register</span>(<span
style='color:blue'>s1</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:blue'>SvsOut</span><span
lang=EN-US> </span><span lang=EN-US style='color:#880000'>VtxProc</span><span
lang=EN-US>( </span><span lang=EN-US style='color:blue'>float3</span><span
lang=EN-US> </span><span lang=EN-US style='color:#A000A0'>Pos</span><span
lang=EN-US>:</span><span lang=EN-US style='color:blue'>POSITION</span><span
lang=EN-US>, </span><span lang=EN-US style='color:blue'>float2</span><span
lang=EN-US> </span><span lang=EN-US style='color:#A000A0'>Tex</span><span
lang=EN-US>:</span><span lang=EN-US style='color:blue'>TEXCOORD0</span><span
lang=EN-US>)</span></p>

<p class=MsoNormal><span lang=EN-US>{</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>SvsOut</span><span lang=EN-US> Out;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US>.<span style='color:#A000A0'>Pos</span> =
<span style='color:blue'>float4</span>(<span style='color:#A000A0'>Pos</span>,<span
style='color:red'>1</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US>.<span style='color:#A000A0'>Tex</span> =
  <span style='color:#A000A0'>Tex</span>;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>return</span><span lang=EN-US> Out;</span></p>

<p class=MsoNormal><span lang=EN-US>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:blue'>float</span><span
lang=EN-US>&nbsp;&nbsp; </span><span lang=EN-US>g_HeatHaze</span><span
lang=EN-US> = <span style='color:red'>0</span>.<span style='color:red'>05</span>;</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US style='color:blue'>float4</span><span
lang=EN-US> </span><span lang=EN-US style='color:#880000'>PxlProc</span><span
lang=EN-US>(</span><span lang=EN-US>SvsOut</span><span lang=EN-US> In) : </span><span
lang=EN-US style='color:blue'>COLOR0</span></p>

<p class=MsoNormal><span lang=EN-US>{</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US> Out=</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:blue'>float4</span>&nbsp; </span><span lang=EN-US>Pert</span><span
lang=EN-US> = <span style='color:#880000'>tex2D</span>(smp1, </span><span
lang=EN-US>In</span><span lang=EN-US>.<span style='color:#A000A0'>Tex</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:blue'>float</span>&nbsp;&nbsp; </span><span lang=EN-US>x</span><span
lang=EN-US> = </span><span lang=EN-US>In</span><span lang=EN-US>.<span
style='color:#A000A0'>Tex</span>.</span><span lang=EN-US>x</span><span
lang=EN-US> + (</span><span lang=EN-US>Pert</span><span lang=EN-US>.</span><span
lang=EN-US>x</span><span lang=EN-US>-<span style='color:red'>0</span>.<span
style='color:red'>5</span>) * </span><span lang=EN-US>g_HeatHaze</span><span
lang=EN-US>;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:blue'>float</span>&nbsp;&nbsp; </span><span lang=EN-US>y</span><span
lang=EN-US> = </span><span lang=EN-US>In</span><span lang=EN-US>.<span
style='color:#A000A0'>Tex</span>.</span><span lang=EN-US>y</span><span
lang=EN-US> + (</span><span lang=EN-US>Pert</span><span lang=EN-US>.</span><span
lang=EN-US>y</span><span lang=EN-US>-<span style='color:red'>0</span>.<span
style='color:red'>5</span>) * </span><span lang=EN-US>g_HeatHaze</span><span
lang=EN-US>;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US> = <span style='color:#880000'>tex2D</span>(</span><span
lang=EN-US>smp0</span><span lang=EN-US>, <span style='color:blue'>float2</span>(</span><span
lang=EN-US>x</span><span lang=EN-US>,</span><span lang=EN-US>y</span><span
lang=EN-US>));</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>return</span><span lang=EN-US> Out;</span></p>

<p class=MsoNormal><span lang=EN-US>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>쉐이더 코드의 <span lang=EN-US>Pert.x-</span><span lang=EN-US
style='color:red'>0.5</span><span lang=EN-US>, Pert.y-</span><span lang=EN-US
style='color:red'>0.5</span><span lang=EN-US> </span>부분 때문에 앞서<span lang=EN-US>
Distortion </span>맵에 파티클을 렌더링 하기 전에 색상 버퍼를<span lang=EN-US> D3DXCOLOR(</span><span
lang=EN-US style='color:red'>0.5F</span><span lang=EN-US>, </span><span
lang=EN-US style='color:red'>0.5F</span><span lang=EN-US>, 1, 1)</span>으로<span
lang=EN-US> Clear </span>했습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>쉐이더 코드의 픽셀 처리 함수 <span lang=EN-US style='color:#880000'>PxlProc</span><span
lang=EN-US>(</span><span lang=EN-US>SvsOut</span><span lang=EN-US> In)</span>를 보면<span
lang=EN-US> 1 </span>번째 텍스처의 색상 값을 가져와<span lang=EN-US> 0.5</span>씩 빼주고<span
lang=EN-US>&nbsp; </span>이 값에<span lang=EN-US> HeatHaze </span>변수를 곱했습니다<span
lang=EN-US>. </span>그리고 다시 원래의<span lang=EN-US> UV</span>좌표에 더했습니다<span
lang=EN-US>. </span><span lang=EN-US>(</span><span lang=EN-US>Pert</span><span
lang=EN-US>.</span><span lang=EN-US>x</span><span lang=EN-US>-<span
style='color:red'>0</span>.<span style='color:red'>5</span>) * </span><span
lang=EN-US>g_HeatHaze </span>부분이 결국 화면을 왜곡 시키는 요소가 되는 것입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=273 height=204
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image076.gif"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt; Distortion </span>화염 효과<span
lang=EN-US>: <a href="https://github.com/3dapi/dv16_shader4/raw/master/h4_04_distort2.zip">h4_04_distort2.zip</a>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이번에는 이것을 지형이 있는<span lang=EN-US> 3D </span>장면에 만들어 보겠습니다<span
lang=EN-US>. </span>먼저 코드를 만들기 전에 여러분은 다음과 같은 그림을 생각하고 있어야 합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=612 height=228
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image077.gif"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;Distortion: </span>화염 효과<span
lang=EN-US> 3D&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>3D</span>는 그림을 잘 그리면 코드건 수학이건 잘 풀립니다<span
lang=EN-US>. </span>따라서 위와 같은 그림을 연습장에 그려놓고 코드 작업을 하는 것이 좋습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이전과 거의 같은데 신경을 써야 하는 부분은 아무래도<span lang=EN-US> Distortion </span>맵을
만드는 부분입니다<span lang=EN-US>. </span>단순히 파티클만 가지고 이 맵을 만들면 렌더링 오브젝트의 유무에 상관없이 무조건
화면이 흔들릴 것입니다<span lang=EN-US>. </span>따라서 오브젝트 앞에 있으면 효과를 주고 뒤에 있으면 안 주어야 합니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>간단한 해결 방법은 변위를 만드는 파티클 이외의 나머지 다른 객체들은 이전에 화면을<span
lang=EN-US> Clear </span>할 때 사용했던 값<span lang=EN-US> D3DXCOLOR(</span><span
lang=EN-US style='color:red'>0.5F</span><span lang=EN-US>, </span><span
lang=EN-US style='color:red'>0.5F</span><span lang=EN-US>, 1, 1)</span>으로 적용해서 그리면
파티클이 이 오브젝트 뒤에 있으면<span lang=EN-US> Distortion</span>이 적용이 안될 것입니다<span
lang=EN-US>. </span>이를 위해 다음과 같은 쉐이더 코드가 필요합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>float4x4</span><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_mtWld;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// World Matrix;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>SvsOut</span><span lang=EN-US> </span><span
lang=EN-US style='color:#880000'>VtxPrcObj</span><span lang=EN-US>( </span><span
lang=EN-US style='color:blue'>float3</span><span lang=EN-US> </span><span
lang=EN-US style='color:#A000A0'>Pos</span><span lang=EN-US> : </span><span
lang=EN-US style='color:blue'>POSITION</span><span lang=EN-US>, </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US> </span><span
lang=EN-US style='color:#A000A0'>Dif</span><span lang=EN-US> : </span><span
lang=EN-US style='color:blue'>COLOR0</span><span lang=EN-US>, </span><span
lang=EN-US style='color:blue'>float2</span><span lang=EN-US> </span><span lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US> : </span><span
lang=EN-US style='color:blue'>TEXCOORD0</span><span lang=EN-US>)</span></p>

<p class=MsoNormal><span lang=EN-US>{</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>SvsOut</span><span lang=EN-US> Out=(</span><span lang=EN-US
style='color:blue'>SvsOut</span><span lang=EN-US>)</span><span lang=EN-US
style='color:red'>0</span><span lang=EN-US>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Out.</span><span
lang=EN-US style='color:#A000A0'>Pos</span><span lang=EN-US> = </span><span
lang=EN-US style='color:#880000'>mul</span><span lang=EN-US>(</span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US>(</span><span
lang=EN-US style='color:#A000A0'>Pos</span><span lang=EN-US>,</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US>), m_mtWld);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Out.</span><span
lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US> = </span><span lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>return</span><span lang=EN-US> Out;</span></p>

<p class=MsoNormal><span lang=EN-US>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>앞의 정점 처리 쉐이더 코드는 정점의 위치를 변화 시키고 있고 텍스처 좌표를 픽셀 처리과정으로 넘기고 있습니다<span
lang=EN-US>. </span>텍스처 좌표가 필요한 것은 텍스처의 알파 블렌딩 때문입니다<span lang=EN-US>. </span>텍스처의
알파블렌딩이 꺼져 있으면 나뭇잎을 사각형으로 그리게 되어 나무들 사이로<span lang=EN-US> Distortion </span>효과가 제대로
반영되지 않게 되므로 꼭 텍스처 좌표도 픽셀 처리과정으로 넘겨야 됩니다<span lang=EN-US>. </span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US> </span><span
lang=EN-US style='color:#880000'>PxlPrcObj</span><span lang=EN-US>(</span><span
lang=EN-US style='color:blue'>SvsOut</span><span lang=EN-US> In) : </span><span
lang=EN-US style='color:blue'>COLOR0</span></p>

<p class=MsoNormal><span lang=EN-US>{</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>float4</span><span lang=EN-US>&nbsp; Out={</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US>,</span><span lang=EN-US
style='color:red'>1</span><span lang=EN-US>,</span><span lang=EN-US
style='color:red'>1</span><span lang=EN-US>,</span><span lang=EN-US
style='color:red'>1</span><span lang=EN-US>};</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Out = </span><span
lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US>(smp0, In.</span><span
lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Out.r=</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>.</span><span lang=EN-US
style='color:red'>5f</span><span lang=EN-US>; Out.g=</span><span lang=EN-US
style='color:red'>0</span><span lang=EN-US>.</span><span lang=EN-US
style='color:red'>5f</span><span lang=EN-US>; Out.b=</span><span lang=EN-US
style='color:red'>0</span><span lang=EN-US>.</span><span lang=EN-US
style='color:red'>5f</span><span lang=EN-US>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>return</span><span lang=EN-US> Out;</span></p>

<p class=MsoNormal><span lang=EN-US>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>출력 색상을<span lang=EN-US> tex2D() </span>함수로 샘플링 하고 있습니다<span
lang=EN-US>. </span>이 것은 출력 색상의 알파 값을 사용하기 위해서 입니다<span lang=EN-US>. </span>알파를
사용하기 위해서는 이 오브젝트를 그릴 때 다음과 같이 당연히 알파 블렌딩을 설정해야 합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>pDevice-&gt;</span><span lang=EN-US style='color:#880000'>SetRenderState</span><span
lang=EN-US>( </span><span lang=EN-US style='color:#A000A0'>D3DRS_ALPHABLENDENABLE</span><span
lang=EN-US>, </span><span lang=EN-US style='color:#A000A0'>FALSE</span><span
lang=EN-US>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>pDevice-&gt;</span><span lang=EN-US style='color:#880000'>SetRenderState</span><span
lang=EN-US>( </span><span lang=EN-US style='color:#A000A0'>D3DRS_SRCBLEND</span><span
lang=EN-US>, </span><span lang=EN-US style='color:#A000A0'>D3DBLEND_SRCALPHA</span><span
lang=EN-US>);</span></p>

<p class=MsoNormal><span lang=EN-US>pDevice-&gt;</span><span lang=EN-US
style='color:#880000'>SetRenderState</span><span lang=EN-US>( </span><span
lang=EN-US style='color:#A000A0'>D3DRS_DESTBLEND</span><span lang=EN-US>, </span><span
lang=EN-US style='color:#A000A0'>D3DBLEND_INVSRCALPHA</span><span lang=EN-US>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>다음으로<span lang=EN-US> R, G, B</span>를 <span lang=EN-US
style='color:red'>0.5</span>로 설정하고 있습니다<span lang=EN-US>. Blue</span>는<span
lang=EN-US> Distortion </span>처리에서 사용하지 않으므로 어떤 값으로 설정해도 상관이 없습니다<span
lang=EN-US>. </span>이렇게 해서<span lang=EN-US> Distortion </span>맵을 만드는 쉐이더 코드는 끝이
났습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이것을<span lang=EN-US> 3D </span>장면에 적용하고 싶은데 이전의 멈춰 있는 화면과 지금의
상황은 많이 다르다는 것을 눈치 챘을 것입니다<span lang=EN-US>. </span>달라진 부분의 첫 번째는 파티클 입니다<span
lang=EN-US>. </span>이전 파티클은 화면 기준으로 만들어 졌는데 지금 파티클은<span lang=EN-US> 3D </span>공간에서
만들어야 합니다<span lang=EN-US>. </span>여기서는<span lang=EN-US> 3D </span>장면의 파티클 설명은 안
하겠습니다<span lang=EN-US>. </span>일단 파티클이 있다고 가정하고 그것이 이전과 같은 구조로 구성되어 있다면 그냥 같은 방식으로
이용해도 될 것입니다<span lang=EN-US>. </span>추가해야 할 것은 파티클을<span lang=EN-US> 3D </span>장면에
맞게 쉐이더로 다음과 같은 코드로의 수정입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>SvsOut</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US style='color:#880000'>VtxPrcPtc</span><span lang=EN-US
style='color:black'>( </span><span lang=EN-US style='color:blue'>float3</span><span
lang=EN-US style='color:black'> </span><span lang=EN-US style='color:#A000A0'>Pos</span><span
lang=EN-US style='color:black'> : </span><span lang=EN-US style='color:blue'>POSITION</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:blue'>float4</span><span
lang=EN-US style='color:black'> </span><span lang=EN-US style='color:#A000A0'>Dif</span><span
lang=EN-US style='color:black'> : </span><span lang=EN-US style='color:blue'>COLOR0</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:blue'>float2</span><span
lang=EN-US style='color:black'> </span><span lang=EN-US style='color:#A000A0'>Tex</span><span
lang=EN-US style='color:black'> : </span><span lang=EN-US style='color:blue'>TEXCOORD0</span><span
lang=EN-US style='color:black'>)</span></p>

<p class=MsoNormal><span lang=EN-US>{</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>SvsOut</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>Out</span><span lang=EN-US style='color:black'>=(</span><span
lang=EN-US style='color:blue'>SvsOut</span><span lang=EN-US style='color:black'>)</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>&nbsp; </span><span
lang=EN-US>Tpos</span><span lang=EN-US style='color:black'>= </span><span
lang=EN-US style='color:#880000'>mul</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US style='color:#A000A0'>Pos</span><span lang=EN-US style='color:black'>,</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>),
m_mtWld);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:#A000A0'>Dif</span><span lang=EN-US style='color:black'>
= </span><span lang=EN-US style='color:#A000A0'>Dif</span><span lang=EN-US
style='color:black'>; </span><span lang=EN-US>Out</span><span lang=EN-US
style='color:black'>.</span><span lang=EN-US style='color:#A000A0'>Tex</span><span
lang=EN-US style='color:black'> = </span><span lang=EN-US style='color:#A000A0'>Tex</span><span
lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Tpos</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>x</span><span lang=EN-US style='color:black'> *=</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>5f</span><span lang=EN-US style='color:black'>; </span><span
lang=EN-US>Tpos</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>y</span><span lang=EN-US style='color:black'> *=</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>5f</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:#A000A0'>Pos</span><span lang=EN-US style='color:black'>
= </span><span lang=EN-US>Tpos</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>return</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>Out</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal><span lang=EN-US>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>변환이 끝난 후에 마지막에<span lang=EN-US> 1.5</span>씩 곱했습니다<span
lang=EN-US>. </span>이것은 파티클 크기에만 변위가 적용되면 화면에서는 파티클의 크기가 작으므로 우리가 원하는 효과가 잘 안 나타날
수 있어 좀 더 영역을 키운 것입니다<span lang=EN-US>.( </span>변환이 끝나면<span lang=EN-US> [-1, 1]</span>의
범위가 되므로<span lang=EN-US> 1.5</span>란 값은 카메라가 파티클에 가까이 있을 때는 변화가 크게 작용합니다<span
lang=EN-US>.)</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>변위를 만드는 파티클의 픽셀 쉐이더는 변위 텍스처를 샘플링 한 다음에 파티클 색상의 알파 값을 마지막에 곱해서
사용합니다<span lang=EN-US>. </span>이것은 파티클이 사라지면 변위가 나타나지 않게 하기 위해서 입니다<span
lang=EN-US>. </span>또한 이런 코드가 제대로 작동하려면 앞서 알파 블렌딩 설정이<span lang=EN-US> Source</span>에는<span
lang=EN-US> SrcAlpha</span>가<span lang=EN-US> Dest</span>는<span lang=EN-US>
InvSrcAlpha</span>가 설정 되어야 합니다<span lang=EN-US>. (</span>이 부분은 파티클 내부에서 처리하는 것이
좋습니다<span lang=EN-US>.)</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US style='color:#880000'>PxlPrcPtc</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:blue'>SvsOut</span><span
lang=EN-US style='color:black'> </span><span lang=EN-US>In</span><span
lang=EN-US style='color:black'>) : </span><span lang=EN-US style='color:blue'>COLOR0</span></p>

<p class=MsoNormal><span lang=EN-US>{</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'>={</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>,</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>,</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>,</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>};</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>&nbsp;
</span><span lang=EN-US>t1</span><span lang=EN-US style='color:black'>= </span><span
lang=EN-US>In</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:#A000A0'>Dif</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US style='color:
black'>(</span><span lang=EN-US>smp0</span><span lang=EN-US style='color:black'>,
</span><span lang=EN-US>In</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>w</span><span lang=EN-US style='color:black'> *= </span><span
lang=EN-US>t1</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>w</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>return</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>Out</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>파티클은 장면을 만들어야 하는 객체이므로 <span lang=EN-US>CTexDistort </span>클래스에서
가져야 할 이유가 없습니다<span lang=EN-US>. </span>그리고 파티클을 통해서<span lang=EN-US>
Distortion </span>맵이 만들어지는 것이라서 파티클 객체가 선언되어 있는 장소에 <span lang=EN-US>IrenderTarget
</span>객체를 같이 있는 것이 좋습니다<span lang=EN-US>. </span>이런 이유로<span lang=EN-US>
CTexDistort </span>클래스는 필요 없어지고 나무<span lang=EN-US>, </span>지형이 모여 있는<span
lang=EN-US> CMain</span>으로 파티클 객체와<span lang=EN-US> IrenderTarget </span>객체를 옮겨야
됩니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>class</span><span lang=EN-US> </span><span
lang=EN-US style='color:blue'>CMain</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>IrenderTarget</span><span lang=EN-US>* m_pTrndS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// for scene</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>IrenderTarget</span><span lang=EN-US>* m_pTrndD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// for distortion</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>CMcField</span><span lang=EN-US>*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_pField&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:blue'>CMcParticle</span><span
lang=EN-US>*&nbsp;&nbsp; m_pPrt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>두 번째 달라진 부분은 전체 장면을 텍스처에<span lang=EN-US> Distortion </span>맵과
장면 텍스처에 두 번 렌더링이 되도록 작성해야 한다는 것입니다<span lang=EN-US>. CMain::RenderScene() </span>함수는
이렇게<span lang=EN-US> 2</span>부분으로 거칠게 다음과 같이 코딩하고 있습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>void</span><span lang=EN-US> </span><span
lang=EN-US style='color:blue'>CMain</span><span lang=EN-US>::</span><span
lang=EN-US style='color:#880000'>RenderScene</span><span lang=EN-US>(</span><span
lang=EN-US style='color:blue'>BOOL</span><span lang=EN-US> bDistortion)</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>if</span><span lang=EN-US>(</span><span lang=EN-US
style='color:#A000A0'>FALSE</span><span lang=EN-US> == bDistortion)</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_SkyBox-&gt;</span><span
lang=EN-US style='color:#880000'>Render</span><span lang=EN-US>();</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; …</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_pField-&gt;</span><span
lang=EN-US style='color:#880000'>Render</span><span lang=EN-US>();</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; …</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>for</span><span lang=EN-US>(</span><span
lang=EN-US style='color:blue'>int</span><span lang=EN-US> i=</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>; i&lt;m_TreeNum; ++i)</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_pd3dDevice-&gt;</span><span
lang=EN-US style='color:#880000'>SetTransform</span><span lang=EN-US>(</span><span
lang=EN-US style='color:#A000A0'>D3DTS_WORLD</span><span lang=EN-US>,
&amp;m_TreeMat[i]);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_TreeMsh-&gt;</span><span
lang=EN-US style='color:#880000'>Render</span><span lang=EN-US>();</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; …</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_pPrt-&gt;</span><span
lang=EN-US style='color:#880000'>Render</span><span lang=EN-US>(</span><span
lang=EN-US style='color:#A000A0'>TRUE</span><span lang=EN-US>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:blue'>else </span><span lang=EN-US>{</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; …</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mtVP&nbsp;&nbsp;&nbsp; =
mtViw * mtPrj;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; hr
= m_pEft-&gt;</span><span lang=EN-US style='color:#880000'>SetTechnique</span><span
lang=EN-US>(</span><span lang=EN-US style='color:fuchsia'>&quot;Tech&quot;</span><span
lang=EN-US>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; hr
= m_pEft-&gt;</span><span lang=EN-US style='color:#880000'>Begin</span><span
lang=EN-US>(</span><span lang=EN-US style='color:#A000A0'>NULL</span><span
lang=EN-US>, </span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; hr
= m_pEft-&gt;</span><span lang=EN-US style='color:#880000'>Pass</span><span
lang=EN-US>(</span><span lang=EN-US style='color:red'>1</span><span lang=EN-US>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mtWld&nbsp;&nbsp; =
mtViw * mtPrj;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; hr
= m_pEft-&gt;</span><span lang=EN-US style='color:#880000'>SetMatrix</span><span
lang=EN-US>(</span><span lang=EN-US style='color:fuchsia'>&quot;m_mtWld&quot;</span><span
lang=EN-US>, &amp;mtWld);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_pField-&gt;</span><span
lang=EN-US style='color:#880000'>Render</span><span lang=EN-US>();</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; …</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>for</span><span lang=EN-US>(</span><span
lang=EN-US style='color:blue'>int</span><span lang=EN-US> i=</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>; i&lt;m_TreeNum; ++i)</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mtWld
= m_TreeMat[i] * mtVP;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; hr
= m_pEft-&gt;</span><span lang=EN-US style='color:#880000'>SetMatrix</span><span
lang=EN-US>(</span><span lang=EN-US style='color:fuchsia'>&quot;m_mtWld&quot;</span><span
lang=EN-US>, &amp;mtWld);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_TreeMsh-&gt;</span><span
lang=EN-US style='color:#880000'>Render</span><span lang=EN-US>();</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; …</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; hr
= m_pEft-&gt;</span><span lang=EN-US style='color:#880000'>Pass</span><span
lang=EN-US>(</span><span lang=EN-US style='color:red'>2</span><span lang=EN-US>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mtWld&nbsp;&nbsp; =
mtVP;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; hr
= m_pEft-&gt;</span><span lang=EN-US style='color:#880000'>SetMatrix</span><span
lang=EN-US>(</span><span lang=EN-US style='color:fuchsia'>&quot;m_mtWld&quot;</span><span
lang=EN-US>, &amp;mtWld);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_pPrt-&gt;</span><span
lang=EN-US style='color:#880000'>Render</span><span lang=EN-US>(</span><span
lang=EN-US style='color:#A000A0'>FALSE</span><span lang=EN-US>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; hr
= m_pEft-&gt;</span><span lang=EN-US style='color:#880000'>End</span><span
lang=EN-US>();</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>ID3DXEffect</span>에 대한<span lang=EN-US>
Pass </span>도 상당히 많아졌습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>technique</span><span lang=EN-US
style='color:black'> </span><span lang=EN-US>Tech</span></p>

<p class=MsoNormal><span lang=EN-US>{</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>pass</span><span lang=EN-US style='color:black'> </span><span
lang=EN-US>P0</span><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// Distortion Map</span><span style='color:green'>과<span
lang=EN-US> 3D </span>장면 텍스처 합성</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>VertexShader</span><span lang=EN-US
style='color:black'> = </span><span lang=EN-US style='color:blue'>compile</span><span
lang=EN-US style='color:black'> </span><span lang=EN-US style='color:#A000A0'>vs_1_1</span><span
lang=EN-US style='color:black'> VtxPrcDst();</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>PixelShader</span><span lang=EN-US
style='color:black'>&nbsp; = </span><span lang=EN-US style='color:blue'>compile</span><span
lang=EN-US style='color:black'> </span><span lang=EN-US style='color:#A000A0'>ps_2_0</span><span
lang=EN-US style='color:black'> PxlPrcDst();</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>pass</span><span lang=EN-US style='color:black'> </span><span
lang=EN-US>P1</span><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// Distortion Map</span><span style='color:green'>에
대한 오브젝트 렌더링</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>VertexShader</span><span lang=EN-US
style='color:black'> = </span><span lang=EN-US style='color:blue'>compile</span><span
lang=EN-US style='color:black'> </span><span lang=EN-US style='color:#A000A0'>vs_1_1</span><span
lang=EN-US style='color:black'> VtxPrcObj();</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>PixelShader</span><span lang=EN-US
style='color:black'>&nbsp; = </span><span lang=EN-US style='color:blue'>compile</span><span
lang=EN-US style='color:black'> </span><span lang=EN-US style='color:#A000A0'>ps_2_0</span><span
lang=EN-US style='color:black'> PxlPrcObj();</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>pass</span><span lang=EN-US style='color:black'> </span><span
lang=EN-US>P2</span><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// Distortion Map</span><span style='color:green'>에
대한 파티클 렌더링</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>VertexShader</span><span lang=EN-US
style='color:black'> = </span><span lang=EN-US style='color:blue'>compile</span><span
lang=EN-US style='color:black'> </span><span lang=EN-US style='color:#A000A0'>vs_1_1</span><span
lang=EN-US style='color:black'> VtxPrcPtc();</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>PixelShader</span><span lang=EN-US
style='color:black'>&nbsp; = </span><span lang=EN-US style='color:blue'>compile</span><span
lang=EN-US style='color:black'> </span><span lang=EN-US style='color:#A000A0'>ps_2_0</span><span
lang=EN-US style='color:black'> PxlPrcPtc();</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>};</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>같은 파일에 있어<span lang=EN-US> CShaderEx</span>와<span
lang=EN-US> CMain</span>은 같은 <span lang=EN-US style='color:blue'>ID3DXEffect</span><span
lang=EN-US> </span>객체를 사용해도 되나 관리의 편의상 각각 따로 <span lang=EN-US>ID3DXEffect </span>객체를
가지고 있도록 했습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>CShaderEx </span>클래스는<span lang=EN-US>
Distortion Map</span>의 텍스처 포인터를 설정할 수 있도록 <span lang=EN-US>SetDistortionTexture()
</span>함수가 추가되었습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>또한 <span lang=EN-US>CShaderEx::Render() </span>함수에서 쉐이더 설정에서
디바이스의<span lang=EN-US> 1</span>번 샘플러에게<span lang=EN-US> Distortion </span>텍스처를 설정하고
있음을 볼 수 있는데 이것이 가능 하려면 쉐이더 코드에서 샘플러를 레지스터에<span lang=EN-US> &quot;sampler '</span>샘플러
객체 이름<span lang=EN-US>' : register(s1)&quot;</span>처럼 지정해야 합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>…</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>m_pEft</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>SetTechnique</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:fuchsia'>&quot;Tech&quot;</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>….</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>m_pDev</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>SetTexture</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:red'>1</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US>pTex1</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>m_pDev</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>DrawPrimitiveUP</span><span lang=EN-US
style='color:black'>( </span><span lang=EN-US style='color:#A000A0'>D3DPT_TRIANGLEFAN</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:red'>2</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US>m_pVtx</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:blue'>sizeof</span><span
lang=EN-US style='color:black'>(</span><span lang=EN-US style='color:blue'>VtxDUV1</span><span
lang=EN-US style='color:black'>));</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이렇게 쉐이더 코드와 렌더링 코드를 무사히 마쳤다면 다음과 같은 장면과 같이 화염의 앞에 있는 오브젝트에 대해서는
왜곡이 안 발생하고 불꽃 뒤에 있는 오브젝트에 대해서만 왜곡이 만들어지는 것을 볼 수 있습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=273 height=204
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image078.gif"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt; Distortion 3D </span>장면의 화염 효과<span
lang=EN-US>:</span><span lang=EN-US> </span><span lang=EN-US><a
href="https://github.com/3dapi/dv16_shader4/raw/master/h4_04_distort2_a_1.zip">h4_04_distort2_a_1.zip</a>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>ShaderEx.cpp </span>파일의 <span lang=EN-US>#define
MYSHADER_APP 1 </span>설정을 <span lang=EN-US>MYSHADER_APP 0 </span>으로 하면<span
lang=EN-US> Distortion </span>맵이 화면 사이즈보다 축소시켜서 렌더링 하고 있는 것을 볼 수 있습니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>4.4.2 </span><span
style='font-size:12.0pt'>굴절 효과<span lang=EN-US>(Refraction Effect)</span></span></p>

<p class=MsoNormal>보통 반사나 굴절을<span lang=EN-US> 3D</span>에서 표현하려면 환경 맵<span
lang=EN-US>(Environment Map), </span>또는 입방체 맵<span lang=EN-US>(Cube Map)</span>을
만들어야 합니다<span lang=EN-US>. </span>하지만 앞의 화염 효과를 잘 생각해보면 파티클 대신 어떤 오브젝트에 의해 변위를 만들
수 있지 않을 까요<span lang=EN-US>?</span></p>

<p class=MsoNormal>그러면 오브젝트의 무엇으로 변위를 만들 수 있을 까요<span lang=EN-US>?</span></p>

<p class=MsoNormal>이것도 생각해보면 굴절이라는 것은 투명한 물체의 두께에 의해 발생하는 문제입니다<span
lang=EN-US>. </span>그런데 속이 비어있는<span lang=EN-US> 3D </span>렌더링 오브젝트의 두께를 카메라의 시선
방향으로 구하고 굴절을 적용한다는 것은 쉬운 일은 아닙니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>우리가 만드는 프로그램은 실 세계의 흉내내기 입니다<span lang=EN-US>. </span>따라서 적당한
방법을 찾아야 하는데 간단한 방법은 오브젝트의 법선 만큼 픽셀을 이동시키는 것입니다<span lang=EN-US>. </span>이것을 마무리된
코드의 장면을 가지고 그림으로 표현하면 다음과 같습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=612 height=233
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image079.gif"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt; Distortion: 3D </span>장면의 굴절<span
lang=EN-US>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>앞의 화염 효과 코드에서<span lang=EN-US> 2 </span>번의 과정과 이에 관련된 쉐이더 코드를
수정하는 일만 남아있습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>먼저 쉐이더 코드입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>법선은 픽셀 처리과정에서 사용해야 하므로 쉐이더의 정점 구조체를 다음과 같이 수정해야 합니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>struct</span><span lang=EN-US> SvsOut</span></p>

<p class=MsoNormal><span lang=EN-US>{</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; float4
Pos : POSITION;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; float4
Dif : COLOR0;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; float2
  Tex : TEXCOORD0;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float3</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US style='color:#A000A0'>Nor</span><span lang=EN-US
style='color:black'> : </span><span lang=EN-US style='color:blue'>TEXCOORD7</span><span
lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>};</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>카메라의 움직임에 의해서 굴절에 대한 오브젝트의 법선은 뷰 변환까지 진행이 되야 합니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal>이를 외부에서 연결할 수 있도록 월드 행렬<span lang=EN-US> * </span>뷰 행렬 에 대한 변수를
추가합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>float4x4</span><span lang=EN-US style='color:
black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US>m_mtWVP</span><span
lang=EN-US style='color:black'>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// World * View * Projection</span></p>

<p class=MsoNormal><span lang=EN-US style='color:blue'>float4x4</span><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_mtWV</span><span lang=EN-US style='color:black'> ;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// World * View</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>굴절 역할을 하는 오브젝트는 법선 벡터를 입력 레지스터에서 받을 수 있도록<span lang=EN-US>
float3 Nor:NORMAL0</span>를 추가하고 법선이 카메라의 회전에만 적용되도록<span lang=EN-US> float3x3</span>으로
<span lang=EN-US>&quot;</span>월드 <span lang=EN-US>* </span>뷰 행렬<span
lang=EN-US>&quot;</span>을 캐스팅해서 변환합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>SvsOut</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US style='color:#880000'>VtxPrcRfc</span><span lang=EN-US
style='color:black'>( </span><span lang=EN-US style='color:blue'>float3</span><span
lang=EN-US style='color:black'> </span><span lang=EN-US style='color:#A000A0'>Pos</span><span
lang=EN-US style='color:black'> : </span><span lang=EN-US style='color:blue'>POSITION</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ,
</span><span lang=EN-US style='color:blue'>float4</span><span lang=EN-US
style='color:black'> </span><span lang=EN-US style='color:#A000A0'>Dif</span><span
lang=EN-US style='color:black'> : </span><span lang=EN-US style='color:blue'>COLOR0</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ,
</span><span lang=EN-US style='color:blue'>float3</span><span lang=EN-US
style='color:black'> </span><span lang=EN-US style='color:#A000A0'>Nor</span><span
lang=EN-US style='color:black'> : </span><span lang=EN-US style='color:blue'>NORMAL0</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ,
</span><span lang=EN-US style='color:blue'>float2</span><span lang=EN-US
style='color:black'> </span><span lang=EN-US style='color:#A000A0'>Tex</span><span
lang=EN-US style='color:black'> : </span><span lang=EN-US style='color:blue'>TEXCOORD0</span><span
lang=EN-US style='color:black'>)</span></p>

<p class=MsoNormal><span lang=EN-US>{</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>SvsOut</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>Out</span><span lang=EN-US style='color:black'>=(</span><span
lang=EN-US style='color:blue'>SvsOut</span><span lang=EN-US style='color:black'>)</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float3</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>N</span><span lang=EN-US style='color:black'>= </span><span
lang=EN-US style='color:#880000'>normalize</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:#880000'>mul</span><span
lang=EN-US style='color:black'>(</span><span lang=EN-US>Nor</span><span
lang=EN-US style='color:black'>, (</span><span lang=EN-US style='color:blue'>float3x3</span><span
lang=EN-US style='color:black'>)</span><span lang=EN-US>m_mtWV</span><span
lang=EN-US style='color:black'>));</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:#A000A0'>Pos</span><span lang=EN-US style='color:black'>
= </span><span lang=EN-US style='color:#880000'>mul</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:blue'>float4</span><span
lang=EN-US style='color:black'>(</span><span lang=EN-US style='color:#A000A0'>Pos</span><span
lang=EN-US style='color:black'>,</span><span lang=EN-US style='color:red'>1</span><span
lang=EN-US style='color:black'>), </span><span lang=EN-US>m_mtWVP</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=PT-BR>Out</span><span lang=PT-BR style='color:black'>.</span><span
lang=PT-BR style='color:#A000A0'>Tex</span><span lang=PT-BR style='color:black'>
= </span><span lang=PT-BR style='color:#A000A0'>Tex</span><span lang=PT-BR
style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=PT-BR style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=PT-BR>Out</span><span lang=PT-BR style='color:black'>.</span><span
lang=PT-BR>Nor</span><span lang=PT-BR style='color:black'> = </span><span
lang=PT-BR>N</span><span lang=PT-BR style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=PT-BR style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>return</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>Out</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal><span lang=EN-US>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>픽셀 처리과정의 굴절 오브젝트는 텍스처에서 알파 값을<span lang=EN-US>, </span>정점 처리
과정에서 구한 법선벡터를 색상으로 저장합니다<span lang=EN-US>. </span>그런데 색상은<span lang=EN-US> [0,
1] </span>범위이고 법선은<span lang=EN-US> [-1, 1] </span>범위 이므로 법선에<span lang=EN-US>
1</span>을 더하고<span lang=EN-US> 0.5</span>를 곱해서 저장을 합니다<span lang=EN-US>. </span>출력
색상의<span lang=EN-US> Blue</span>값은 확인용으로 쓰기 위해서 임의 값을 부여했습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US style='color:#880000'>PxlPrcRfc</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:blue'>SvsOut</span><span
lang=EN-US style='color:black'> </span><span lang=EN-US>In</span><span
lang=EN-US style='color:black'>) : </span><span lang=EN-US style='color:blue'>COLOR0</span></p>

<p class=MsoNormal><span lang=EN-US>{</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'>={</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>,</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>,</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>,</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>};</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float3</span><span lang=EN-US style='color:black'>&nbsp; </span><span
lang=EN-US>Nor</span><span lang=EN-US style='color:black'>= </span><span
lang=EN-US style='color:#880000'>normalize</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US>In</span><span lang=EN-US
style='color:black'>.</span><span lang=EN-US>Nor</span><span lang=EN-US
style='color:black'>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US style='color:
black'>(</span><span lang=EN-US>smp0</span><span lang=EN-US style='color:black'>,
</span><span lang=EN-US>In</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>r</span><span lang=EN-US style='color:black'>=(</span><span
lang=EN-US>Nor</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>x</span><span lang=EN-US style='color:black'>+</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>)*</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>5</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>g</span><span lang=EN-US style='color:black'>=(</span><span
lang=EN-US>Nor</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>y</span><span lang=EN-US style='color:black'>+</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>)*</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>5</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>b</span><span lang=EN-US style='color:black'>=</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>5f</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>return</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>Out</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>}</span></p>

<p class=MsoNormal>이렇게 색상으로 법선 벡터를 변경해서 저장했습니다<span lang=EN-US>. Distortion</span>을
처리하는 쉐이더 함수에서는 이것을 다시 환원하기 위해 굴절 정보를 저장한 텍스처<span lang=EN-US>(smp1)</span>에서 색상을<span
lang=EN-US> 2</span>를 곱한 다음<span lang=EN-US> 1</span>을 뺍니다<span lang=EN-US>. </span>이
값을 적당한 굴절 계수를 곱한 후에 다시 전체 장면<span lang=EN-US>(smp0)</span>의 픽셀을 샘플링 합니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>static</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US style='color:blue'>float</span><span lang=EN-US
style='color:black'>&nbsp;&nbsp; </span><span lang=EN-US>g_Dsp</span><span
lang=EN-US style='color:black'> = </span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US style='color:black'>.</span><span lang=EN-US style='color:red'>3</span><span
lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US style='color:#880000'>PxlPrcDst</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:blue'>SvsOut</span><span
lang=EN-US style='color:black'> </span><span lang=EN-US>In</span><span
lang=EN-US style='color:black'>) : </span><span lang=EN-US style='color:blue'>COLOR0</span></p>

<p class=MsoNormal><span lang=EN-US>{</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>Out</span><span lang=EN-US style='color:black'>=</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>&nbsp; </span><span
lang=EN-US>Pert</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US style='color:
black'>(smp1, </span><span lang=EN-US>In</span><span lang=EN-US
style='color:black'>.</span><span lang=EN-US style='color:#A000A0'>Tex</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float</span><span lang=EN-US style='color:black'>&nbsp;&nbsp; </span><span
lang=EN-US>x</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>Pert</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>x</span><span lang=EN-US style='color:black'> * </span><span
lang=EN-US style='color:red'>2</span><span lang=EN-US style='color:black'> -</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float</span><span lang=EN-US style='color:black'>&nbsp;&nbsp; </span><span
lang=EN-US>y</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>Pert</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>y</span><span lang=EN-US style='color:black'> * </span><span
lang=EN-US style='color:red'>2</span><span lang=EN-US style='color:black'> -</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>x</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>In</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>x</span><span lang=EN-US style='color:black'> + (</span><span
lang=EN-US>x</span><span lang=EN-US style='color:black'>) * </span><span
lang=EN-US>g_Dsp</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>y</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>In</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>y</span><span lang=EN-US style='color:black'> + (</span><span
lang=EN-US>y</span><span lang=EN-US style='color:black'>) * </span><span
lang=EN-US>g_Dsp</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US style='color:
black'>(</span><span lang=EN-US>smp0</span><span lang=EN-US style='color:black'>,
</span><span lang=EN-US style='color:blue'>float2</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US>x</span><span lang=EN-US
style='color:black'>,</span><span lang=EN-US>y</span><span lang=EN-US
style='color:black'>));</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'> *= </span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>5f</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>return</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>Out</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>앞의 <span lang=EN-US>VtxPrcRfc(), PxlPrcRfc() </span>두 함수는 물론<span
lang=EN-US> Technique </span>에 추가해야 합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>technique</span><span lang=EN-US
style='color:black'> Tech</span></p>

<p class=MsoNormal><span lang=EN-US>{</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>pass</span><span lang=EN-US style='color:black'>
P3</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>VertexShader</span><span lang=EN-US
style='color:black'> = </span><span lang=EN-US style='color:blue'>compile</span><span
lang=EN-US style='color:black'> </span><span lang=EN-US style='color:#A000A0'>vs_1_1</span><span
lang=EN-US style='color:black'> </span><span lang=EN-US style='color:#880000'>VtxPrcRfc</span><span
lang=EN-US style='color:black'>();</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>PixelShader</span><span lang=EN-US
style='color:black'>&nbsp; = </span><span lang=EN-US style='color:blue'>compile</span><span
lang=EN-US style='color:black'> </span><span lang=EN-US style='color:#A000A0'>ps_2_0</span><span
lang=EN-US style='color:black'> </span><span lang=EN-US style='color:#880000'>PxlPrcRfc</span><span
lang=EN-US style='color:black'>();</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>};</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이제<span lang=EN-US> CMain::FrameMove()</span>함수를 수정할 차례입니다<span
lang=EN-US>. CMain </span>클래스에 굴절 효과를 표현할 오브젝트를 추가합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:blue'>ID3DXMesh</span><span
lang=EN-US style='color:black'>*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_pCrystal1</span><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp; ;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이 객체를 <span lang=EN-US>D3DXCreateCylinder()</span>함수로 생성합니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:#880000'>D3DXCreateCylinder</span><span
lang=EN-US style='color:black'>(</span><span lang=EN-US>m_pd3dDevice</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:red'>70</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:red'>70</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:red'>200</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:red'>100</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:red'>100</span><span
lang=EN-US style='color:black'>, &amp;</span><span lang=EN-US>m_pCrystal1</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:#A000A0'>NULL</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>CMain::RenderScene() </span>함수에서 이전 파티클에 해당하는
부분을 지우고 굴절 오브젝트를 넣습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:#880000'>D3DXMatrixScaling</span><span lang=EN-US
style='color:black'>(&amp;</span><span lang=EN-US>mtScl</span><span lang=EN-US
style='color:black'>, </span><span lang=EN-US style='color:red'>1</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:red'>1</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:red'>1</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:#880000'>D3DXMatrixRotationX</span><span lang=EN-US
style='color:black'>(&amp;</span><span lang=EN-US>mtRot</span><span lang=EN-US
style='color:black'>, </span><span lang=EN-US style='color:#A000A0'>D3DXToRadian</span><span
lang=EN-US style='color:black'>( </span><span lang=EN-US style='color:red'>90</span><span
lang=EN-US style='color:black'> ));</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:#880000'>D3DXMatrixTranslation</span><span lang=EN-US
style='color:black'>(&amp;</span><span lang=EN-US>mtTrn</span><span lang=EN-US
style='color:black'>, </span><span lang=EN-US style='color:red'>300</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:red'>40</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:red'>250</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>mtWld</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>mtScl</span><span lang=EN-US style='color:black'> * </span><span
lang=EN-US>mtRot</span><span lang=EN-US style='color:black'> * </span><span
lang=EN-US>mtTrn</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>mtWV</span><span lang=EN-US style='color:black'>&nbsp; = </span><span
lang=EN-US>mtWld</span><span lang=EN-US style='color:black'> * </span><span
lang=EN-US>mtViw</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>mtWVP</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>mtWV</span><span lang=EN-US style='color:black'> * </span><span
lang=EN-US>mtPrj</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>hr</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>m_pEft</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>Pass</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US style='color:red'>3</span><span lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>hr</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>m_pEft</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>SetMatrix</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:fuchsia'>&quot;m_mtWVP&quot;</span><span
lang=EN-US style='color:black'>, &amp;</span><span lang=EN-US>mtWVP</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>hr</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>m_pEft</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>SetMatrix</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:fuchsia'>&quot;m_mtWV&quot;</span><span
lang=EN-US style='color:black'>, &amp;</span><span lang=EN-US>mtWV</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal><span lang=EN-US>m_pCrystal1</span><span lang=EN-US
style='color:black'>-&gt;</span><span lang=EN-US style='color:#880000'>DrawSubset</span><span
lang=EN-US style='color:black'>(</span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>CShaderEx::Render() </span>함수에서 전에 사용한<span
lang=EN-US> HeatHaze</span>변수는 사용을 안 해 지워버립니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>나머지 코드를 정리하고 실행하면 다음과 같은 화면을 얻을 수 있습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=272 height=204
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image080.gif">&nbsp;<img border=0 width=272
height=204 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image081.gif"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;</span>굴절 효과<span lang=EN-US>: <a
href="https://github.com/3dapi/dv16_shader4/raw/master/h4_04_distort3_refr.zip">h4_04_distort3_refr.zip</a>. g_Dsp = -0.3, g_Dsp
= 0.3&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>그런데 이 예제는 문제가 있습니다<span lang=EN-US>. </span>다음 그림과 같이 카메라가 오브젝트에
가까이 가면 옆으로 픽셀이 늘어납니다<span lang=EN-US>. </span>이것은 변위를 적용한<span lang=EN-US> U, V</span>가<span
lang=EN-US> [0, 1] </span>범위를 벗어나기 때문입니다<span lang=EN-US>. </span>또한 오브젝트 안쪽으로 들어가면
굴절 효과가 거의 없어집니다<span lang=EN-US>. </span>이런 경우만 제외한다면 완전한 굴절 모양은 아니지만 적당히 사용할 만
합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=272 height=204
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image082.gif"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;</span>굴절 효과 문제<span lang=EN-US>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:14.0pt'>4.5 </span><span
style='font-size:14.0pt'>흐림 효과</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>4.5.1 </span><span
style='font-size:12.0pt'>흐림 효과<span lang=EN-US>(Blur Effect) </span>개요</span></p>

<p class=MsoNormal>흐림 효과는 <span lang=EN-US>broadening</span>의 일종으로 주변의 픽셀과 혼합하는
방법입니다<span lang=EN-US>. Bloom, Glare </span>효과 모두 </p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0 align=left
 style='border-collapse:collapse;margin-left:4.85pt;margin-right:4.85pt'>
 <tr style='height:188.9pt'>
  <td width=211 style='width:158.4pt;padding:0cm 5.4pt 0cm 5.4pt;height:188.9pt'>
  <p class=MsoNormal><span lang=EN-US><img border=0 width=204 height=204
  src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image083.gif"></span></p>
  <p class=MsoNormal><span lang=EN-US>&lt;3x3 </span>박스 필터<span lang=EN-US>(g: </span>가중치<span
  lang=EN-US>)&gt;</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal>흐림 효과를 기본으로 만든 이펙트입니다<span lang=EN-US>. </span>흐림 효과는 수학으로 표현하면
적분이 됩니다<span lang=EN-US>. </span>참고로 수학의 미분 개념을 이용한 효과는 외곽선 추출<span lang=EN-US>,
Sharpness</span>가 됩니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>그런데 얼마만큼의 주변 픽셀과 어떤 방법으로 섞는가<span lang=EN-US>? </span>즉<span
lang=EN-US>, </span>혼합에 대한 방법이 많이 있는데 가장 간단한 방법은 옆의 그림처럼 자신과 바로 인접해 있는<span
lang=EN-US> 9</span>개의 픽셀에 대한 가중치<span lang=EN-US>(Gravitation)</span>를 전부<span
lang=EN-US> 1</span>로 놓고 이 픽셀들의 색상에 대한 평균 값을 최종 색상으로 정하는 방법입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>이 방법은 가장 간단해서 사용된 방법이지만 더 근본적으로 픽셀 쉐이더<span lang=EN-US> 2.0 </span>미만에서
한 번에 샘플링 할 수 있는 텍스처의 수가 많아야<span lang=EN-US> 6</span>개 정도이고 이것도 픽셀 쉐이더 버전<span
lang=EN-US> 1.4</span>를 지원하는<span lang=EN-US> ATI </span>제품일 때만 가능한 것입니다<span
lang=EN-US>. </span>더 하위버전인<span lang=EN-US> 1.3 </span>까지는 최대<span lang=EN-US>
4</span>개만 샘플링이 가능합니다<span lang=EN-US>. </span>따라서 낮은 버전에 맞추어 흐림 필터를 위와 같은 방식으로
만들었던 것입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>그런데 요즘은 대부분의 그래픽 카드가 픽셀 쉐이더<span lang=EN-US> 2.0</span>이상을 지원합니다<span
lang=EN-US>. 2.0</span>의 경우<span lang=EN-US> 16</span>개의 픽셀을 동시에 샘플링 할 수 있으며 이것은
하나의 텍스처에서도<span lang=EN-US> 16</span>번의 샘플링이 가능하다는 것입니다<span lang=EN-US>. </span>이렇게
한 번에 한 텍스처에<span lang=EN-US> 16</span>번의 픽셀을 가져와 사용할 수 있는데 앞서 가중치를 동일하게 주고 평균을 내는
것은 개선이 되어야 합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>즉<span lang=EN-US>, </span>가운데 있는 픽셀로부터 멀리 떨어질수록 거리에 따라 가중치를
다르게 설정해야 합니다<span lang=EN-US>. </span>이때 가우스 분포 함수<span lang=EN-US>(Gaussian
Distribution Function)</span>를 사용합니다<span lang=EN-US>.</span></p>

<table class=MsoTableGrid border=0 cellspacing=0 cellpadding=0 align=left
 style='border-collapse:collapse;margin-left:4.85pt;margin-right:4.85pt'>
 <tr style='height:206.95pt'>
  <td width=331 style='width:248.4pt;padding:0cm 5.4pt 0cm 5.4pt;height:206.95pt'>
  <p class=MsoNormal><span lang=EN-US><img border=0 width=301 height=218
  src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image084.gif"></span></p>
  <p class=MsoNormal><span lang=EN-US>&lt;2</span>차원 가우스 분포함수<span lang=EN-US>&gt;</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span>이 함수를 사용하는 이유는 자연계에서 시간에 따라 확률이
변화하지 않는 경우에 대해서 그 확률에 맞게 어떤 일이 발생하는 일들을 그래프로 표현해 보면 이 가우스 분포 곡선과 일치하게 됩니다<span
lang=EN-US>. </span>예를 들어 동전<span lang=EN-US> 100</span>개를 가지고 동시에 던졌을 때 앞면이<span
lang=EN-US> 100</span>개<span lang=EN-US>, 99</span>개<span lang=EN-US>, 98</span>개<span
lang=EN-US>, …, 0</span>개가 나오는 빈도를 그래프로 찍어보면 이 가우스 분포 함수와 거의 일치합니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal>가우스 함수는 일반 적으로<span lang=EN-US> Random </span>한 데이터에서 나타나는 특성으로<span
lang=EN-US>, </span>통계뿐만 아니라 물리<span lang=EN-US>, </span>화학<span lang=EN-US>, </span>사회과학
등에서 사건에 대한 해석을 하는 용도로 두루 사용이 되는 함수입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>따라서 컴퓨터 그래픽스에서도 이웃한 픽셀과 혼합할 때 그 가중치를 가우스 분포 함수의 값을 이용합니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=408 height=233
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image085.gif"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;3</span>차원 가우스 분포 함수<span lang=EN-US>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>가중치<span lang=EN-US>(Weight) = </span>가우스 분포함수<span
lang=EN-US> = <sub><img border=0 width=137 height=51
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image086.gif"></sub></span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><sub><img border=0 width=16 height=24
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image087.gif"></sub>&nbsp;: Intensity(</span>상수<span
lang=EN-US>),&nbsp; <sub><img border=0 width=24 height=17
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image088.gif"></sub>: </span>중심 픽셀과<span lang=EN-US>
x </span>방향으로의 거리<span lang=EN-US>, <sub><img border=0 width=23 height=21
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image089.gif"></sub>: </span>중심 픽셀과<span lang=EN-US>
x </span>방향으로의 거리<span lang=EN-US>, <sub><img border=0 width=19 height=20
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image090.gif"></sub>: </span>분산 값</p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>만약 중심 픽셀의 가중치를<span lang=EN-US> 1</span>로 놓게 되면 Δ<span
lang=EN-US>x=0, </span>Δ<span lang=EN-US>y =0 </span>이 되어<span lang=EN-US>&nbsp;
<sub><img border=0 width=16 height=24 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image087.gif"></sub>=1
</span>이 되어야 합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>게임프로그래밍에서는 대부분 <span lang=EN-US><sub><img border=0 width=39
height=24 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image091.gif"></sub></span>로 설정하고 <span
lang=EN-US><sub><img border=0 width=19 height=20
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image090.gif"></sub>&nbsp;</span>만 조절할 수 있도록 다음과 같이 간략하게
만들어 사용합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>가중치<span lang=EN-US> = <sub><img border=0 width=147
height=24 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image092.gif"></sub></span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>쉐이더 프로그램은 픽셀 샘플링의 제한이 있어 이렇게<span lang=EN-US> X, Y </span>방향으로
동시에 처리하지 않고 한 방향씩 처리합니다<span lang=EN-US>. </span>따라서 가중치 계산은<span lang=EN-US> 1</span>차원에서만
계산이 되며 다음은 가장 많이 사용이 되는 형태 입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>가중치<span lang=EN-US>(W) = <sub><img border=0 width=81
height=24 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image093.gif"></sub></span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이 함수에 익숙해지기 위해 예를 들어 봅시다<span lang=EN-US>. </span>만약 <span
lang=EN-US><sub><img border=0 width=15 height=17
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image094.gif"></sub>=-0.08 </span>일 때 거리에 따라 가중치를 구하면
다음과 같습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><sub><img border=0 width=21 height=17
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image095.gif"></sub>=0: 0<sup>2</sup> = 0.&nbsp; </span>가중치<span
lang=EN-US> = exp( 0* (-0.08)) = 1</span></p>

<p class=MsoNormal><span lang=EN-US><sub><img border=0 width=21 height=17
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image095.gif"></sub>=1: 1<sup>2</sup> = 1.&nbsp; </span>가중치<span
lang=EN-US> = exp( 1* (-0.08)) = 0.9231</span></p>

<p class=MsoNormal><span lang=EN-US><sub><img border=0 width=21 height=17
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image095.gif"></sub>=2: 2<sup>2</sup> = 4.&nbsp; </span>가중치<span
lang=EN-US> = exp( 4* (-0.08)) = 0.7261</span></p>

<p class=MsoNormal><span lang=EN-US><sub><img border=0 width=21 height=17
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image095.gif"></sub>=3: 3<sup>2</sup> = 9.&nbsp; </span>가중치<span
lang=EN-US> = exp( 9* (-0.08)) = 0.4868</span></p>

<p class=MsoNormal><span lang=EN-US><sub><img border=0 width=21 height=17
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image095.gif"></sub>=4: 4<sup>2</sup> = 16. </span>가중치<span
lang=EN-US> = exp(16* (-0.08)) = 0.2780</span></p>

<p class=MsoNormal><span lang=EN-US><sub><img border=0 width=21 height=17
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image095.gif"></sub>=5: 5<sup>2</sup> = 25. </span>가중치<span
lang=EN-US> = exp(25* (-0.08)) = 0.1353</span></p>

<p class=MsoNormal><span lang=EN-US><sub><img border=0 width=21 height=17
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image095.gif"></sub>=6: 6<sup>2</sup> = 36. </span>가중치<span
lang=EN-US> = exp(36* (-0.08)) = 0.0561</span></p>

<p class=MsoNormal><span lang=EN-US><sub><img border=0 width=21 height=17
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image095.gif"></sub>=7: 7<sup>2</sup> = 49. </span>가중치<span
lang=EN-US> = exp(49* (-0.08)) = 0.0198</span></p>

<p class=MsoNormal>가중치의 합<span lang=EN-US> = 6.2108</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>가중치의 합은 범위가<span lang=EN-US> -7, -6, -5, …, 5, 6, 7 </span>에
해당하는 가중치에 대한 총합 입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>가중치를 구했으면 최종 색상은 다음과 같이 결정이 됩니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>최종 색상<span lang=EN-US> = <sub><img border=0 width=183
height=45 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image096.gif"></sub></span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이것을 쉐이더에 대한 의사<span lang=EN-US>(</span><span lang=EN-US>Pseudo-do)
</span>코드로 작성하면 다음과 같습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>Weight[N] </span><span lang=EN-US
style='font-family:Wingdings'>ß</span><span lang=EN-US> {&quot;</span>사용자 지정<span
lang=EN-US>&quot; }, Total</span></p>

<p class=MsoNormal><span lang=EN-US>&quot;</span>최종 색상<span lang=EN-US>&quot; </span><span
lang=EN-US style='font-family:Wingdings'>ß</span><span lang=EN-US> 0</span></p>

<p class=MsoNormal><span lang=EN-US>for(i</span><span lang=EN-US
style='font-family:Wingdings'>ß</span><span lang=EN-US>0; i&lt;N; i</span><span
lang=EN-US style='font-family:Wingdings'>ß</span><span lang=EN-US>i+1)</span></p>

<p class=MsoNormal><span lang=EN-US>{</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;</span>새로운<span
lang=EN-US> UV&quot; </span><span lang=EN-US style='font-family:Wingdings'>ß</span><span
lang=EN-US> &quot;</span>중심 픽셀<span lang=EN-US> UV&quot; + float2( i * &quot;</span>픽셀
가로 폭<span lang=EN-US>&quot;, 0)</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;</span>최종
색상<span lang=EN-US>&quot; </span><span lang=EN-US style='font-family:Wingdings'>ß</span><span
lang=EN-US> &quot;</span>최종 색상<span lang=EN-US>&quot; + Weight[i] * tex2D(sampler0,
&quot;</span>새로운<span lang=EN-US> UV&quot;);</span></p>

<p class=MsoNormal><span lang=EN-US>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&quot;</span>최종 색상<span lang=EN-US>&quot; </span><span
lang=EN-US style='font-family:Wingdings'>ß</span><span lang=EN-US> &quot;</span>최종
색상<span lang=EN-US>&quot;/Total;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>여기서 텍스처 좌표는<span lang=EN-US> [0, 1] </span>이므로 픽셀의 가로 폭<span
lang=EN-US> = 1/&quot;</span>텍스처의 가로 폭<span lang=EN-US>&quot; </span>이 됩니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이것을 <span lang=EN-US><a href="https://github.com/3dapi/dv16_shader4/raw/master/h4_05_blur2_1.zip">h4_05_blur2_1.zip</a>
</span>의<span lang=EN-US> &quot;data/hlsl.fx&quot; </span>파일에 픽셀을 처리하는 함수에 다음과 같이
구현되어 있습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>float</span><span lang=EN-US style='color:black'>&nbsp;&nbsp; </span><span
lang=EN-US>m_TexW</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:red'>800</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:blue'>float</span><span
lang=EN-US style='color:black'>&nbsp;&nbsp; </span><span lang=EN-US>m_TexH</span><span
lang=EN-US style='color:black'> = </span><span lang=EN-US style='color:red'>600</span><span
lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>static</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US style='color:blue'>const</span><span lang=EN-US
style='color:black'> </span><span lang=EN-US style='color:blue'>float</span><span
lang=EN-US style='color:black'> </span><span lang=EN-US>Weight</span><span
lang=EN-US style='color:black'>[</span><span lang=EN-US style='color:red'>13</span><span
lang=EN-US style='color:black'>]=</span></p>

<p class=MsoNormal><span lang=EN-US>{</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp; </span><span lang=EN-US
style='color:red'>0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>0561</span><span lang=EN-US style='color:black'>, </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>1353</span><span lang=EN-US style='color:black'>, </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>278</span><span lang=EN-US style='color:black'>, </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>4868</span><span lang=EN-US style='color:black'>, </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>7261</span><span lang=EN-US style='color:black'>, </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>9231</span><span lang=EN-US style='color:black'>,</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>, </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>9231</span><span lang=EN-US style='color:black'>, </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>7261</span><span lang=EN-US style='color:black'>, </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>4868</span><span lang=EN-US style='color:black'>, </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>278</span><span lang=EN-US style='color:black'>, </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>1353</span><span lang=EN-US style='color:black'>, </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>0561</span><span lang=EN-US style='color:black'>};</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>static</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US style='color:blue'>const</span><span lang=EN-US
style='color:black'> </span><span lang=EN-US style='color:blue'>float</span><span
lang=EN-US style='color:black'> </span><span lang=EN-US>Total</span><span
lang=EN-US style='color:black'> = </span><span lang=EN-US style='color:red'>6</span><span
lang=EN-US style='color:black'>.</span><span lang=EN-US style='color:red'>2108</span><span
lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US style='color:#880000'>PxlBlurX</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:blue'>SvsOut</span><span
lang=EN-US style='color:black'> </span><span lang=EN-US>In</span><span
lang=EN-US style='color:black'>) : </span><span lang=EN-US style='color:blue'>COLOR0</span></p>

<p class=MsoNormal><span lang=EN-US>{</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'>=</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float2</span><span lang=EN-US style='color:black'>&nbsp; </span><span
lang=EN-US>t</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>In</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float2</span><span lang=EN-US style='color:black'>&nbsp; </span><span
lang=EN-US>uv</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float</span><span lang=EN-US style='color:black'>&nbsp;&nbsp; </span><span
lang=EN-US>tu</span><span lang=EN-US style='color:black'>= </span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>./m_TexW;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>for</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US style='color:blue'>int</span><span lang=EN-US style='color:black'> </span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>=-</span><span
lang=EN-US style='color:red'>6</span><span lang=EN-US style='color:black'>; </span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>&lt;</span><span
lang=EN-US style='color:red'>6</span><span lang=EN-US style='color:black'>; ++</span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>)</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>uv</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>t</span><span lang=EN-US style='color:black'>+ </span><span
lang=EN-US style='color:blue'>float2</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US>tu</span><span lang=EN-US style='color:black'> *</span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>, </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'> += </span><span
lang=EN-US>Weight</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>6</span><span lang=EN-US style='color:black'>+</span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>] * </span><span
lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US style='color:
black'>(</span><span lang=EN-US>smp0</span><span lang=EN-US style='color:black'>,
</span><span lang=EN-US>uv</span><span lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'> /=</span><span
lang=EN-US>Total</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>return</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>Out</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><a href="https://github.com/3dapi/dv16_shader4/raw/master/h4_05_blur2_1.zip">h4_05_blur2_1.zip</a></span>을
실행하면 다음 그림과 같이 오른쪽 화면에 흐림 효과를 적용한 것이 보일 것입니다<span lang=EN-US>. </span>흐림 효과를 저장하기
위해서<span lang=EN-US> CShaderEx </span>클래스는 <span lang=EN-US>IrenderTarget </span>객체를
하나 가지고 있습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=302 height=227
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image097.gif"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;X </span>방향 흐림 효과<span lang=EN-US>: </span><span
lang=EN-US><a href="https://github.com/3dapi/dv16_shader4/raw/master/h4_05_blur2_1.zip">h4_05_blur2_1.zip</a></span><span
lang=EN-US>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>X </span>방향 흐림 효과는 이전의 박스 흐림 필터와 눈에 띄게 큰 차이를
보이지 않습니다<span lang=EN-US>. </span>이 것을 한번 더<span lang=EN-US> Y </span>방향으로 흐리게 처리해
봅시다<span lang=EN-US>. </span>쉐이더 코드는<span lang=EN-US> X </span>방향으로 처리할 때와 거의 같으며
단지 텍스처의 높이와<span lang=EN-US> Y </span>축으로 샘플링 되도록<span lang=EN-US> u, v</span>를
수정하는 것뿐입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US style='color:#880000'>PxlBlurY</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:blue'>SvsOut</span><span
lang=EN-US style='color:black'> </span><span lang=EN-US>In</span><span
lang=EN-US style='color:black'>) : </span><span lang=EN-US style='color:blue'>COLOR0</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float</span><span lang=EN-US style='color:black'>&nbsp;&nbsp; </span><span
lang=EN-US>tv</span><span lang=EN-US style='color:black'>= </span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>./</span><span
lang=EN-US>m_TexH</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>for</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US style='color:blue'>int</span><span lang=EN-US style='color:black'> </span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>=-</span><span
lang=EN-US style='color:red'>6</span><span lang=EN-US style='color:black'>; </span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>&lt;</span><span
lang=EN-US style='color:red'>6</span><span lang=EN-US style='color:black'>; ++</span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>)</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>uv</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>t</span><span lang=EN-US style='color:black'>+ </span><span
lang=EN-US style='color:blue'>float2</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>, </span><span
lang=EN-US>tv</span><span lang=EN-US style='color:black'> *</span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'> += </span><span
lang=EN-US>Weight</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>6</span><span lang=EN-US style='color:black'>+</span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>] * </span><span
lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US style='color:
black'>(</span><span lang=EN-US>smp0</span><span lang=EN-US style='color:black'>,
</span><span lang=EN-US>uv</span><span lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이 함수 또한<span lang=EN-US> Techinque</span>에 추가 해야 합니다<span
lang=EN-US>. </span>다음으로<span lang=EN-US> Y </span>방향으로 처리한 결과를 저장하기 위해서 <span
lang=EN-US>IrenderTarget </span>객체를 하나 더 추가하고<span lang=EN-US> X </span>방향으로 흐림
효과를 처리한 텍스처를<span lang=EN-US> Y </span>방향으로 다시 흐림 효과를 적용합니다<span lang=EN-US>. </span>이
과정은 <span lang=EN-US><a href="https://github.com/3dapi/dv16_shader4/raw/master/h4_05_blur2.zip">h4_05_blur2.zip</a></span>의 <span
lang=EN-US>CShaderEx::FrameMove() </span>함수에 다음과 같이 구현되어 있습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:green'>// </span><span
style='color:green'>원 장면 텍스처</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>pTx</span><span lang=EN-US style='color:black'>= </span><span
lang=EN-US>m_pTex</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:green'>// X </span><span style='color:green'>방향 흐림 효과를 저장</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>m_pTrndX</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>BeginScene</span><span lang=EN-US
style='color:black'>();</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>hr</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>m_pDev</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>SetTexture</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US>pTx</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>…</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>hr</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>m_pEft</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>Pass</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>m_pDev</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>DrawPrimitiveUP</span><span lang=EN-US
style='color:black'>( </span><span lang=EN-US style='color:#A000A0'>D3DPT_TRIANGLEFAN</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:red'>2</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US>m_pVtx</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:blue'>sizeof</span><span
lang=EN-US style='color:black'>(</span><span lang=EN-US style='color:blue'>VtxDUV1</span><span
lang=EN-US style='color:black'>));</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>…</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>m_pTrndX</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>EndScene</span><span lang=EN-US
style='color:black'>();</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:green'>// Y </span><span style='color:green'>방향 흐림 효과를 저장</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>m_pTrndY</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>BeginScene</span><span lang=EN-US
style='color:black'>();</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>pTx</span><span lang=EN-US style='color:black'>= (</span><span
lang=EN-US style='color:blue'>PDTX</span><span lang=EN-US style='color:black'>)</span><span
lang=EN-US>m_pTrndX</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>GetTexture</span><span lang=EN-US
style='color:black'>();&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:green'>// X </span><span style='color:green'>방향 흐림 효과를 저장한 텍스처를 가져온다<span
lang=EN-US>.</span></span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>hr</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>m_pDev</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>SetTexture</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US>pTx</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>hr</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>m_pEft</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>Pass</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>m_pDev</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>DrawPrimitiveUP</span><span lang=EN-US
style='color:black'>( </span><span lang=EN-US style='color:#A000A0'>D3DPT_TRIANGLEFAN</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:red'>2</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US>m_pVtx</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:blue'>sizeof</span><span
lang=EN-US style='color:black'>(</span><span lang=EN-US style='color:blue'>VtxDUV1</span><span
lang=EN-US style='color:black'>));</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>…</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>m_pTrndY</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>EndScene</span><span lang=EN-US
style='color:black'>();</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>다음 그림의 왼쪽 부분은<span lang=EN-US> X </span>방향으로만 흐림 효과를 적용한 것이고
오른쪽 부분은 왼쪽에서 처리한 것을<span lang=EN-US> Y </span>방향으로 다시 처리한 결과 입니다 </p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=303 height=227
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image098.gif"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;</span>흐림 효과<span lang=EN-US>: <a
href="https://github.com/3dapi/dv16_shader4/raw/master/h4_05_blur2_2.zip">h4_05_blur2_2.zip</a> X, Y </span>양방향으로 적용<span
lang=EN-US>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>만약 흐림 효과를 화면 전체에 적용한다고 했을 때<span lang=EN-US> X, Y</span>에 대해서
반복적으로 흐림 효과를 적용해야 할 것입니다<span lang=EN-US>. </span>다음은<span lang=EN-US> X, Y </span>방향에
대해서 각각<span lang=EN-US> 8</span>번씩 흐림 효과를 반복적으로 적용한 그림입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=302 height=227
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image099.gif"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;</span>흐림 효과<span lang=EN-US>:</span><span
lang=EN-US> </span><span lang=EN-US><a href="https://github.com/3dapi/dv16_shader4/raw/master/h4_05_blur2_2.zip">h4_05_blur2_2.zip</a>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>예상대로 반복한 만큼 많이 흐려졌습니다<span lang=EN-US>. </span>그러나 문제는 렌더링 속도
입니다<span lang=EN-US>. </span>이렇게 렌더링 속도를 깎아 먹으면 다른 효과는 시도도 못할 것입니다<span
lang=EN-US>. </span>문제를 해결하기 위해서 흐림 효과라는 것을 되돌아 보면 주변 픽셀과 뭉개기 인데 이 결과를 저장하는 텍스처의
크기를 굳이 화면 크기와 같은 크기로 만들 필요가 없다는 것입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>그래서<span lang=EN-US> Blur</span>를 저장할 텍스처의 크기를 줄여서 출력해 보았습니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=272 height=204
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image100.gif">&nbsp;<img border=0 width=272
height=204 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image101.gif"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;</span>흐림 효과<span lang=EN-US>.</span><span
lang=EN-US> Blur 4</span>회 반복<span lang=EN-US>. </span>텍스처 크기<span lang=EN-US>:
</span>화면<span lang=EN-US>x (1/2) 4 </span>화면<span lang=EN-US>x (1/4). </span><span
lang=EN-US><a href="https://github.com/3dapi/dv16_shader4/raw/master/h4_05_blur2_2.zip">h4_05_blur2_2.zip</a>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>Blur </span>횟수를 절반으로 줄이고 텍스처의 크기는<span
lang=EN-US> 1/2 </span>이하로 줄여도 화면의 효과는 비슷합니다<span lang=EN-US>. </span>대신 렌더링 속도는
이전과 비교할 수 없을 정도 향상됩니다<span lang=EN-US>. </span>즉<span lang=EN-US>, </span>픽셀을 뭉갤
때는 화면 크기보다 작은 텍스처를 가지고 작업하는 것입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이렇게 테스트 코드를 만들었는데<span lang=EN-US> 3D </span>장면에 적용해 봅시다<span
lang=EN-US>. 3D</span>에 적용되는 과정은 다음 그림과 같을 것입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=611 height=176
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image102.gif"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;</span>흐림 효과 적용 방법<span lang=EN-US>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이전 효과들에서 사용했던 코드에 적용해 봅시다<span lang=EN-US>. CShaderEx </span>클래스는
흐림 효과를<span lang=EN-US> FrameMove()</span>함수에서 처리하고 있습니다<span lang=EN-US>. </span>따라서<span
lang=EN-US> CMain::FrameMove()</span>함수에서 장면을 텍스처에 저장하고 나서<span lang=EN-US>
CShaderEx </span>객체에 장면에 대한 텍스처 포인터를 전달해야 합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:blue'>HRESULT</span><span
lang=EN-US style='color:black'> </span><span lang=EN-US style='color:blue'>CMain</span><span
lang=EN-US style='color:black'>::</span><span lang=EN-US style='color:#880000'>FrameMove</span><span
lang=EN-US style='color:black'>()</span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>…</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>m_pTrnd</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>BeginScene</span><span lang=EN-US
style='color:black'>();</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>hr</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>m_pd3dDevice</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>Clear</span><span lang=EN-US style='color:
black'>(…);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:#880000'>RenderScene</span><span lang=EN-US
style='color:black'>();</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>m_pTrnd</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>EndScene</span><span lang=EN-US
style='color:black'>();</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:green'>// CShaderEx</span><span style='color:green'>클래스<span
lang=EN-US>3D </span>장면 텍스처 연결</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>LPDIRECT3DTEXTURE9</span><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US>pTx</span><span
lang=EN-US style='color:black'> = (</span><span lang=EN-US style='color:blue'>LPDIRECT3DTEXTURE9</span><span
lang=EN-US style='color:black'>)</span><span lang=EN-US>m_pTrnd</span><span
lang=EN-US style='color:black'>-&gt;</span><span lang=EN-US style='color:#880000'>GetTexture</span><span
lang=EN-US style='color:black'>();</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>m_pShader</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>SetSceneTexture</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US>pTx</span><span lang=EN-US
style='color:black'>);</span></p>

<p class=MsoNormal><span lang=EN-US style='color:#A000A0'>SAFE_FRMOV</span><span
lang=EN-US style='color:black'>(&nbsp;&nbsp;&nbsp; </span><span lang=EN-US>m_pShader</span><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; );</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>쉐이더 코드의<span lang=EN-US> sampler</span>에 대한 객체 설정에서 <span
lang=EN-US>sampler smp0:register(s0); </span>대신 다음과 같이 수정했습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>texture</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>m_TxDif</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>sampler</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>smpDif</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:blue'>sampler_state</span></p>

<p class=MsoNormal><span lang=EN-US>{</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>texture</span><span lang=EN-US style='color:black'>
= &lt;</span><span lang=EN-US>m_TxDif</span><span lang=EN-US style='color:black'>&gt;;</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>};</span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal><span style='color:black'>따라서 디바이스의<span lang=EN-US>
SetTexture()</span>함수가 아닌 이펙트 객체의<span lang=EN-US> SetTexture() </span>함수를 사용해야
합니다<span lang=EN-US>.</span></span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>m_pEft</span><span lang=EN-US
style='color:black'>-&gt;</span><span lang=EN-US style='color:#880000'>SetTexture</span><span
lang=EN-US style='color:black'>(</span><span lang=EN-US style='color:fuchsia'>&quot;m_TxDif&quot;</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US>pTx</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>모든 코드는 <span lang=EN-US><a href="https://github.com/3dapi/dv16_shader4/raw/master/h4_05_blur2_a.zip">h4_05_blur2_a.zip</a></span>에
있으며 실행하면 다음과 같은 장면을 만들어 냅니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=273 height=204
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image103.gif">&nbsp;<img border=0 width=272
height=204 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image104.gif"></span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US>&lt;</span>흐림 효과 적용<span lang=EN-US>: </span><span lang=EN-US><a
href="https://github.com/3dapi/dv16_shader4/raw/master/h4_05_blur2_a.zip">h4_05_blur2_a.zip</a>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>4.5.2 Glare Effect</span></p>

<p class=MsoNormal>흐림 효과는 포스트 이펙트에서 아주 자주 사용되는 기술입니다<span lang=EN-US>. </span>이
방법은 조금만 수정하면<span lang=EN-US> Glare </span>효과에 쉽게 적용할 수 있습니다<span lang=EN-US>.
Glare </span>효과는 아주 밝은 빛 아래의 몽환<span lang=EN-US>(</span><a name="[문서의_처음]"></a>夢幻<span
lang=EN-US>)</span>적 표현이나 어두운 곳에서 갑자기 밝은 곳으로 나왔을 때 등 많은 부분에서 자주 사용됩니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=504 height=271
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image105.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;Glare </span>효과 적용 순서<span lang=EN-US>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>지금까지의 내용에 이 효과를 구현하려면 앞의 그림처럼 먼저 장면을 저장한 텍스처에서 밝은 부분을 추려냅니다<span
lang=EN-US>. </span>밝은 부분을 추려내는 방법은 쉐이더의 <span lang=EN-US style='color:fuchsia'>pow()</span><span
lang=EN-US> </span>함수를 이용합니다<span lang=EN-US>. </span>이 함수는 조명의 퐁 반사에서 설명했듯이 어떤
수에 승수를 해주는 함수입니다<span lang=EN-US>. </span>장면의 픽셀에 이 함수를 사용하면 밝은 부분을 얻어낼 수 있고<span
lang=EN-US>, </span>이렇게 얻은 픽셀에 흐림 효과를 적용합니다<span lang=EN-US>. </span>마지막에는 전체 장면과
적절한 연산을 합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>2</span>단계의 밝은 색 추출은 다음과 같이<span
lang=EN-US> pow() </span>함수를 이용합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US style='color:#880000'>Pxlsharp</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:blue'>SvsOut</span><span
lang=EN-US style='color:black'> </span><span lang=EN-US>In</span><span
lang=EN-US style='color:black'>) : </span><span lang=EN-US style='color:blue'>COLOR0</span></p>

<p class=MsoNormal><span lang=EN-US>{</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'>= </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>t0</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US style='color:
black'>(</span><span lang=EN-US>smpDif</span><span lang=EN-US style='color:
black'>, </span><span lang=EN-US>In</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:#880000'>pow</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US>t0</span><span lang=EN-US style='color:black'>,</span><span
lang=EN-US style='color:red'>4</span><span lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'> *= </span><span
lang=EN-US style='color:red'>30</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>w</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>return</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>Out</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>다음은<span lang=EN-US> 4</span>단계에서 장면 텍스처와 흐림 효과 텍스처를 섞는 쉐이더 코드
입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US style='color:#880000'>PxlMulti</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:blue'>SvsOut</span><span
lang=EN-US style='color:black'> </span><span lang=EN-US>In</span><span
lang=EN-US style='color:black'>) : </span><span lang=EN-US style='color:blue'>COLOR0</span></p>

<p class=MsoNormal><span lang=EN-US>{</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'>=</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>t0</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US style='color:
black'>(</span><span lang=EN-US>smpDif</span><span lang=EN-US style='color:
black'>, </span><span lang=EN-US>In</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>t1</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US style='color:
black'>(smpDiB, </span><span lang=EN-US>In</span><span lang=EN-US
style='color:black'>.</span><span lang=EN-US style='color:#A000A0'>Tex</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>//Out = t0 + t1*2.5f;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>t0</span><span lang=EN-US style='color:black'>*.</span><span
lang=EN-US style='color:red'>7</span><span lang=EN-US style='color:black'> + </span><span
lang=EN-US>t1</span><span lang=EN-US style='color:black'>*</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>7f</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out </span><span lang=EN-US style='color:black'>*= </span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>5f</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>w</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>return</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>Out</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>전체적으로<span lang=EN-US> 2</span>단계가 더 추가되어<span lang=EN-US>
Technique</span>도 수정해야 합니다<span lang=EN-US>. <a href="https://github.com/3dapi/dv16_shader4/raw/master/h4_05_blur3_a.zip">h4_05_blur3_a.zip</a>
</span>예제는 가우스 분포<span lang=EN-US> exp ()</span>함수를 직접 사용하고 있습니다<span
lang=EN-US>. </span>이전 결과와 거의 차이가 없게 구성했습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:blue'>for</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US style='color:blue'>int</span><span lang=EN-US style='color:black'> </span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>=-fBgn; </span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>&lt;=fBgn; ++</span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>)</span></p>

<p class=MsoNormal><span lang=EN-US>{</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; uv =
In.</span><span lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US
style='color:black'> + </span><span lang=EN-US style='color:blue'>float2</span><span
lang=EN-US style='color:black'>(</span><span lang=EN-US>i</span><span
lang=EN-US style='color:black'>*fInc/m_TexW, </span><span lang=EN-US
style='color:red'>0</span><span lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Out
+= </span><span lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US>smpDif</span><span lang=EN-US
style='color:black'>, uv) * </span><span lang=EN-US style='color:#880000'>exp</span><span
lang=EN-US style='color:black'>( -</span><span lang=EN-US>i</span><span
lang=EN-US style='color:black'>*</span><span lang=EN-US>i</span><span
lang=EN-US style='color:black'> * fDelta);</span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal>전체 코드는 <span lang=EN-US><a href="https://github.com/3dapi/dv16_shader4/raw/master/h4_05_blur3_a.zip">h4_05_blur3_a.zip</a></span>을
참고 하기 바랍니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=193 height=145
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image106.gif">&nbsp;<img border=0 width=192
height=145 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image107.gif">&nbsp;<img border=0
width=193 height=145 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image108.gif"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;Glare </span>효과<span lang=EN-US>: <a
href="https://github.com/3dapi/dv16_shader4/raw/master/h4_05_blur3_a.zip">h4_05_blur3_a.zip</a>. RGB, BRG, GBR</span>교환<span
lang=EN-US>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>만약 좀 더 밝게 만들고자 한다면 밝은 부분만 추려내는 쉐이더의 <span lang=EN-US>Pxlsharp()</span>함수의
내용을 수정해야 합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>4.5.3 Cross Filter
Effect</span></p>

<table class=MsoTableGrid border=0 cellspacing=0 cellpadding=0 align=left
 style='border-collapse:collapse;margin-left:4.85pt;margin-right:4.85pt'>
 <tr style='height:152.75pt'>
  <td width=259 valign=top style='width:194.4pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:152.75pt'>
  <p class=MsoNormal><span lang=EN-US><img border=0 width=240 height=180
  src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image109.jpg"></span></p>
  <p class=MsoNormal><span lang=EN-US>&lt;DXSDK HDR </span>예제<span lang=EN-US>&gt;</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal>유리나 안경 등에서 강한 빛이 여러 개의 방향으로 분산 되는 현상을 가끔 볼 수 있는데 카메라에서는 이런 효과를
극대화 하기 위해 크로스 필터<span lang=EN-US>(Cross Filter) </span>라는 것을 사용합니다<span
lang=EN-US>. DXSDK</span>의 <span lang=EN-US>HDRLighting </span>예제는<span
lang=EN-US> HDR(High Dynamic Range)</span>에 대한 장면을 연출하고 있습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>예제의 설명은<span lang=EN-US> SDK </span>안에서도 자세히 설명하고 있으니 도움말을 참고
하기 바랍니다<span lang=EN-US>. </span>여기서는 이 예제에 사용된 크로스 필터만 만들어 보겠습니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal>크로스 필터를 적용하는 방법은 다음 그림과 같이 먼저 장면에서 아주 밝은 고휘도<span
lang=EN-US>(High Brightness or Luminescence) </span>부분을 추출해야 하고 이것을 이미지에 저장을 해야
합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>만약<span lang=EN-US> 6</span>방향으로 분산하는 빛을 표현하고 싶다면<span
lang=EN-US> 6</span>방향으로 늘려야 합니다<span lang=EN-US>. 6</span>방향에 대한 결과를 저장해야 하므로 여기세
최소한<span lang=EN-US> 6</span>장의 이미지와 이 결과를 저장할 한 장의 이미지 총<span lang=EN-US> 7</span>장이
필요합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=588 height=330
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image110.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;</span>크로스 필터 만드는 방법<span lang=EN-US>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>쉐이더 코드로<span lang=EN-US> 6</span>방향으로 색상을 늘리게 되면 군데군데 빛이 끊어질
수 있습니다<span lang=EN-US>. </span>이것을 메우기 위해 흐림 효과를 적용합니다<span lang=EN-US>. </span>이렇게
적용하고 나서 장면과 다시 합칩니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>전체적인 내용은 이전의 흐림 효과에 밝은 부분 추출과<span lang=EN-US> 6</span>방으로 늘려
처리하는 과정이 더 추가가 되었습니다<span lang=EN-US>. </span>이것은 그냥 하면 될 것 같기도 합니다<span
lang=EN-US>. </span>그런데 여기서 하나 더 알아야 할 것이 있습니다<span lang=EN-US>. </span>그것은 밝은 부분을
더욱 강하게 저장해 놓아야<span lang=EN-US> 6</span>방향으로 늘이면서 점점 빛의 세기를 줄여 가며 크로스 필터 효과를 만들어야
하는데 기존의<span lang=EN-US> 32</span>비트 텍스처는 각 색상의 표현이 최대<span lang=EN-US> 255 </span>밖에
안됩니다<span lang=EN-US>. </span>따라서 쉐이더 코드에서 밝기를 아무리 올려 놓아도 최대<span lang=EN-US>
255 </span>이상은 소용이 없게 됩니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>이런 이유로 각 색상을<span lang=EN-US> 8</span>비트 보다 더 큰 정보를 저장할 수 있는
텍스처가 필요합니다<span lang=EN-US>. DXSDK</span>는 아주 높은 휘도의 색상 정보를 저장할 수 있는 각 채널당<span
lang=EN-US> 16</span>비트 부동 소수점 형식의 <span lang=EN-US style='color:#A000A0'>D3DFMT_A16B16G16R16F</span>와<span
lang=EN-US> 32</span>비트 형식의 <span lang=EN-US style='color:#A000A0'>D3DFMT_A32B32G32R32F</span><span
lang=EN-US> </span>포맷을 지원하고 있습니다<span lang=EN-US>. </span>이 둘 중의 하나로 텍스처를 만들어야 고휘도
처리 결과가 제대로 저장이 됩니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>대충 어떤 형식으로 처리해야 하는지 방법을 알았으니까 본격적으로 구현해 봅시다<span lang=EN-US>.
</span>먼저 각 단계별 텍스처들을 모아 보면 다음과 같이 전체 장면을 저장할 텍스처<span lang=EN-US> 1</span>장<span
lang=EN-US>, </span>고휘도 추출을 위한 텍스처<span lang=EN-US> 1 </span>장<span lang=EN-US>,
6</span>방향과 이를 저장할 텍스처<span lang=EN-US> 7</span>장 이 필요한데 고휘도 추출을 먼저<span
lang=EN-US> Y </span>방향 흐림 효과에 사용할 텍스처에 저장하면 되므로 총<span lang=EN-US> 10</span>장 정도의
텍스처가 필요합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:blue'>IrenderTarget</span><span lang=EN-US>* m_pTrnd;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// Rendering Target Texture for Scene</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:blue'>IrenderTarget</span><span lang=EN-US>* m_pTrndX;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// Rendering Target Texture for Blur X</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:blue'>IrenderTarget</span><span lang=EN-US>* m_pTrndY;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// Rendering Target Texture for Blur Y</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:blue'>IrenderTarget</span><span lang=EN-US>* m_pTrndC[</span><span
lang=EN-US style='color:red'>6</span><span lang=EN-US>];&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// Cross Texture</span></p>

<p class=MsoNormal><span lang=EN-US style='color:blue'>IrenderTarget</span><span
lang=EN-US>* m_pTrndS;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// Cross Texture All</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:blue'>IrenderTarget</span><span
lang=EN-US> </span>는 실시간 텍스처를 생성해 주는 클래스 입니다<span lang=EN-US>. </span>이 클래스에 대한
객체를 생성할 때 다음과 같이<span lang=EN-US> &quot;HDR16&quot; </span>문자열을 넣어주면 채널당<span
lang=EN-US> 16</span>비트 <span lang=EN-US style='color:#A000A0'>D3DFMT_A16B16G16R16F
</span>포맷의 텍스처를 생성해 줍니다<span lang=EN-US>. </span>내부 코드는 <span lang=EN-US><a
href="https://github.com/3dapi/dv16_shader4/raw/master/h4_06_cross1.zip">h4_06_cross1.zip</a></span>의<span lang=EN-US>
RenderTarget.cpp </span>에 있으니 참고 하기 바랍니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>m_fTxW = </span><span
lang=EN-US style='color:red'>400</span><span lang=EN-US>;</span></p>

<p class=MsoNormal><span lang=EN-US>m_fTxH = </span><span lang=EN-US
style='color:red'>300</span><span lang=EN-US>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:#880000'>LcD3D_CreateRenderTarget</span><span lang=EN-US>(</span><span
lang=EN-US style='color:fuchsia'>&quot;HDR16&quot;</span><span lang=EN-US>,
&amp;m_pTrndX, m_pDev, m_fTxW, m_fTxH);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>텍스처 생성은 이렇게 끝내고 다음으로 고휘도 추출하는<span lang=EN-US> HLSL</span>부분입니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:blue'>float4</span><span lang=EN-US> </span><span lang=EN-US
style='color:#880000'>PxlLumi</span><span lang=EN-US>(</span><span lang=EN-US
style='color:blue'>SvsOut</span><span lang=EN-US> In) : </span><span
lang=EN-US style='color:blue'>COLOR0</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US>&nbsp; Out=</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US> t0 = </span><span
lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US>(smpDif, In.</span><span
lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t0.g
*=</span><span lang=EN-US style='color:red'>1</span><span lang=EN-US>.</span><span
lang=EN-US style='color:red'>11f</span><span lang=EN-US>;  t0.b *=</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>.</span><span lang=EN-US
style='color:red'>9f</span><span lang=EN-US>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t0
= </span><span lang=EN-US style='color:#880000'>pow</span><span lang=EN-US>(t0,</span><span
lang=EN-US style='color:red'>4</span><span lang=EN-US>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>if</span><span lang=EN-US>(t0.r+t0.b+t0.b&lt;</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>.</span><span lang=EN-US
style='color:red'>95f</span><span lang=EN-US>)</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t0=</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>.f;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t0
= </span><span lang=EN-US style='color:#880000'>smoothstep</span><span
lang=EN-US>(</span><span lang=EN-US style='color:red'>0</span><span lang=EN-US>.</span><span
lang=EN-US style='color:red'>6</span><span lang=EN-US>,</span><span lang=EN-US
style='color:red'>0</span><span lang=EN-US>.</span><span lang=EN-US
style='color:red'>9</span><span lang=EN-US>, t0);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t0
= </span><span lang=EN-US style='color:#880000'>pow</span><span lang=EN-US>(t0,</span><span
lang=EN-US style='color:red'>12</span><span lang=EN-US>)*</span><span
lang=EN-US style='color:red'>2</span><span lang=EN-US>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Out
= t0;</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>전체 장면이 파란색이 많아 녹색을 조금<span lang=EN-US>(1.11f) </span>강조했습니다<span
lang=EN-US>. </span>코드 중간에<span lang=EN-US> pow() </span>함수를 사용해서 색상의 밝기가<span
lang=EN-US> 1 </span>근처에 있는 픽셀만 남겨놓도록 하고 있습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>smoothstep()</span>함수는 세 인수<span
lang=EN-US>, min, max, </span>색상을 받아서 색상이<span lang=EN-US> min </span>보다 작거나 같으면<span
lang=EN-US> 0</span>을<span lang=EN-US>, max</span>보다 크거나 같으면<span lang=EN-US> 1</span>을
반환 합니다<span lang=EN-US>. </span>그 사이에 있는 함수는 그림처럼 에르미트 보간<span lang=EN-US>(Hermite
Interpolation)</span>을 하는 함수입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<table class=MsoTableGrid border=0 cellspacing=0 cellpadding=0 width=631
 style='width:473.4pt;border-collapse:collapse'>
 <tr>
  <td width=295 style='width:221.4pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US><img border=0 width=264 height=208
  src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image111.jpg"></span></p>
  <p class=MsoNormal><span lang=EN-US>&lt; Hermite Interpolation &gt;</span></p>
  </td>
  <td width=336 style='width:252.0pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='color:blue'>float</span><span
  lang=EN-US> </span><span lang=EN-US style='color:#880000'>smoothstep</span><span
  lang=EN-US>(</span><span lang=EN-US style='color:blue'>float</span><span
  lang=EN-US> </span><span lang=EN-US style='color:#A000A0'>min</span><span
  lang=EN-US>, </span><span lang=EN-US style='color:blue'>float</span><span
  lang=EN-US> </span><span lang=EN-US style='color:#A000A0'>max</span><span
  lang=EN-US>, </span><span lang=EN-US style='color:blue'>float</span><span
  lang=EN-US> </span><span lang=EN-US style='color:#A000A0'>x</span><span
  lang=EN-US>)</span></p>
  <p class=MsoNormal><span lang=EN-US>{</span></p>
  <p class=MsoNormal style='text-indent:20.0pt'><span lang=EN-US>x = </span><span
  lang=EN-US style='color:#880000'>saturate</span><span lang=EN-US>((x - min) /
  (max - min)); </span></p>
  <p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>
  <p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp; </span><span
  lang=EN-US style='color:blue'>return</span><span lang=EN-US> x*x*(3-2*x);</span></p>
  <p class=MsoNormal><span lang=EN-US>}</span></p>
  <p class=MsoNormal><span lang=EN-US>saturate: x&lt;0 x=1, x&gt;1 x=1</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이 쉐이더 코드는 <span lang=EN-US>CShaderEx::FrameMove() </span>에서<span
lang=EN-US> 2</span>번째 고휘도 추출에서 호출됩니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:blue'>INT</span><span lang=EN-US> </span><span lang=EN-US
style='color:blue'>CShaderEx</span><span lang=EN-US>::</span><span lang=EN-US
style='color:#880000'>FrameMove</span><span lang=EN-US>()</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:green'>// 2. </span><span style='color:green'>축소된 텍스처에<span
lang=EN-US> Luminescence</span>가 강한 부분을 그린다<span lang=EN-US>.</span></span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>m_pTrndY-&gt;</span><span
lang=EN-US style='color:#880000'>BeginScene</span><span lang=EN-US>();</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal style='text-indent:40.0pt;word-break:keep-all'><span
lang=EN-US>hr = m_pDev-&gt;</span><span lang=EN-US style='color:#880000'>SetVertexDeclaration</span><span
lang=EN-US>(m_pFVF);</span></p>

<p class=MsoNormal style='text-indent:40.0pt;word-break:keep-all'><span
lang=EN-US>…</span></p>

<p class=MsoNormal style='text-indent:40.0pt;word-break:keep-all'><span
lang=EN-US>hr = m_pEft-&gt;</span><span lang=EN-US style='color:#880000'>Begin</span><span
lang=EN-US>(</span><span lang=EN-US style='color:#A000A0'>NULL</span><span
lang=EN-US>, </span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US>);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; hr
= m_pEft-&gt;</span><span lang=EN-US style='color:#880000'>Pass</span><span
lang=EN-US>(</span><span lang=EN-US style='color:red'>0</span><span lang=EN-US>);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; hr
= m_pDev-&gt;</span><span lang=EN-US style='color:#880000'>DrawPrimitiveUP</span><span
lang=EN-US>();</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>6</span>방향으로 늘리는 작업은 쉐이더코드의 <span
lang=EN-US>PxlStar() </span>함수에서 합니다<span lang=EN-US>. for</span>문 안에서 각 방향에 따라
샘플링을 하고 이 값을 계속 누적해 나갑니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:blue'>float4</span><span lang=EN-US> </span><span lang=EN-US
style='color:#880000'>PxlStar</span><span lang=EN-US>(</span><span lang=EN-US
style='color:blue'>SvsOut</span><span lang=EN-US> In) : </span><span
lang=EN-US style='color:blue'>COLOR0</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>for</span><span lang=EN-US>(</span><span
lang=EN-US style='color:blue'>int</span><span lang=EN-US> i=</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>; i&lt;MAX_SAMP; ++i)</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; uv
= In.</span><span lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US>
+ </span><span lang=EN-US style='color:blue'>float2</span><span lang=EN-US>(m_StarVal[i].x,
m_StarVal[i].y);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Out
+= </span><span lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US>(smpDif,
uv) * m_StarVal[i].z;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=272 height=204
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image112.jpg">&nbsp;<img border=0 width=272
height=204 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image113.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;</span>고휘도 검출<span lang=EN-US>, 6</span>방향
늘리기<span lang=EN-US>. </span>하드웨어가 괜찮다면 방향 늘리기 전 흐림 효과를<span lang=EN-US> 1~2</span>회
적용한다<span lang=EN-US>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>6</span>방향으로 픽셀을 늘리고 다음으로 흐림 효과를 적용해서 중간에 끊길지도
모르는 부분을 채워 줍니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>마지막으로<span lang=EN-US> 6</span>장의 빛을 모아 하나의 텍스처에 저장합니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:blue'>float4</span><span lang=EN-US> </span><span lang=EN-US
style='color:#880000'>PxlStarAll</span><span lang=EN-US>(</span><span
lang=EN-US style='color:blue'>SvsOut</span><span lang=EN-US> In) : </span><span
lang=EN-US style='color:blue'>COLOR0</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US>&nbsp; Out=</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Out
+= </span><span lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US>(</span><span
lang=EN-US style='color:blue'>s0</span><span lang=EN-US>, In.</span><span
lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US>);</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Out
+= </span><span lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US>(</span><span
lang=EN-US style='color:blue'>s5</span><span lang=EN-US>, In.</span><span
lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US>);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이 저장된 텍스처와 마지막에 전체 장면과 합칩니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:blue'>float4</span><span lang=EN-US> </span><span lang=EN-US
style='color:#880000'>PxlAll</span><span lang=EN-US>(</span><span lang=EN-US
style='color:blue'>SvsOut</span><span lang=EN-US> In) : </span><span
lang=EN-US style='color:blue'>COLOR0</span></p>

<p class=MsoNormal><span lang=EN-US>{</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US>&nbsp; Out=</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US>&nbsp; t0 = </span><span
lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US>(smpDif, In.</span><span
lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US>);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US>&nbsp; t1 = </span><span
lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US>(smpDif2, In.</span><span
lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US>);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Out
= t0*</span><span lang=EN-US style='color:red'>0</span><span lang=EN-US>.</span><span
lang=EN-US style='color:red'>8f</span><span lang=EN-US> + t1*.</span><span
lang=EN-US style='color:red'>3f</span><span lang=EN-US>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Out.w
= </span><span lang=EN-US style='color:red'>1</span><span lang=EN-US>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>return</span><span lang=EN-US> Out;</span></p>

<p class=MsoNormal><span lang=EN-US>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=273 height=204
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image114.jpg">&nbsp;</span><span lang=EN-US><img
border=0 width=273 height=204 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image115.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;</span>크로스 필터 효과<span lang=EN-US>: <a
href="https://github.com/3dapi/dv16_shader4/raw/master/h4_06_cross1.zip">h4_06_cross1.zip</a>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>빛은 파장에 따라 굴절 되는 각도가 다릅니다<span lang=EN-US>. </span>크로스 필터에도 이것을
간단하게 적용하는 방법은<span lang=EN-US>R, G, B</span>에 따라 샘플링 되는 지점의<span lang=EN-US> U,
V</span>에 조금씩 차이를 주면 색수차를 만들어 낼 수 있습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>다음은 붉은 색에 대한 색수차 적용입니다<span lang=EN-US>. </span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:blue'>float4</span><span lang=EN-US> </span><span lang=EN-US
style='color:#880000'>PxlStarR</span><span lang=EN-US>(</span><span lang=EN-US
style='color:blue'>SvsOut</span><span lang=EN-US> In) : </span><span
lang=EN-US style='color:blue'>COLOR0</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>for</span><span lang=EN-US>(</span><span
lang=EN-US style='color:blue'>int</span><span lang=EN-US> i=</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>; i&lt;MAX_SAMP; ++i)</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; u
= In.</span><span lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US>.x
+ m_StarVal[i].x*</span><span lang=EN-US style='color:red'>1</span><span
lang=EN-US>.</span><span lang=EN-US style='color:red'>25f</span><span
lang=EN-US>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; v
= In.</span><span lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US>.y
+ m_StarVal[i].y*</span><span lang=EN-US style='color:red'>1</span><span
lang=EN-US>.</span><span lang=EN-US style='color:red'>25f</span><span
lang=EN-US>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Out.r
+= </span><span lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US>(smpDif,
</span><span lang=EN-US style='color:blue'>float2</span><span lang=EN-US>(u,v))
* m_StarVal[i].z;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이것을 녹색<span lang=EN-US>, </span>파란색에도 적용하면 다음과 같은 화면을 얻을 수 있습니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=273 height=204
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image116.jpg">&nbsp;<img border=0 width=272
height=204 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image117.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;</span>색수차가 적용된 크로스필터<span lang=EN-US>:
<a href="https://github.com/3dapi/dv16_shader4/raw/master/h4_06_cross2.zip">h4_06_cross2.zip</a>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이 정도 연습했으면<span lang=EN-US> 3D </span>장면에 적용해볼 차례입니다<span
lang=EN-US>. </span>작업은 다음 그림처럼 진행이 될 것입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=588 height=331
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image118.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;</span>크로스 필터<span lang=EN-US>: 3D </span>장면
적용<span lang=EN-US>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>지난 시간에 파티클을 이용해서 화면의 왜곡을 만들어 본 적이 있습니다<span lang=EN-US>. </span>그
때에 왜곡시키는 요소를 따로 텍스처에 저장을 하고 해당 효과를 적용했습니다<span lang=EN-US>. </span>지금도 마찬가지로<span
lang=EN-US> 3D </span>장면과 휘도를 적용 대상을 따로 렌더링 해야 합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>여기서는 특별한 오브젝트 추가 없이 나무가 고휘도를 만드는 오브젝트라 가정하고 이 들을 가지고 크로스 필터 효과를
만들어 보겠습니다<span lang=EN-US>. </span>먼저<span lang=EN-US> 1</span>번 단계의 전체 장면과 고휘도
대상인<span lang=EN-US> 2</span>번의 나무만 렌더링을 각각 진행 합니다<span lang=EN-US>. 2</span>번 나무만
렌더링 한 텍스처를 가지고 크로스 필터를 만듭니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>4</span>번 단계에서 이 둘을 혼합 합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>CMain</span>클래스에서 전체 장면과 휘도 장면을 저장하기 위해 다음<span
lang=EN-US> 2</span>개의 멤버를 선언합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:blue'>IrenderTarget</span><span lang=EN-US>* m_pTrnd0;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// </span><span style='color:green'>전체 장면</span></p>

<p class=MsoNormal><span lang=EN-US style='color:blue'>IrenderTarget</span><span
lang=EN-US>* m_pTrnd1;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:green'>// </span><span style='color:green'>고휘도 적용 장면</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>전체 장면은 화면 크기대로 만들고 휘도로 사용할 텍스처는 렌더링 속도 때문에 축소해서 만듭니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:blue'>HRESULT</span><span
lang=EN-US> </span><span lang=EN-US style='color:blue'>CMain</span><span
lang=EN-US>::</span><span lang=EN-US style='color:#880000'>Init</span><span
lang=EN-US>()</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:green'>// 3D </span><span style='color:green'>장면 저장 텍스처 생성</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:#880000'>LcD3D_CreateRenderTarget</span><span lang=EN-US>(</span><span
lang=EN-US style='color:#A000A0'>NULL</span><span lang=EN-US>, &amp;m_pTrnd0,
m_pd3dDevice);</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:green'>// </span><span style='color:green'>고휘도 저장 텍스처 생성</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:blue'>FLOAT</span><span lang=EN-US> fTexW = </span><span
lang=EN-US style='color:red'>256</span><span lang=EN-US>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:blue'>FLOAT</span><span lang=EN-US> fTexH = </span><span
lang=EN-US style='color:red'>256</span><span lang=EN-US>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:#880000'>LcD3D_CreateRenderTarget</span><span lang=EN-US>(</span><span
lang=EN-US style='color:#A000A0'>NULL</span><span lang=EN-US>, &amp;m_pTrnd1,
m_pd3dDevice, fTexW, fTexH);</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이들을 매 프레임 마다 렌더링을 합니다<span lang=EN-US>. </span>그리고<span
lang=EN-US> CShaderEx </span>클래스 객체에 이 두 텍스처를 전달합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:blue'>HRESULT</span><span
lang=EN-US> </span><span lang=EN-US style='color:blue'>CMain</span><span
lang=EN-US>::</span><span lang=EN-US style='color:#880000'>FrameMove</span><span
lang=EN-US>()</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:green'>// Rendering Target</span><span style='color:green'>에 장면을 그린다<span
lang=EN-US>.</span></span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>m_pTrnd0-&gt;</span><span
lang=EN-US style='color:#880000'>BeginScene</span><span lang=EN-US>();</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_pd3dDevice-&gt;</span><span
lang=EN-US style='color:#880000'>Clear</span><span lang=EN-US>(…);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:#880000'>RenderScene</span><span lang=EN-US>(</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>m_pTrnd0-&gt;</span><span
lang=EN-US style='color:#880000'>EndScene</span><span lang=EN-US>();</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:green'>// </span><span style='color:green'>휘도 부분에 대한 장면을 그린다<span
lang=EN-US>.</span></span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>m_pTrnd1-&gt;</span><span
lang=EN-US style='color:#880000'>BeginScene</span><span lang=EN-US>();</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_pd3dDevice-&gt;</span><span
lang=EN-US style='color:#880000'>Clear</span><span lang=EN-US>(…);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:#880000'>RenderScene</span><span lang=EN-US>(</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US>);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>m_pTrnd1-&gt;</span><span
lang=EN-US style='color:#880000'>EndScene</span><span lang=EN-US>();</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:green'>// CShaderEx </span><span style='color:green'>클래스에 장면<span
lang=EN-US>, </span>휘도 텍스처 연결</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:blue'>LPDIRECT3DTEXTURE9 </span><span lang=EN-US>pTx0 = (</span><span
lang=EN-US style='color:blue'>LPDIRECT3DTEXTURE9</span><span lang=EN-US>)m_pTrnd0-&gt;</span><span
lang=EN-US style='color:#880000'>GetTexture</span><span lang=EN-US>();</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:blue'>LPDIRECT3DTEXTURE9 </span><span lang=EN-US>pTx1 = (</span><span
lang=EN-US style='color:blue'>LPDIRECT3DTEXTURE9</span><span lang=EN-US>)m_pTrnd1-&gt;</span><span
lang=EN-US style='color:#880000'>GetTexture</span><span lang=EN-US>();</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>m_pShader-&gt;</span><span
lang=EN-US style='color:#880000'>SetSceneTexture</span><span lang=EN-US>(pTx0);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>m_pShader-&gt;</span><span
lang=EN-US style='color:#880000'>SetLuminescenceTexture</span><span lang=EN-US>(pTx1);</span></p>

<p class=MsoNormal><span lang=EN-US style='color:#A000A0'>SAFE_FRMOV</span><span
lang=EN-US>(&nbsp;&nbsp;&nbsp; m_pShader&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; );</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>CMain</span>에서 할 일은 끝났습니다<span lang=EN-US>.
</span>다음으로<span lang=EN-US> CShaderEx </span>클래스의 과정입니다<span lang=EN-US>.
CShaderEx </span>클래스에서는<span lang=EN-US> CMain</span>에서 전달한<span lang=EN-US> 3D
</span>장면과 휘도에 대한 텍스처 포인터<span lang=EN-US> 2</span>개를 가지고 있어야 합니다<span
lang=EN-US>. </span>다음으로 크로스 필터에 대한 텍스처<span lang=EN-US> 9</span>장을 준비합니다<span
lang=EN-US>. </span>이것은 순서를 잘 맞추면 더 줄일 수 있습니다<span lang=EN-US>. </span>일단 여기서는 각
장면이 제대로 처리되는지 확인을 위해 넉넉하게 사용하겠습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:blue'>PDTX</span><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_pTexS;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// Scene Texture</span></p>

<p class=MsoNormal><span lang=EN-US style='color:blue'>PDTX</span><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_pTexL;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// Luminescence Texture</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:blue'>IrenderTarget</span><span lang=EN-US>* m_pTrndX;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// Rendering Target Texture for Blur X</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:blue'>IrenderTarget</span><span lang=EN-US>* m_pTrndY;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// Rendering Target Texture for Blur Y</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:blue'>IrenderTarget</span><span lang=EN-US>* m_pTrndC[</span><span
lang=EN-US style='color:red'>6</span><span lang=EN-US>];&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// Cross Texture</span></p>

<p class=MsoNormal><span lang=EN-US style='color:blue'>IrenderTarget</span><span
lang=EN-US>* m_pTrndS;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:green'>// Cross Texture All</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>적당한 크기를 할당해 텍스처를 만들고 매 프레임 마다 크로스 필터 효과를 만들어 냅니다<span
lang=EN-US>. </span>이전과 달라진 부분은<span lang=EN-US> 1</span>번에서 휘도용 텍스처를 사용해야 하는 것과
크로스 모양을 만들기 전에 동적인 움직임을 주기 위해 약하게 시간에 따라 별 모양을 회전 시켰습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:blue'>INT</span><span
lang=EN-US> </span><span lang=EN-US style='color:blue'>CShaderEx</span><span
lang=EN-US>::</span><span lang=EN-US style='color:#880000'>FrameMove</span><span
lang=EN-US>()</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:green'>// 1. Luminescence Texture</span><span style='color:green'>를
사용한다<span lang=EN-US>.</span></span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pTx
= m_pTexL;</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:green'>// 3. </span><span style='color:green'>축소된 텍스처를 뭉갠다<span
lang=EN-US>.</span></span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:blue'>D3DXMATRIX</span><span lang=EN-US> mtViw;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>m_pDev-&gt;</span><span
lang=EN-US style='color:#880000'>GetTransform</span><span lang=EN-US>(</span><span
lang=EN-US style='color:#A000A0'>D3DTS_VIEW</span><span lang=EN-US>,
&amp;mtViw);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>mtViw._41 = </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>;&nbsp;&nbsp;&nbsp; mtViw._42
= </span><span lang=EN-US style='color:red'>0</span><span lang=EN-US>;&nbsp;&nbsp;
&nbsp;mtViw._43 = </span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:blue'>D3DXQUATERNION</span><span lang=EN-US> q;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:blue'>FLOAT</span><span lang=EN-US>&nbsp;&nbsp; fTime=</span><span
lang=EN-US style='color:#880000'>GetTickCount</span><span lang=EN-US>()*</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>.</span><span lang=EN-US
style='color:red'>001f</span><span lang=EN-US>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:#880000'>D3DXQuaternionRotationMatrix</span><span lang=EN-US>(&amp;q,
&amp;mtViw);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:blue'>float</span><span lang=EN-US> fc= </span><span lang=EN-US
style='color:#880000'>acosf</span><span lang=EN-US>(q.w*</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>.</span><span lang=EN-US
style='color:red'>99f</span><span lang=EN-US>) * </span><span lang=EN-US
style='color:red'>24</span><span lang=EN-US>.f + fTime*</span><span lang=EN-US
style='color:red'>0</span><span lang=EN-US>.</span><span lang=EN-US
style='color:red'>1f</span><span lang=EN-US>;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:green'>//4. Cross</span><span style='color:green'>를 만든다<span
lang=EN-US>.</span></span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:blue'>for</span><span lang=EN-US>(j=</span><span lang=EN-US
style='color:red'>0</span><span lang=EN-US>; j&lt;</span><span lang=EN-US
style='color:red'>6</span><span lang=EN-US>; ++j)</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float</span><span lang=EN-US>&nbsp;&nbsp; fTheta
= (fc+</span><span lang=EN-US style='color:red'>2</span><span lang=EN-US>.f * j
* </span><span lang=EN-US style='color:#A000A0'>D3DX_PI</span><span lang=EN-US>)/</span><span
lang=EN-US style='color:red'>6</span><span lang=EN-US>;</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이전 코드를 거의 그대로 사용하지만 각 단계별로 원하는 장면이 나오는지 중간중간 점검합니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>CShaderEx::Render() </span>함수의 <span
lang=EN-US style='color:blue'>#if </span><span lang=EN-US style='color:red'>1</span><span
lang=EN-US> </span>을 <span lang=EN-US style='color:blue'>#if </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US> </span>으로 하고 주석 처리된 부분을 다시
활성화 시키면 각 단계별 장면을 화면에 출력합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:green'>// </span><span style='color:green'>전체 장면</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:green'>//m_pDev-&gt;SetTexture(0, m_pTexS);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:green'>//m_pDev-&gt;DrawPrimitiveUP( D3DPT_TRIANGLEFAN, 2, pVtx,
sizeof(VtxDUV1));</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:green'>// </span><span style='color:green'>고휘도 장면</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:green'>//m_pDev-&gt;SetTexture(0, m_pTexL);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:green'>//m_pDev-&gt;DrawPrimitiveUP( D3DPT_TRIANGLEFAN, 2, pVtx,
sizeof(VtxDUV1));</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:green'>// </span><span style='color:green'>크로스 필터 장면</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>pTex = (</span><span
lang=EN-US style='color:blue'>PDTX</span><span lang=EN-US>)m_pTrndY-&gt;</span><span
lang=EN-US style='color:#880000'>GetTexture</span><span lang=EN-US>();</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>m_pDev-&gt;</span><span
lang=EN-US style='color:#880000'>SetTexture</span><span lang=EN-US>(</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US>, pTex);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>m_pDev-&gt;</span><span
lang=EN-US style='color:#880000'>DrawPrimitiveUP</span><span lang=EN-US>( </span><span
lang=EN-US style='color:#A000A0'>D3DPT_TRIANGLEFAN</span><span lang=EN-US>, </span><span
lang=EN-US style='color:red'>2</span><span lang=EN-US>, pVtx, </span><span
lang=EN-US style='color:blue'>sizeof</span><span lang=EN-US>(</span><span
lang=EN-US style='color:blue'>VtxDUV1</span><span lang=EN-US>));</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>다음 그림은 각 단계별 장면입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=274 height=204
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image119.jpg">&nbsp;<img border=0 width=273
height=205 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image120.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;</span>크로스 필터 휘도 추출<span lang=EN-US>: <a
href="https://github.com/3dapi/dv16_shader4/raw/master/h4_06_cross2_a.zip">h4_06_cross2_a.zip</a>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>쉐이더 파일 <span lang=EN-US>&quot;hlsl.fx&quot; </span>파일에서 장면과 크로스
필터를 섞는 <span lang=EN-US>PxlAll() </span>함수의 마지막 단계에서 붉은색<span lang=EN-US>, </span>초록색<span
lang=EN-US>, </span>파란색의 비율을 다르게 적용하면 다음 그림과 같은 장면을 만들어 냅니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:blue'>float4</span><span lang=EN-US> </span><span lang=EN-US
style='color:#880000'>PxlAll</span><span lang=EN-US>(</span><span lang=EN-US
style='color:blue'>SvsOut</span><span lang=EN-US> In) : </span><span
lang=EN-US style='color:blue'>COLOR0</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>…</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:green'>//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Out = t0*1.5f +
t1*.4f*float4(1.5, 0.3, .2, 1);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:green'>//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Out = t0*1.5f +
t1*.4f*float4(.6, 1., .8, 1);</span></p>

<p class=MsoNormal align=left style='text-align:left;word-break:keep-all'><span
lang=EN-US style='color:green'>//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Out = t0*1.5f +
t1*.4f*float4(.3, 0.7, 1.6, 1);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>t0</span><span lang=EN-US style='color:black'>*</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>5f</span><span lang=EN-US style='color:black'> + </span><span
lang=EN-US>t1</span><span lang=EN-US style='color:black'>*.</span><span
lang=EN-US style='color:red'>4f</span><span lang=EN-US style='color:black'>*</span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>3</span><span lang=EN-US style='color:black'>, .</span><span
lang=EN-US style='color:red'>3</span><span lang=EN-US style='color:black'>, </span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>4</span><span lang=EN-US style='color:black'>, </span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=274 height=204
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image121.jpg">&nbsp;<img border=0 width=274
height=204 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image122.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=274 height=204
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image123.jpg">&nbsp;<img border=0 width=273
height=204 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image124.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;3D </span>장면에서의 크로스 필터<span lang=EN-US>:
<a href="https://github.com/3dapi/dv16_shader4/raw/master/h4_06_cross2_a.zip">h4_06_cross2_a.zip</a>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>4.5.4 </span><span
style='font-size:12.0pt'>외곽선 추출</span></p>

<p class=MsoNormal>앞의 흐림 효과<span lang=EN-US>(Blur Effect)</span>가 수학으로 말하면 색상에 대한
적분이라 할 수 있습니다<span lang=EN-US>. </span>즉<span lang=EN-US>, </span>주변의 색상을 해서 평균을
내는 것입니다<span lang=EN-US>. </span>외곽선 추출을 반대로 미분에 해당합니다<span lang=EN-US>. </span>미분은
간단히 정의하면 변화 량<span lang=EN-US>(</span>Δ<span lang=EN-US>)</span>이라 할 수 있습니다<span
lang=EN-US>. </span>예를 들어 색상을<span lang=EN-US> [0, 255]</span>로 표현할 때 회색<span
lang=EN-US> 10</span>과 회색<span lang=EN-US> 50</span>은 변화 량이<span lang=EN-US> 40</span>이지만
회색<span lang=EN-US> 250</span>과 회색<span lang=EN-US> 248</span>은 변화 량이<span
lang=EN-US> 2</span>입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>단순히 색상만 가지고 화면에 출력하면 회색<span lang=EN-US> 250</span>과<span
lang=EN-US> 248</span>은 거의 하얀색으로 나타나고 회색<span lang=EN-US> 10</span>과<span
lang=EN-US> 20</span>은 거의 검정색으로 나오겠지만 변화 량을 화면에 표현하면<span lang=EN-US> 10</span>과<span
lang=EN-US> 20</span>이 더 밝게 나올 것이라는 것은 당연합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>그럼 이 변화 량은 어떻게 만들어야 할까요<span lang=EN-US>?</span></p>

<p class=MsoNormal>가장 빠른 방법은 마스크를 이용하는 것입니다<span lang=EN-US>. </span>마스크는 하나의 픽셀에
대하여 이웃한 픽셀 들에 대해서 정방 행렬 형태로 가중치를 지정한 값으로 외곽선 추출에서는 소벨<span lang=EN-US>(Sobel), </span>라플라시안<span
lang=EN-US>(Laplacian) </span>마스크를 주로 사용합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>다음 그림은 소벨 마스크의<span lang=EN-US> X, Y </span>방향 마스크와 라플라시안 마스크입니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=274 height=136
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image125.gif">,&nbsp;&nbsp;&nbsp; <img border=0
width=136 height=136 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image126.gif"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;</span>소벨<span lang=EN-US>(Sobel), </span>라플라시안<span
lang=EN-US>(Laplacian)&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>소벨 마스크는 윤곽선 검출의 가장 대표적인 마스크로<span lang=EN-US> X, Y </span>두 방향에
대한 필터가 있어 이들을 각각 적용한 후에 최종 기울기<span lang=EN-US>(Gradient)</span>를 결정합니다<span
lang=EN-US>. </span>이 기울기를 수식으로 표현하면 다음과 같습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><sub><img border=0 width=183 height=33
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image127.gif"></sub></span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>앞의 그림의 마스크 값을 이용해서 쉐이더 코드로 작성한다면 다음과 같습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:blue'>float4</span><span lang=EN-US style='color:black'> </span><span
lang=EN-US style='color:#880000'>PxlSobel</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:blue'>SvsOut</span><span
lang=EN-US style='color:black'> </span><span lang=EN-US>In</span><span
lang=EN-US style='color:black'>) : </span><span lang=EN-US style='color:blue'>COLOR0</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>{</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float2</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>Offset</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>8</span><span lang=EN-US style='color:black'>] =</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {-</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>,-</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>}, { </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>,-</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>}, { </span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>,-</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>},</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {-</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>, </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>},&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
{ </span><span lang=EN-US style='color:red'>1</span><span lang=EN-US
style='color:black'>, </span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US style='color:black'>},</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {-</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>, </span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>}, { </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>, </span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>}, { </span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>, </span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>},</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; };</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'>=</span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>,</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>,</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>,</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>&nbsp; </span><span
lang=EN-US>Mon</span><span lang=EN-US style='color:black'>=</span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>299</span><span lang=EN-US style='color:black'>, </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>587</span><span lang=EN-US style='color:black'>, </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>114</span><span lang=EN-US style='color:black'> , </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float2</span><span lang=EN-US style='color:black'>&nbsp; </span><span
lang=EN-US>uv</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>&nbsp; </span><span lang=EN-US>Tex</span><span lang=EN-US style='color:black'>[</span><span lang=EN-US
style='color:red'>8</span><span lang=EN-US style='color:black'>];</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>&nbsp; </span><span
lang=EN-US>TexVert</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>&nbsp; </span><span
lang=EN-US>TexHorz</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>for</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US style='color:blue'>int</span><span lang=EN-US style='color:black'> </span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'> =</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>; </span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'> &lt; </span><span
lang=EN-US style='color:red'>8</span><span lang=EN-US style='color:black'>; </span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>++)</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Offset</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>x</span><span lang=EN-US style='color:black'> /= m_TexW;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Offset</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>y</span><span lang=EN-US style='color:black'> /= m_TexH;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>uv</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>In</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>Tex</span><span lang=EN-US style='color:black'> + </span><span
lang=EN-US>Offset</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>];</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US>Tex</span><span lang=EN-US style='color:black'>[</span><span lang=EN-US>i</span><span
lang=EN-US style='color:black'>] = </span><span lang=EN-US style='color:#880000'>tex2D</span><span
lang=EN-US style='color:black'>( </span><span lang=EN-US>smpDif</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US>uv</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// convert to Mono</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US>Tex</span><span lang=EN-US style='color:black'>[</span><span lang=EN-US>i</span><span
lang=EN-US style='color:black'>] = dot(</span><span lang=EN-US>Tex</span><span
lang=EN-US style='color:black'>[</span><span lang=EN-US>i</span><span
lang=EN-US style='color:black'>], </span><span lang=EN-US>Mon</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// Vertical</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>TexVert</span><span lang=EN-US style='color:black'> = -(</span><span lang=EN-US>Tex</span><span lang=EN-US style='color:black'>[</span><span lang=EN-US
style='color:red'>0</span><span lang=EN-US style='color:black'>] + </span><span lang=EN-US>Tex</span><span lang=EN-US style='color:black'>[</span><span lang=EN-US
style='color:red'>5</span><span lang=EN-US style='color:black'>] + </span><span
lang=EN-US style='color:red'>2</span><span lang=EN-US style='color:black'>*</span><span lang=EN-US>Tex</span><span lang=EN-US style='color:black'>[</span><span lang=EN-US
style='color:red'>3</span><span lang=EN-US style='color:black'>]);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>TexVert</span><span lang=EN-US style='color:black'> += (</span><span lang=EN-US>Tex</span><span lang=EN-US style='color:black'>[</span><span lang=EN-US
style='color:red'>2</span><span lang=EN-US style='color:black'>] + </span><span lang=EN-US>Tex</span><span lang=EN-US style='color:black'>[</span><span lang=EN-US
style='color:red'>7</span><span lang=EN-US style='color:black'>] + </span><span
lang=EN-US style='color:red'>2</span><span lang=EN-US style='color:black'>*</span><span lang=EN-US>Tex</span><span lang=EN-US style='color:black'>[</span><span lang=EN-US
style='color:red'>4</span><span lang=EN-US style='color:black'>]);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// Horizontal</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>TexHorz</span><span lang=EN-US style='color:black'> = -(</span><span lang=EN-US>Tex</span><span lang=EN-US style='color:black'>[</span><span lang=EN-US
style='color:red'>0</span><span lang=EN-US style='color:black'>] + </span><span lang=EN-US>Tex</span><span lang=EN-US style='color:black'>[</span><span lang=EN-US
style='color:red'>2</span><span lang=EN-US style='color:black'>] + </span><span
lang=EN-US style='color:red'>2</span><span lang=EN-US style='color:black'>*</span><span lang=EN-US>Tex</span><span lang=EN-US style='color:black'>[</span><span lang=EN-US
style='color:red'>1</span><span lang=EN-US style='color:black'>]);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>TexHorz</span><span lang=EN-US style='color:black'> += (</span><span lang=EN-US>Tex</span><span lang=EN-US style='color:black'>[</span><span lang=EN-US
style='color:red'>5</span><span lang=EN-US style='color:black'>] + </span><span lang=EN-US>Tex</span><span lang=EN-US style='color:black'>[</span><span lang=EN-US
style='color:red'>7</span><span lang=EN-US style='color:black'>] + </span><span
lang=EN-US style='color:red'>2</span><span lang=EN-US style='color:black'>*</span><span lang=EN-US>Tex</span><span lang=EN-US style='color:black'>[</span><span lang=EN-US
style='color:red'>6</span><span lang=EN-US style='color:black'>]);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:#880000'>sqrt</span><span lang=EN-US style='color:black'>(
</span><span lang=EN-US>TexHorz</span><span lang=EN-US style='color:black'>*</span><span
lang=EN-US>TexHorz</span><span lang=EN-US style='color:black'> + </span><span
lang=EN-US>TexVert</span><span lang=EN-US style='color:black'>*</span><span
lang=EN-US>TexVert</span><span lang=EN-US style='color:black'> );</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:#880000'>saturate</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US>Out</span><span lang=EN-US
style='color:black'>);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'> *= </span><span
lang=EN-US style='color:red'>4</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>w</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>.f;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>return</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>Out</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>}</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span style='color:black'>이 쉐이더 코드를
적용하면 다음과 같은 장면을 얻을 수 있습니다<span lang=EN-US>.</span></span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'><img border=0 width=273 height=204
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image128.jpg">&nbsp;<img border=0 width=274
height=204 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image129.jpg"></span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&lt;</span><span style='color:black'>소벨<span lang=EN-US>(Sobel)
</span>마스크에 의한 윤곽선<span lang=EN-US>&gt;</span></span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span style='color:black'>소벨 마스크와
함께 또한 가장 많이 사용되는 마스크는 라플라시안<span lang=EN-US>(Laplacian) </span>입니다<span
lang=EN-US>. </span>이 마스크는 이론적으로 <span lang=EN-US>2</span>차 미분 연산자 사용하며 한 번에 하나의
마스크로 윤곽선 검출 수행 연산 속도가 매우 빠르다는 것이 가장 큰 장점입니다<span lang=EN-US>. </span></span></p>

<p class=MsoNormal style='word-break:keep-all'><span style='color:black'>결과는 다른
연산자와 비교하여 날카로운 윤곽선을 만들어 내는 것이 특징입니다<span lang=EN-US>. </span>변화에 대한 <span
lang=EN-US>(G: Gradient)</span>는 각 변화에 대한 합으로 다음과 같이 간단하게 계산합니다<span
lang=EN-US>.</span></span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US><sub><img
border=0 width=67 height=27 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image130.gif"></sub></span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'>쉐이더 코드는 다음과 같이 작성합니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:blue'>float4</span><span lang=EN-US style='color:black'> </span><span
lang=EN-US style='color:#880000'>PxlLaplacian</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:blue'>SvsOut</span><span
lang=EN-US style='color:black'> </span><span lang=EN-US>In</span><span
lang=EN-US style='color:black'>) : </span><span lang=EN-US style='color:blue'>COLOR0</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>{</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>&nbsp; </span><span
lang=EN-US>Mono</span><span lang=EN-US style='color:black'>={</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>299</span><span lang=EN-US style='color:black'>, </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>587</span><span lang=EN-US style='color:black'>, </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:red'>114</span><span lang=EN-US style='color:black'>, </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>};</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float3</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>Laplacian</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US style='color:red'>9</span><span lang=EN-US style='color:black'>] =</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {-</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>,-</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>, -</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>}, { </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>,-</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>, -</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>}, { </span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>,-</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>, -</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>},&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// offset X, offset y, Weight</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {-</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>, </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>, -</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>}, { </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>, </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>,&nbsp;
</span><span lang=EN-US style='color:red'>8</span><span lang=EN-US
style='color:black'>}, { </span><span lang=EN-US style='color:red'>1</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US style='color:black'>, -</span><span lang=EN-US style='color:red'>1</span><span
lang=EN-US style='color:black'>},</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {-</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>, </span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>, -</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>}, { </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>, </span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>, -</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>}, { </span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>, </span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>, -</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>},</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; };</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'>=</span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>,</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>,</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>,</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>&nbsp; </span><span
lang=EN-US>txC</span><span lang=EN-US style='color:black'>=</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float2</span><span lang=EN-US style='color:black'>&nbsp; </span><span
lang=EN-US>uv</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float</span><span lang=EN-US style='color:black'>&nbsp;&nbsp; </span><span
lang=EN-US>x, y, w</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>for</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US style='color:blue'>int</span><span lang=EN-US style='color:black'> </span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>=</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>; </span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>&lt;</span><span
lang=EN-US style='color:red'>9</span><span lang=EN-US style='color:black'>; ++</span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>)</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>x</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>Laplacian</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>x</span><span lang=EN-US style='color:black'>/m_TexW;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>y</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>Laplacian</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>y</span><span lang=EN-US style='color:black'>/m_TexH;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>w</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>Laplacian</span><span lang=EN-US style='color:black'>[</span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>].</span><span
lang=EN-US>z</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>uv</span><span lang=EN-US style='color:black'>&nbsp; = </span><span
lang=EN-US>In</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US style='color:black'>
+ </span><span lang=EN-US style='color:blue'>float2</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US>x</span><span lang=EN-US
style='color:black'>, </span><span lang=EN-US>y</span><span lang=EN-US
style='color:black'>);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>txC</span><span lang=EN-US style='color:black'>+= </span><span
lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US style='color:
black'>(</span><span lang=EN-US>smpDif</span><span lang=EN-US style='color:
black'>, </span><span lang=EN-US>uv</span><span lang=EN-US style='color:black'>)*</span><span
lang=EN-US>w</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>d</span><span lang=EN-US style='color:black'>=dot(</span><span
lang=EN-US>txC</span><span lang=EN-US style='color:black'>, </span><span
lang=EN-US>Mono</span><span lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>d</span><span lang=EN-US style='color:black'> *=</span><span
lang=EN-US style='color:red'>30</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'>.xyz = </span><span
lang=EN-US>d</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>return</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>Out</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>}</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'><img border=0 width=272 height=204
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image131.jpg">&nbsp;<img border=0 width=273
height=204 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image132.jpg">&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&lt;</span><span style='color:black'>라플라시안<span lang=EN-US>(Laplacian)
</span>마스크에 의한 윤곽선<span lang=EN-US>&gt;</span></span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span style='color:black'>이렇게 외곽선
추출은 이웃한 색상의 변화 량<span lang=EN-US>(Gradient)</span>를 조사해서 이 값의 크기를 색상으로 결정하는 것입니다<span
lang=EN-US>. </span>외곽선 추출이 이런 내용이라면 마스킹 값을 이용하지 않고 직접 변화 량을 계산해서 적용해 볼 수 있습니다<span
lang=EN-US>. </span>지금 소개하려는 방법은 색상<span lang=EN-US> r, g, b</span>를<span
lang=EN-US> 3</span>차원 좌표<span lang=EN-US> x, y, z</span>처럼 생각해서 두 색상의 변화 량을 </span><span
lang=EN-US><sub><img border=0 width=265 height=31
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image133.gif"></sub></span>으로 계산해 보자는 것입니다<span
lang=EN-US>. </span>이 방법은 앞의 방법보다 제곱 근 계산이 들어가서 무겁지만 본래의 의도에 가장 충실한 방법이 될 것입니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US><sub><img
border=0 width=281 height=31 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image134.gif"></sub></span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'>이것은 다음과 같이 쉐이더 코드로 쉽게 표현할 수 있습니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:blue'>float4</span><span lang=EN-US style='color:black'> </span><span
lang=EN-US style='color:#880000'>PxlDist</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:blue'>SvsOut</span><span
lang=EN-US style='color:black'> </span><span lang=EN-US>In</span><span
lang=EN-US style='color:black'>) : </span><span lang=EN-US style='color:blue'>COLOR0</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>{</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'>=</span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>,</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>,</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>,</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float2</span><span lang=EN-US style='color:black'>&nbsp; </span><span
lang=EN-US>uv</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float3</span><span lang=EN-US style='color:black'>&nbsp; </span><span
lang=EN-US>txI</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float3</span><span lang=EN-US style='color:black'>&nbsp; </span><span
lang=EN-US>txC</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float</span><span lang=EN-US style='color:black'>&nbsp;&nbsp; </span><span
lang=EN-US>D</span><span lang=EN-US style='color:black'>=</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>txI</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US style='color:
black'>(</span><span lang=EN-US>smpDif</span><span lang=EN-US style='color:
black'>, </span><span lang=EN-US>In</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>for</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US style='color:blue'>int</span><span lang=EN-US style='color:black'> </span><span
lang=EN-US>j</span><span lang=EN-US style='color:black'>=-</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>; </span><span
lang=EN-US>j</span><span lang=EN-US style='color:black'>&lt;=</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>; ++</span><span
lang=EN-US>j</span><span lang=EN-US style='color:black'>)</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>for</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US style='color:blue'>int</span><span lang=EN-US style='color:black'> </span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>=-</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>; </span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>&lt;=</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>; ++</span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'>)</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>if</span><span lang=EN-US style='color:black'>(!(</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>==</span><span
lang=EN-US>i</span><span lang=EN-US style='color:black'> &amp;&amp; </span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>==</span><span
lang=EN-US>j</span><span lang=EN-US style='color:black'>))</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>uv</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>In</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US style='color:black'>
+ </span><span lang=EN-US style='color:blue'>float2</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US>i</span><span lang=EN-US
style='color:black'>/m_TexW, </span><span lang=EN-US>j</span><span lang=EN-US
style='color:black'>/m_TexH);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>txC</span><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;
= </span><span lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US>smpDif</span><span lang=EN-US
style='color:black'>, </span><span lang=EN-US>uv</span><span lang=EN-US
style='color:black'>);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>txC</span><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp; -=
</span><span lang=EN-US>txI</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>D</span><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; +=
</span><span lang=EN-US style='color:#880000'>length</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US>txC</span><span lang=EN-US
style='color:black'>);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>D</span><span lang=EN-US style='color:black'> *=</span><span
lang=EN-US style='color:red'>3</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>if</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US>D</span><span lang=EN-US style='color:black'>&gt;</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>.)</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>rgb</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>return</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>Out</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>}</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'>코드에서 먼저 중심 픽셀의 색상을 <span
lang=EN-US>txI</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US style='color:
black'>(</span><span lang=EN-US>smpDif</span><span lang=EN-US style='color:
black'>, </span><span lang=EN-US>In</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US style='color:#A000A0'>Tex</span><span lang=EN-US style='color:black'>)
</span><span style='color:black'>으로 구한 후에<span lang=EN-US> for </span>문에서<span
lang=EN-US> length()</span>함수로 색상 차이에 대한 길이를 구하고 있습니다<span lang=EN-US>.
length()</span>함수는 내부에서<span lang=EN-US> sqrt()</span>함수를 호출해서 길이를 계산하는 함수 입니다<span
lang=EN-US>. </span>코드의 내용은 두 픽셀의 색상차이를 길이로 저장하고 있습니다<span lang=EN-US>.</span></span></p>

<p class=MsoNormal style='word-break:keep-all'><span style='color:black'>이 쉐이더 코드를
가지고 실행하면 다음과 같이 색상의 변화에서 이전의 방식 보다 좀 더 뚜렷하게 만들어 갈 수 있습니다<span lang=EN-US>.</span></span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'><img border=0 width=271 height=204
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image135.jpg"></span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&lt;</span><span style='color:black'>색상의 거리를 이용한 외곽선 추출<span
lang=EN-US>&gt;</span></span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'>예제 <span lang=EN-US><a
href="https://github.com/3dapi/dv16_shader4/raw/master/h4_07_out_line1.zip">h4_07_out_line1.zip</a> </span>를 실행하면 처음에는 거리를 이용한 외곽선
추출을 볼 수 있습니다<span lang=EN-US>. </span>다음으로<span lang=EN-US> 'S' </span>또는<span
lang=EN-US> 'L' </span>키를 누르면 각각 소벨 마스크<span lang=EN-US>, </span>라플라시안 마스크를 적용한
외곽선 추출을 볼 수 있습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'>이러한 외곽선 추출은 카툰 쉐이딩<span
lang=EN-US>, </span>수묵화<span lang=EN-US>, </span>색상의 영역 설정 등에서 두루 사용이 됩니다<span
lang=EN-US>. </span>다음의 <span lang=EN-US><a href="https://github.com/3dapi/dv16_shader4/raw/master/h4_07_out_line2.zip">h4_07_out_line2.zip</a>
</span>는 완벽한 수묵화 기법은 아니지만 외곽선만 조정해서 수묵화 느낌을 살린 예제입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US><img border=0
width=302 height=227 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image136.jpg"></span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&lt;</span>외곽선을
이용한 수묵화 <span lang=EN-US><a href="https://github.com/3dapi/dv16_shader4/raw/master/h4_07_out_line2.zip">h4_07_out_line2.zip</a>&gt;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'>이 장면은 다음 그림과 같은 과정을 통해서 만든 것입니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US><img border=0
width=611 height=271 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image137.gif"></span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&lt;<a
href="https://github.com/3dapi/dv16_shader4/raw/master/h4_07_out_line2.zip">h4_07_out_line2.zip</a> </span>예제 제작 과정<span
lang=EN-US>&gt;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>3D </span>장면을 저장한 텍스처에서 외곽선을 추출합니다<span
lang=EN-US>. </span>여기서 사용한 외곽선은 거리를 이용한 방법입니다<span lang=EN-US>. </span>외곽선을 그대로
사용하면 좁고<span lang=EN-US>, </span>날카롭습니다<span lang=EN-US>. </span>붓 터치 느낌을 만들기 위해
흐림 효과를 반복 적용합니다<span lang=EN-US>. </span>흐림 효과를 반복 적용하면 밝기가 많이 낮아집니다<span
lang=EN-US>. </span>따라서 강하게 색상을 반전 시키면 먹물 느낌을 만들어 낼 수 있습니다<span lang=EN-US>. </span>준비한
배경 텍스처와 혼합하면 앞의 장면을 만들어 낼 수 있습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US><a href="https://github.com/3dapi/dv16_shader4/raw/master/h4_07_out_line2.zip">h4_07_out_line2.zip</a></span>의
<span lang=EN-US>CShaderEx::FrameMove() </span>함수에서 원 장면에서 외곽선을 추출하고 흐림 효과를 적용하고
있습니다<span lang=EN-US>. CShaderEx::Render() </span>함수에서는 강하게 반전<span lang=EN-US>(Inversion)</span>한
후에 배경 텍스처와 혼합하는 작업을 하고 있습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt'>4.5.5 </span><span
style='font-size:12.0pt'>수묵과 렌더링</span></p>

<p class=MsoNormal>수묵화 렌더링 기법은 조명과 외곽선 추출을 이용한 방법입니다<span lang=EN-US>. </span>보통
조명에서 밝은 부분은 밝게 어두운 부분은 어둡게 처리하지만 수묵화에서는 이와 반대로 밝은 부분은 어둡게 어두운 부분은 밝게 처리합니다<span
lang=EN-US>. </span>이렇게 해야만 먹물로 그림을 그린 느낌을 만듭니다<span lang=EN-US>. </span>붓에 의한 번짐을
표현하기 위해서 밝고 어둠의 반전을 만든 후에 흐림 효과를 적용합니다<span lang=EN-US>. </span>이렇게 만든 것을 텍스처에 저장을
합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>다음으로 외곽선을 렌더링 오브젝트에서 추출합니다<span lang=EN-US>. </span>이 때 깔끔한 외곽선을
만들기 위해서 색상의 변화를 가장 잘 만들 수 있는 오브젝트의 법선 값<span lang=EN-US>, </span>또는 깊이 값을 색상으로 저장해서
이 저장된 텍스처에서 외곽선을 추출합니다<span lang=EN-US>. </span>추출한 텍스처를 역시 흐림 효과를 적용 합니다<span
lang=EN-US>. </span>마지막으로 앞서 반전을 이용해 만든 구한 텍스처와 외곽선을 만든 텍스처와 혼합합니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이 과정을 그림으로 표현하면 다음과 같습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=612 height=269
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image138.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;</span>수묵화 렌더링 과정<span lang=EN-US>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>앞에서 인접한 색상의 차이가 클 수록 외곽선이 잘 표현된다는 것을 알았습니다<span lang=EN-US>.
</span>주변 색상과 의도적으로 차이를 만들기 위해 오브젝트의 깊이 값 또는 법선 벡터를 텍스처에 저장해서 사용하는데 여기서는 깊이 값을 사용하도록
하겠습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>깊이 값을 저장하는 방법은 간단합니다<span lang=EN-US>. </span>먼저 정점 처리과정에서 위치에
대한 변환 후의 값을 텍스처 좌표 값으로 저장합니다<span lang=EN-US>. </span>다음으로 픽셀 처리과정에서 쉐이더로 이 값을 실시간으로
만든 텍스처에 저장합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>깊이 값을 저장하기 위해서 정점 쉐이더는 다음과 같이 작성합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:blue'>float4x4</span><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>m_mtWVP</span><span lang=EN-US style='color:black'>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// World * View * Projection</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>…</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:green'>// </span><span style='color:green'>버텍스 쉐이더 출력</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:blue'>struct</span><span lang=EN-US style='color:black'> </span><span
lang=EN-US style='color:blue'>SvsOut</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>{</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US style='color:#A000A0'>Pos </span><span lang=EN-US
style='color:black'>: </span><span lang=EN-US style='color:blue'>POSITION</span><span
lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>…</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>Nrp</span><span lang=EN-US style='color:black'> : </span><span
lang=EN-US style='color:blue'>TEXCOORD7</span><span lang=EN-US
style='color:black'>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// Normal vector+ </span><span style='color:
green'>깊이 값</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>};</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:blue'>SvsOut</span><span lang=EN-US style='color:black'> </span><span
lang=EN-US style='color:#880000'>InkVtx</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:blue'>float3</span><span
lang=EN-US style='color:black'> </span><span lang=EN-US style='color:#A000A0'>Pos</span><span
lang=EN-US style='color:black'> : </span><span lang=EN-US style='color:blue'>POSITION</span><span
lang=EN-US style='color:black'>)</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>{</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>SvsOut</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>Out</span><span lang=EN-US style='color:black'> = (</span><span
lang=EN-US style='color:blue'>SvsOut</span><span lang=EN-US style='color:black'>)</span><span
lang=EN-US style='color:red'>0</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>…</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>P</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:#880000'>mul</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>(</span><span
lang=EN-US style='color:#A000A0'>Pos</span><span lang=EN-US style='color:black'>,</span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>), </span><span
lang=EN-US>m_mtWVP</span><span lang=EN-US style='color:black'>);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// </span><span style='color:green'>정점 위치 변환</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>Nrp</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>w</span><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
</span><span lang=EN-US>P</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>z</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>return</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>Out</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>}</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;</span></p>

<p class=MsoNormal>보통 정점 처리 과정에서 만든 데이터를 픽셀 쉐이더로 보낼 때 참조가 안 되는 값들은 텍스처 좌표 데이터<span
lang=EN-US>(TEXCOORD7~0)</span>를 선택해서 사용합니다<span lang=EN-US>. </span>예를 들어 정점의 위치를
픽셀 쉐이더로 전달할 수 있지만 값은 읽지 못합니다<span lang=EN-US>. </span>이런 이유로 앞의 쉐이더 코드는 변환 후의 정점의
깊이 값을<span lang=EN-US> 7</span>번 인덱스 텍스처 좌표의<span lang=EN-US> w </span>값에 저장한 것입니다<span
lang=EN-US>. </span>또한 깊이 값만 사용하고 있어서 새로운 텍스처 인덱스를 부여하면 다른 곳에서 사용할 수 있는 폭이 줄어 들기
때문입니다<span lang=EN-US>.</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span style='color:black'>픽셀 쉐이더는
정점의 깊이 값을 텍스처에 쓰기만 하면 될 것 같지만 변환 후의 깊이 값은 거의<span lang=EN-US> 1</span>근처에 몰려 있습니다<span
lang=EN-US>. </span>따라서 이 값을 적당한 값으로 나누어야 하는데 대략 뷰 체적<span lang=EN-US>(View
Volume) </span>때<span lang=EN-US> Far </span>평면까지의 거리 값을 사용해도 되고<span
lang=EN-US>, </span>색상의 범위가<span lang=EN-US> [0, 255] </span>이므로 이것의<span
lang=EN-US> 2 </span>배 정도 되는<span lang=EN-US> 500 </span>정도 되는 값을 사용해도 됩니다<span
lang=EN-US>.</span></span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:blue'>float4</span><span lang=EN-US style='color:black'> </span><span
lang=EN-US style='color:#880000'>InkPxlDepth</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:blue'>SvsOut</span><span
lang=EN-US style='color:black'> </span><span lang=EN-US>In</span><span
lang=EN-US style='color:black'>) : </span><span lang=EN-US style='color:blue'>COLOR0</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>{</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>&nbsp; </span><span
lang=EN-US>Nrp</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>In</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>Nrp</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float</span><span lang=EN-US style='color:black'>&nbsp;&nbsp; </span><span
lang=EN-US>d</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>d</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>Nrp</span><span lang=EN-US style='color:black'>.</span><span
lang=EN-US>w</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>d</span><span lang=EN-US style='color:black'> /=</span><span
lang=EN-US style='color:red'>500</span><span lang=EN-US style='color:black'>.f;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'>.xyz = </span><span
lang=EN-US>d</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>return</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>Out</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>깊이 값을 텍스처에 저장할 수 있으니 이제 외곽선 만드는 것이 남았습니다<span lang=EN-US>. </span>이
과정은 예제 <span lang=EN-US><a href="https://github.com/3dapi/dv16_shader4/raw/master/h4_07_out_line2_ink1_edge.zip">h4_07_out_line2_ink1_edge.zip</a></span>에
순서대로 구현되어 있습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>먼저 깊이 값을 저장하고 이것을 외곽선으로 사용하기 위해서 다음과 같이 깊이 값 텍스처와 임시 버퍼를 준비합니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:blue'>IrenderTarget</span><span
lang=EN-US style='color:black'>* </span><span lang=EN-US>m_pTrndEdg</span><span
lang=EN-US style='color:black'>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// Silhouette Edge Texture for Scene</span></p>

<p class=MsoNormal><span lang=EN-US style='color:blue'>IrenderTarget</span><span
lang=EN-US style='color:black'>* </span><span lang=EN-US>m_pTrndTmp</span><span
lang=EN-US style='color:black'>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// Blurring for Temp</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이들은 화면 크기와 동일하게 만듭니다<span lang=EN-US>. </span>다음으로 깊이 값을 저장해야
합니다<span lang=EN-US>. </span><span lang=EN-US>CShaderEx:: FrameMove() </span>함수의
중간에 보면 다음과 같은 코드로 임시 버퍼에 깊이 값을 저장하고 있는 것을 볼 수 있습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>…</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:green'>// </span><span style='color:green'>텍스처에 깊이 값을 임시 버퍼에 쓴다<span
lang=EN-US>.</span></span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>m_pTrndTmp</span><span
lang=EN-US style='color:black'>-&gt;</span><span lang=EN-US style='color:#880000'>BeginScene</span><span
lang=EN-US style='color:black'>((</span><span lang=EN-US style='color:red'>0x1L</span><span
lang=EN-US style='color:black'>|</span><span lang=EN-US style='color:red'>0x2L</span><span
lang=EN-US style='color:black'>), </span><span lang=EN-US style='color:red'>0xFFffffff</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>hr</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>m_pDev</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>SetVertexDeclaration</span><span lang=EN-US
style='color:black'>( </span><span lang=EN-US>m_pFVFN</span><span lang=EN-US
style='color:black'> ); </span><span lang=EN-US style='color:green'>// </span><span
style='color:green'>정점 선언</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>hr</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>m_pEft</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>SetMatrix</span><span lang=EN-US
style='color:black'>( </span><span lang=EN-US style='color:fuchsia'>&quot;m_mtWVP&quot;</span><span
lang=EN-US style='color:black'>, &amp;</span><span lang=EN-US>mtWVP</span><span
lang=EN-US style='color:black'>);&nbsp; </span><span lang=EN-US
style='color:green'>// </span><span style='color:green'>월드<span lang=EN-US>*</span>뷰<span
lang=EN-US>*</span>프로젝션 변환 행렬</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:green'>…</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>hr</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>m_pEft</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>SetTechnique</span><span lang=EN-US
style='color:black'>( </span><span lang=EN-US style='color:fuchsia'>&quot;TechInk&quot;</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>…</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>hr</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>m_pMesh</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>DrawSubset</span><span lang=EN-US
style='color:black'>( </span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US style='color:black'> );</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>…</span></p>

<p class=MsoNormal><span lang=EN-US>m_pTrndTmp</span><span lang=EN-US
style='color:black'>-&gt;</span><span lang=EN-US style='color:#880000'>EndScene</span><span
lang=EN-US style='color:black'>();</span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:green'>// Silhouette , </span><span style='color:green'>외곽선을 추출한다<span
lang=EN-US>.</span></span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>pTx</span><span
lang=EN-US style='color:black'> = (</span><span lang=EN-US style='color:blue'>PDTX</span><span
lang=EN-US style='color:black'>)</span><span lang=EN-US>m_pTrndTmp</span><span
lang=EN-US style='color:black'>-&gt;</span><span lang=EN-US style='color:#880000'>GetTexture</span><span
lang=EN-US style='color:black'>();</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US>m_pTrndEdg</span><span
lang=EN-US style='color:black'>-&gt;</span><span lang=EN-US style='color:#880000'>BeginScene</span><span
lang=EN-US style='color:black'>();</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>hr</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>m_pDev</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>SetVertexDeclaration</span><span lang=EN-US
style='color:black'>( </span><span lang=EN-US>m_pFVFD</span><span lang=EN-US
style='color:black'> );</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>hr</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>m_pEft</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>SetTechnique</span><span lang=EN-US
style='color:black'>( </span><span lang=EN-US style='color:fuchsia'>&quot;TechInk&quot;</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>hr</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>m_pDev</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>SetTexture</span><span lang=EN-US
style='color:black'>( </span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US>pTx</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>…</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>hr</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>m_pDev</span><span lang=EN-US style='color:black'>-&gt;</span><span
lang=EN-US style='color:#880000'>DrawPrimitiveUP</span><span lang=EN-US
style='color:black'>(…);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>…</span></p>

<p class=MsoNormal><span lang=EN-US>m_pTrndEdg</span><span lang=EN-US
style='color:black'>-&gt;</span><span lang=EN-US style='color:#880000'>EndScene</span><span
lang=EN-US style='color:black'>();</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>코드의 내용은 먼저 임시 버퍼에 오브젝트의 깊이 값을 기록한 후에 외곽선을 추출하고 있습니다<span
lang=EN-US>. </span>외곽선 추출은<span lang=EN-US> &quot;hlsl.fx&quot;</span>의 <span
lang=EN-US>InkPxlEdge() </span>함수로 구현되어 있는데 소벨<span lang=EN-US>(Sobel) </span>마스크를
이용했는데 이 부분의 설명은 앞의 외곽선 추출을 참고 하기 바랍니다<span lang=EN-US>. </span>이렇게 외곽선 추출이 끝나면 이를
그대로 사용해도 되나 먹물의 번짐 효과를 고려해서 흐림 효과를 적용합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>임시 버퍼에 기록된 깊이 값과 외곽선 추출 후<span lang=EN-US>, </span>흐림 효과 적용에
대한 화면 출력은 다음과 같습니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=182 height=136
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image139.jpg">&nbsp;<img border=0 width=182
height=136 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image140.jpg">&nbsp;<img border=0
width=182 height=136 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image141.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;<a href="https://github.com/3dapi/dv16_shader4/raw/master/h4_07_out_line2_ink1_edge.zip">h4_07_out_line2_ink1_edge.zip</a>:
</span>값<span lang=EN-US>, </span>외곽선 추출<span lang=EN-US>, </span>흐림 효과 적용<span
lang=EN-US>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>2</span>단계의 몸체에 대한 처리는 조명의 반사에 대한 밝기를 이용합니다<span
lang=EN-US>. </span>일반적으로<span lang=EN-US> 3D</span>에서 밝은 부분은 밝게 처리하지만 수묵화에서는 이를
반대로 처리해서 밝은 부분에는 먹물을 진하게 적용하고 어두운 부분은 엷게 처리합니다<span lang=EN-US>.</span></p>

<p class=MsoNormal>또한 반사의 밝기는<span lang=EN-US> Lambert </span>분산 값과<span
lang=EN-US> Phong </span>반사 값을 더해서 사용하지만 수묵화에서는 이 둘을 곱해 버립니다<span lang=EN-US>. </span>이렇게
되면 밝은 부분과 어두운 부분의 차이가 극대화 되어 부수적으로 여백의 미<span lang=EN-US>(</span>美<span
lang=EN-US>)</span>도 어느 정도 표현이 됩니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이 정도의 지식만으로 몸체에 대한 색 처리를 할 수 있는데 여기에 하나 더 카툰<span
lang=EN-US>(Cartoon) </span>쉐이딩에서 사용한 기법을 적용하면 농담의 변화가 연속이 아닌 이산<span
lang=EN-US>(Discrete) </span>값으로 나타나 붓 느낌을 살립니다<span lang=EN-US>. </span>또한 밝기에
대한 변화를 카툰 쉐이딩의 반대로 다음과 같이 밝은 부분은 어두운 곳이 샘플링 되고 반대로 어두운 부분은 밝은 곳이 샘플링 되도록 만듭니다<span
lang=EN-US>. </span>그리고 의도적으로 흰색 부분을 많이 넣어서 여백의 미를 만들 수 있도록 합니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=432 height=55
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image142.gif"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;</span>수묵화 쉐이딩 텍스처<span lang=EN-US>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>쉐이더 작성은 카툰 쉐이더와 같습니다<span lang=EN-US>. </span>단지<span
lang=EN-US> Lambert </span>확산 값<span lang=EN-US>(Dif)</span>과<span lang=EN-US>
Phong </span>반사 값<span lang=EN-US>(Spc)</span>을 곱하고 수묵화 쉐이딩 텍스처에서 샘플링 하는 것이 차이 입니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:blue'>float4</span><span lang=EN-US style='color:black'> </span><span
lang=EN-US style='color:#880000'>InkPxlInv</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US style='color:blue'>SvsOut</span><span
lang=EN-US style='color:black'> </span><span lang=EN-US>In</span><span
lang=EN-US style='color:black'>) : </span><span lang=EN-US style='color:blue'>COLOR0</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>{</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>float4</span><span lang=EN-US style='color:black'>&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:red'>1</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>…</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Nor</span><span lang=EN-US style='color:black'>.xyz = </span><span
lang=EN-US>Nrp</span><span lang=EN-US style='color:black'>.xyz;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Nor</span><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp; =
</span><span lang=EN-US style='color:#880000'>normalize</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US>Nor</span><span lang=EN-US
style='color:black'>);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Dif</span><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp; =
</span><span lang=EN-US style='color:#880000'>saturate</span><span lang=EN-US
style='color:black'>( </span><span lang=EN-US style='color:#880000'>dot</span><span
lang=EN-US style='color:black'>(</span><span lang=EN-US>Nor</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US>Lgt</span><span
lang=EN-US style='color:black'>));</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Spc&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:black'>= </span><span lang=EN-US style='color:#880000'>saturate</span><span
lang=EN-US style='color:black'>((</span><span lang=EN-US style='color:#880000'>dot</span><span
lang=EN-US style='color:black'>(</span><span lang=EN-US>Rfc</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US>Eye</span><span
lang=EN-US style='color:black'>) + </span><span lang=EN-US style='color:red'>1</span><span
lang=EN-US style='color:black'>) *.</span><span lang=EN-US style='color:red'>5</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Spc&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='color:black'>= </span><span lang=EN-US style='color:#880000'>pow</span><span
lang=EN-US style='color:black'>( </span><span lang=EN-US>Spc</span><span
lang=EN-US style='color:black'>, </span><span lang=EN-US>m_fShrp</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Spc&nbsp;&nbsp; </span><span lang=EN-US style='color:black'>&nbsp;*=
</span><span lang=EN-US style='color:red'>7</span><span lang=EN-US
style='color:black'>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// Lambert </span><span style='color:green'>값과<span
lang=EN-US> Phong </span>반사 값을 곱한다<span lang=EN-US>.</span></span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US>Dif</span><span lang=EN-US style='color:black'> * </span><span
lang=EN-US>Spc</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>// </span><span style='color:green'>수묵화 쉐이딩 텍스처에서
샘플링 한다<span lang=EN-US>.</span></span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>Out</span><span lang=EN-US style='color:black'> = </span><span
lang=EN-US style='color:#880000'>tex2D</span><span lang=EN-US style='color:
black'>(</span><span lang=EN-US>smp0</span><span lang=EN-US style='color:black'>,
</span><span lang=EN-US style='color:blue'>float2</span><span lang=EN-US
style='color:black'>(</span><span lang=EN-US>Out</span><span lang=EN-US
style='color:black'>.</span><span lang=EN-US>x</span><span lang=EN-US
style='color:black'>, </span><span lang=EN-US style='color:red'>0</span><span
lang=EN-US style='color:black'>.</span><span lang=EN-US style='color:red'>5f</span><span
lang=EN-US style='color:black'>));</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='word-break:keep-all'><span lang=EN-US
style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:blue'>return</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US>Out</span><span lang=EN-US style='color:black'>;</span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>}</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이렇게 수묵화 쉐이딩 텍스처를 처리하고 나서 흐림 효과를 적용하면 다음의 오른쪽 그림을 얻을 수 있습니다<span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=182 height=136
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image143.jpg">&nbsp;<img border=0 width=182
height=136 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image144.jpg">&nbsp;<img border=0
width=181 height=136 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image145.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;<a href="https://github.com/3dapi/dv16_shader4/raw/master/h4_07_out_line2_ink2_ink.zip">h4_07_out_line2_ink2_ink.zip</a>:
</span>일반 조명<span lang=EN-US>, </span>수묵화 텍스처<span lang=EN-US>, </span>흐림 효과<span
lang=EN-US>&gt;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal>이제 앞의 외곽선과 합치는 일만 남아 있습니다<span lang=EN-US>. </span>둘을 합치고 배경
텍스처를 혼합하면 다음과 같은 장면을 만들어냅니다<span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=272 height=204
src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image146.jpg">&nbsp;<img border=0 width=272
height=204 src="https://github.com/3dapi/dv16_shader4/raw/master/3dgame_shader4.files/image147.jpg"></span></p>

<p class=MsoNormal><span lang=EN-US>&lt;<a href="https://github.com/3dapi/dv16_shader4/raw/master/h4_07_out_line2_ink3.zip">h4_07_out_line2_ink3.zip</a>&gt;</span></p>
<br>
<br>

</div>

<?php
	include '../base/lc_tail.php';
?>
